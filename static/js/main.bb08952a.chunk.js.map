{"version":3,"sources":["Firebase.tsx","images/emptyprojectphoto.svg","components/profiledetails/DisplayProfileImage.tsx","components/community/SearchFriends.tsx","components/Community.tsx","images/backgroundprimerio.png","images/backgroundsegundo.png","images/backgroundterceiro.png","components/Login.tsx","components/projects/DisplayProjectImage.tsx","components/projects/ProjectThumbnail.tsx","images/circle.svg","images/projectsicon.svg","images/queueicon.svg","images/stash.svg","images/handspun.svg","images/tools.svg","images/favoritesicon.svg","images/libraryicon.svg","components/Notebook.tsx","components/projects/projectsSliceOtherUser.tsx","components/store/otherUserInfoSlice.tsx","components/projects/SelectOptions.tsx","components/profiledetails/DisplayProfileDetail.tsx","images/friendsicon.svg","images/forumsicon.svg","images/commentsicon.svg","components/Profile.tsx","components/profiledetails/EditProfile.tsx","images/recap.jpg","components/Welcome.tsx","images/logo.svg","components/Signup.tsx","components/projects/projectsSlice.tsx","components/projects/Breadcrumbs.tsx","components/NewProject.tsx","components/common/classes.tsx","components/patterns/categories.tsx","components/projects/YarnInfo.tsx","components/projects/DisplaySingleNeedle.tsx","components/projects/DisplaySingleHook.tsx","components/projects/EditProject.tsx","components/projects/DisplayYarn.tsx","components/projects/ProjectItem.tsx","components/projects/DisplayProgress.tsx","components/projects/AboutPattern.tsx","images/uploadphoto.svg","images/edit.svg","images/delete.svg","components/projects/DisplayProject.tsx","components/store/userInfoSlice.tsx","images/more-vertical.svg","components/Friends.tsx","components/profiledetails/DisplayProfileMenu.tsx","images/peopleicon.svg","components/community/DisplayCommunityMenu.tsx","components/Navigation.tsx","App.tsx","components/store/store.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","startDB","app","initializeApp","db","getFirestore","initFirebaseAuth","onAuthStateChanged","getAuth","authStateObserver","uploadPhoto","projectid","file","a","auth","currentUser","filePath","uid","name","newImageRef","ref","getStorage","uploadBytesResumable","fileSnapshot","getDownloadURL","publicImageUrl","projectRef","doc","database","updateDoc","imageUrl","storageUri","metadata","fullPath","console","log","deletePhoto","user","getDoc","projectSnap","exists","photoURI","data","storage","photoreference","deleteObject","then","catch","error","uploadProfilePhoto","createUser","email","password","username","nameSelected","checkUniqueUsername","createUserWithEmailAndPassword","userCredential","startEmptyProfile","errorMessage","message","alert","userId","setDoc","docRef","all","arrayUnion","userid","addInfoToProfile","imageurl","personalsite","selectedcountry","yearsknitting","yearscrocheting","petskids","favoritecolors","favecurseword","aboutme","userRef","addFriendDB","friendusername","friendslist","removeFriendDB","arrayRemove","fetchUserInfo","getDocs","collection","querySnapshot","fetchOtherUserInfo","getUserID","undefined","signIn","signInWithEmailAndPassword","errorCode","code","signOutUser","signOut","docSnap","usernames","usernamesarray","userOnArray","find","element","getUserProfileInformation","alldata","profileinfo","getUserProfileImage","desiredusername","lowercaseusername","toLowerCase","usernameisunique","i","length","checkUniqueProjectName","desiredprojectname","cleanProjectName","trim","replace","projectNamesRef","q","query","where","docs","currentCount","docId","forEach","id","count","projectNameRef","increment","addDoc","getInfo","infotofetch","userinfo","getFriends","getProfilePic","frienduserid","getOtherUserInfo","deleteProject","deleteDoc","addProjectToNotebook","craftType","projectslug","projectname","patternused","patternname","crafttype","pattern","about","projectinfo","madefor","linktoraveler","finishby","sizemade","patternfrom","patterncategory","tags","needles","hooks","gauge","numberStsOrRepeats","horizontalunits","numberRows","gaugesize","gaugepattern","yarn","projectnotes","projectstatus","progressstatus","progressrange","happiness","starteddate","completeddate","linkToRaveler","usernamelowercase","userExists","fetchCommunityMembers","allusers","userdata","push","searchUser","updateProjectInDB","currentprojectid","crafttypeUpdated","projectslugUpdated","projectnameUpdated","patternusedUpdated","patternnameUpdated","aboutUpdated","madeforUpdated","linktoravelerUpdated","finishbyUpdated","sizemadeUpdated","patternfromUpdated","patterncategoryUpdated","tagsUpdated","needlesUpdated","hooksUpdated","numberStsOrRepeatsUpdated","horizontalunitsUpdated","numberRowsUpdated","gaugesizeUpdated","gaugepatternUpdated","yarnUpdated","projectnotesUpdated","progressstatusUpdated","progressrangeUpdated","happinessUpdated","starteddateUpdated","completeddateUpdated","DisplayProfileImage","props","className","src","emptyprojectphoto","alt","SearchFriends","useState","searchquery","setsearchquery","userfound","setuserfound","searchresultinfo","setsearchresultinfo","userpic","setuserpic","cleanusername","setcleanusername","handleSubmit","event","preventDefault","userprofileimage","onSubmit","type","placeholder","onChange","target","value","to","Community","allmembers","setallmembers","usersfetched","setusersfetched","pagination","setpagination","paginationready","setpaginationready","pagemembers","setpagemembers","pagebuttons","setpagebuttons","useEffect","fetchusers","fetchfromdb","numbermembers","numberpages","Math","ceil","pages","currentpage","slice","changePage","buttonid","currentTarget","buttonnode","document","getElementById","querySelectorAll","button","classList","remove","add","buttonclicked","Number","substring","membersonpage","membersToDisplay","neededbuttons","buttons","onClick","title","map","member","uniqid","Login","setEmail","setPassword","handlerOfChange","elementId","navigate","useNavigate","handlerOfSubmit","FirstBackground","SecondBackground","ThirdBackground","htmlFor","DisplayProjectImage","ProjectThumbnail","progress","setProgress","projectpath","setProjectpath","projectID","setProjectID","projectprogress","useronpath","state","projectphoto","Notebook","location","useLocation","newprojectpath","setnewprojectpath","useSelector","projectData","projects","otherUserProjectData","otheruserprojects","projectsToDisplay","setprojectsToDisplay","pathname","setuseronpath","usermatchespath","setusermatchespath","cleared","setcleared","projectsready","setprojectsready","prevState","updateState","Array","from","project","ProjectsIcon","QueueIcon","StashIcon","HandspunIcon","ToolsIcon","FavoritesIcon","LibraryIcon","Circle","initialState","selectedtags","projectsSliceOtherUser","createSlice","reducers","clearProjects","action","otherUserProjectFetchedFromDB","payload","actions","otherUserInfoSlice","userID","otherUserAdded","Colorways","Yarnweight","Currency","HookSizes","text","NeedleSizes","NeedleMap","Map","HookMap","Country","DisplayProfileDetails","infomap","infotodisplay","setinfotodisplay","infofinished","setinfofinished","personalsiteurl","setpersonalsiteurl","countryname","setcountryname","info","key","includes","Object","entries","selectnonemptyinfo","countrycode","countryinarray","getCountryName","copyArray","findIndex","information","get","href","Profile","dispatch","useDispatch","setUsername","userMatchesPath","setUserMatchesPath","userOnPath","setUserOnPath","userIDOnPath","setUserIDOnPath","publicImgUrl","setPublicImgUrl","otherUserProjectsFetched","setOtherUserProjectsFetched","otherUserDetailsFetched","setOtherUserDetailsFetched","notebookpath","setnotebookpath","setfriendslist","isfriend","setisfriend","friendspath","setfriendspath","numberprojects","setnumberprojects","usernameOnPath","fetchUserOtherDetails","usernameonpath","otheruserdetails","fetchFriendsList","checkIfIsFriend","userIDtoFetch","friends","loggedinuser","currentuseronpath","friendexists","infofetched","setinfofetched","fetchUserProfileInformation","dbinfo","fetchProjectsOtherUser","countprojects","addallprojects","Promise","resolve","reject","gaugeNumberSts","gaugeNumberRows","addFriend","removeFriend","newfriendlist","friendtoremove","splice","currentnameonpath","allprojects","DisplayProfileDetail","ProjectIcon","FriendsIcon","ForumIcon","CommentsIcon","EditProfile","setselectedcountry","setpersonalsite","firstname","setfirstname","setyearsknitting","setyearscrocheting","setpetskids","setfavoritecolors","setfavecurseword","setaboutme","setemail","emailready","setemailready","setinfofecthed","fileInput","useRef","functionmap","fetchEmail","fetchedemail","savePhoto","current","files","publicUrl","handleChange","elementStateFunction","accept","form","acountry","Welcome","Recap","Signup","setNameSelected","setFunctions","logo","maxLength","projectsSlice","projectDeleted","filter","projectAdded","projectFetchedFromDB","projectPhotoAdded","existingProject","projectPhotoDeleted","projectUpdated","Breadcrumbs","userprofile","setuserprofile","usernotebook","setusernotebook","profileimage","NewProject","setCraftType","projectName","setProjectName","patternName","setPatternName","nanoid","elementID","newvalue","patternUsed","elements","namedItem","uniqueProjectSlug","newpath","getPathWithUsername","profilebreadcrumbimage","setprofilebreadcrumbimage","projectordinalnumber","setprojectordinalnumber","ordinalnumber","originalnumber","floor","transformtoordinalnumber","defaultChecked","YarnEntry","yarnID","yarnname","colorway","closestcolor","dyelot","yarnweight","meterage","skeinmeterageunit","skeinweight","skeinweightunit","numberskeins","purchasedat","purchasedate","totalpaid","currency","this","selectedCategory","displaycategories","categoriesArray","item","folderTopLevel","subfolder","folderSecondLevel","folderThirdLevel","ulSelectCategory","style","border","margin","showFolderContent","folderUlChild","querySelector","display","showSubFolderContent","subfolderUlChild","showSubSubFolderContent","subsubfolderUlChild","firstKey","keys","folderli","createElement","foldername","setAttribute","textContent","addEventListener","appendChild","subfolderul","j","subfolderli","subfoldername","liparent","liparentClasses","subsubfoldername","subsubfolder","subsubfolderul","subsubfolderli","subsubsubfoldername","itemli","clickedOnItem","contains","clickedOnSubFolder","clickedOnSubsubFolder","liclicked","inputSelectCategory","eventTarget","eventTargetClasses","arrayClasses","catPath","c","currentClass","folder","YarnInfo","selectValue","setSelectValue","changeSelect","prevSelects","assign","handler","yarnName","setYarnName","setColorway","setDyelot","setMeterage","skeinWeight","setSkeinWeight","numberSkeins","setNumberSkeins","purchasedAt","setPurchasedAt","purchaseDate","setPurchaseDate","totalPaid","setTotalPaid","yarninfo","previousselectvalues","localChangeHandler","parentEventHandler","color","index","weight","cur","DisplaySingleNeedle","needle","selectid","needlesize","DisplaySingleHook","hook","hooksize","EditProject","patternAbout","setPatternAbout","setPatternUsed","projectInformation","setProjectInformation","projectStatus","setProjectStatus","happinessChecked","setHappinessChecked","needleCollection","setNeedleCollection","hookCollection","setHookCollection","selectNeedlesToRender","setSelectNeedlesToRender","needlesAdded","setNeedlesAdded","selectHooksToRender","setSelectHooksToRender","hooksAdded","setHooksAdded","showYarnForm","setShowYarnForm","yarncollection","setYarnCollection","projectSlug","setProjectSlug","setMadeFor","setprofilebreacrumbimage","projectdatafinished","setprojectdatafinished","elementDataSet","dataset","previousInfo","selectedneedle","selectedhook","indexYarnAdded","parentElement","currentyarncollection","previousStatus","JSON","stringify","displayImageComponent","setDisplayImageComponent","profileImgUrl","localHandlerOfChange","parseCollection","parse","renderYarnFromStorage","addNeedlesFromStorage","addHooksFromStorage","newneedlealias","PlusIcon","newhookalias","newYarnCollectionLength","newyarn","checked","min","max","DisplayYarn","displayHowMuch","setDisplayHowMuch","displayColorway","setDisplayColorway","colorfamilyname","setColorfamilyname","displayColorFamily","setDisplayColorFamily","displayDyelot","setDisplayDyelot","displayPurchasedAt","setDisplayPurchasedAt","displayPurchaseDate","setDisplayPurchaseDate","propsReady","setPropsReady","howmuch","getColorfamilyname","colorfamily","colorIndex","ProjectItem","separateTags","setSeparateTags","tagsSeparated","setTagsSeparated","gaugeInfo","setGaugeInfo","gaugeReady","setGaugeReady","needlesToDisplay","setNeedlesToDisplay","needlesReady","setNeedlesReady","hooksToDisplay","setHooksToDisplay","hooksReady","setHooksReady","yarnReady","setYarnReady","yarnToDisplay","setYarnToDisplay","madeforusername","setMadeforusername","itemdescription","itemvalue","tagsArray","split","showlinktouser","setshowlinktouser","numberSts","needleText","hookText","yarncollectionjson","numberofskeins","skeinWeightUnit","yarnmeterage","round","tag","DisplayProgress","status","startdate","setstartdate","completedate","setcompletedate","happinessemoji","sethapinessemoji","setprogressstatus","progressbar","setprogressbar","progressbarunfinished","setprogressbarunfinished","tofinish","width","AboutPattern","setPatternname","displayfrom","setdisplayfrom","DisplayProject","otheruserid","otheruserinfo","projectdatafromstore","currentstate","indexOf","selectProject","displayPattern","setDisplayPattern","displayCategory","setDisplayCategory","displayMadefor","setDisplayMadeFor","displayFinishby","setDisplayFinishby","displaySize","setDisplaySize","displayTags","setDisplayTags","displayNeedles","setDisplayNeedles","displayHooks","setDisplayHooks","displayGauge","setDisplayGauge","displayYarn","setDisplayYarn","displayNotes","setDisplayNotes","madeforname","setmadeforname","setphotoexists","deletephoto","photoexists","EditIcon","TrashIcon","UploadPhotoIcon","userInfoSlice","userAdded","Friends","friendsfetched","setfriendsfetched","setUsermatchespath","useronpathhasfriends","setuseronpathhasfriends","setusernameonpath","getFriendsInfo","friendsDetails","currentfriendusername","profilepic","friendimageurl","showRemoveFriendOption","divalreadyexists","newdiv","firstevent","position","top","pageY","left","pageX","para","closebox","closebutton","friendtodelete","fetchFriends","usernametofetch","friendsinfo","completePath","MoreVertical","DisplayProfileMenu","peoplepath","signoutfunction","DisplayCommunityMenu","currentuser","PeopleIcon","Navigation","menushown","setmenushown","communitymenushown","setcommunitymenushown","setPeoplePath","setNotebookpath","profileimg","setprofileimg","activateMenu","targetdiv","imagefetched","setimagefetched","fetchUserProfileImage","profileimgurl","communitynavelement","menuitem","menuitemdivselected","onMouseEnter","window","reload","App","userSignedIn","setUserSignedIn","setName","setUserID","projectsFetched","setProjectsFetched","userInfo","fetchUserData","projectsInDb","path","store","configureStore","reducer","projectsReducer","userReducer","otherUserReducer","otherUserProjectsReducer","ReactDOM","render","StrictMode","basename","process"],"mappings":"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,OAP5BC,iBAO4B,OAN5BC,qBAM4B,OAL5BC,kBAK4B,OAJ5BC,iBAI4B,OAH5BC,kBAG4B,OAF5BC,eAE4B,OAD5BC,cAC4B,EACxBC,KAAKf,OAASA,EACde,KAAKd,SAAW,GAChBc,KAAKb,SAAW,GAChBa,KAAKZ,aAAe,YACpBY,KAAKX,OAAS,GACdW,KAAKV,WAAa,cAClBU,KAAKT,cAAWzb,EAChBkc,KAAKR,kBAAoB,SACzBQ,KAAKP,iBAAc3b,EACnBkc,KAAKN,gBAAkB,QACvBM,KAAKL,kBAAe7b,EACpBkc,KAAKJ,YAAc,GACnBI,KAAKH,aAAe,GACpBG,KAAKF,eAAYhc,EACjBkc,KAAKD,SAAW,aClCbE,GAA2B,GA+fvBC,GA7fW,WAEtB,IAAMC,EAAkB,CACpB,CAAEC,KAAM,cACR,CACIC,eAAgB,WAChBC,UAAW,CACP,cACA,QACA,mBACA,WACA,UACA,QACA,QACA,OACA,SACA,eACA,QACA,YACA,UACA,UACA,WACA,OACA,SAGR,CACIC,kBAAmB,mBACnBD,UAAW,CAAC,MAAO,QAAS,UAAW,cAE3C,CACIC,kBAAmB,UACnBD,UAAW,CAAC,WAAY,QAAS,aAErC,CACIC,kBAAmB,OACnBD,UAAW,CAAC,QAAS,iBAAkB,gBAAiB,QAG5D,CACID,eAAgB,cAChBC,UAAW,CACP,MACA,OACA,YACA,QACA,MACA,UACA,aACA,mBAGR,CAAEF,KAAM,WACR,CACIG,kBAAmB,MACnBD,UAAW,CACP,WACA,SACA,aACA,SACA,SACA,uBACA,YACA,QACA,QACA,gBACA,OACA,aAGR,CACIC,kBAAmB,YACnBD,UAAW,CACP,eACA,UACA,aACA,QACA,WACA,QACA,UAGR,CACIE,iBAAkB,QAClBF,UAAW,CACP,QACA,aACA,WACA,QACA,aACA,UACA,SAGR,CACIC,kBAAmB,QACnBD,UAAW,CACP,cACA,QACA,0BACA,SACA,UACA,OACA,UAGR,CACIC,kBAAmB,MACnBD,UAAW,CACP,YACA,eACA,YACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,aAGR,CACIC,kBAAmB,UACnBD,UAAW,CACP,QACA,WACA,SACA,WACA,WACA,QACA,SAGR,CACIC,kBAAmB,aACnBD,UAAW,CACP,MACA,OACA,SACA,OACA,UACA,QACA,SACA,QACA,eAGR,CACIC,kBAAmB,iBACnBD,UAAW,CACP,aACA,WACA,mBACA,WACA,WACA,WACA,QACA,UAIR,CACID,eAAgB,OAChBC,UAAW,CACP,UACA,WACA,WACA,UACA,aACA,OACA,UACA,aACA,YACA,QACA,SACA,YACA,MACA,SACA,kBAGR,CACIC,kBAAmB,UACnBD,UAAW,CAAC,eAAgB,YAAa,QAAS,UAEtD,CACIC,kBAAmB,WACnBD,UAAW,CACP,YACA,QACA,WACA,QACA,wBAGR,CACIC,kBAAmB,OACnBD,UAAW,CACP,aACA,WACA,aACA,iBACA,UACA,cACA,YACA,eACA,eACA,mBACA,WACA,sBACA,QACA,mBACA,qBAGR,CACIC,kBAAmB,aACnBD,UAAW,CACP,qBACA,QACA,mBACA,oBACA,QACA,gBACA,eACA,WAGR,CACIC,kBAAmB,gBACnBD,UAAW,CAAC,SAAU,QAAS,WAAY,eAAgB,eAG/D,CACID,eAAgB,mBAChBC,UAAW,CACP,OACA,SACA,UACA,QACA,eACA,OACA,OACA,iBACA,SACA,QACA,SACA,YAGR,CACID,eAAgB,QAChBC,UAAW,CACP,sBACA,gBACA,QACA,cACA,uBAGR,CACIC,kBAAmB,eACnBD,UAAW,CAAC,YAAa,aAAc,eAAgB,UAE3D,CACIC,kBAAmB,UACnBD,UAAW,CAAC,SAAU,OAAQ,QAAS,QAAS,YAGpD,CACID,eAAgB,MAChBC,UAAW,CAAC,YAAa,UAAW,WAAY,QAAS,SAE7D,CACID,eAAgB,aAChBC,UAAW,CACP,eACA,yBACA,SACA,QACA,SACA,eACA,OACA,YACA,QACA,iBACA,cAKNG,EAAuC3R,SAASC,eAClD,kBAEJ0R,EAAkBC,MAAMC,OAAS,sBACjCF,EAAkBC,MAAME,OAAS,sBAiCjC,IAhCA,IAAMC,EAAoB,SAASpU,GAE/B,IAEMqU,EAFoCrU,EAAMO,OAEQ+T,cACpD,gBAGkB,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","file":"static/js/main.bb08952a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n    getFirestore,\n    doc,\n    setDoc,\n    getDoc,\n    getDocs,\n    collection,\n    updateDoc,\n    arrayUnion,\n    arrayRemove,\n    query,\n    where,\n    increment,\n    addDoc,\n    deleteDoc,\n} from \"firebase/firestore\";\nimport {\n    getDownloadURL,\n    getStorage,\n    ref,\n    uploadBytesResumable,\n    deleteObject,\n} from \"firebase/storage\";\n\nimport {\n    getAuth,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged,\n} from \"firebase/auth\";\n\nimport type {\n    Needles,\n    Hooks,\n    ProfileInformation,\n} from \"./components/common/types\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA1i11bP3s4ppzKH2MYBEkdjIlt8yW-KeU\",\n    authDomain: \"fakeravelry.firebaseapp.com\",\n    projectId: \"fakeravelry\",\n    storageBucket: \"fakeravelry.appspot.com\",\n    messagingSenderId: \"923124924710\",\n    appId: \"1:923124924710:web:b5395ff184a0068070c1e7\",\n};\n\nconst startDB = function() {\n    const app = initializeApp(firebaseConfig);\n    const db = getFirestore(app);\n    initFirebaseAuth();\n    return db;\n};\n\nconst initFirebaseAuth = function() {\n    onAuthStateChanged(getAuth(), authStateObserver);\n};\n\nconst authStateObserver = function() { };\n\nconst uploadPhoto = async function(projectid: string, file: File) {\n    try {\n        if (auth.currentUser !== null) {\n            //upload file to storage bucket\n            const filePath = `${auth.currentUser.uid}/${projectid}/${file.name}`;\n            const newImageRef = ref(getStorage(), filePath);\n            const fileSnapshot = await uploadBytesResumable(newImageRef, file);\n            const publicImageUrl = await getDownloadURL(newImageRef);\n\n            //update project\n            const projectRef = doc(\n                database,\n                \"users\",\n                auth.currentUser.uid,\n                \"projects\",\n                projectid\n            );\n            updateDoc(projectRef, {\n                imageUrl: publicImageUrl,\n                storageUri: fileSnapshot.metadata.fullPath,\n            });\n            return publicImageUrl;\n        }\n    } catch (error) {\n        console.log(error);\n        return false;\n    }\n};\n\nconst deletePhoto = async function(projectid: string) {\n    try {\n        const user = auth.currentUser;\n        if (user !== null) {\n            //get storageuri from project\n            const projectRef = doc(\n                database,\n                \"users\",\n                user.uid,\n                \"projects\",\n                projectid\n            );\n            const projectSnap = await getDoc(projectRef);\n            if (projectSnap.exists()) {\n                const photoURI = projectSnap.data().storageUri;\n                const storage = getStorage();\n                const photoreference = ref(storage, photoURI);\n                deleteObject(photoreference)\n                    .then(() => {\n                        updateDoc(projectRef, {\n                            imageUrl: \"\",\n                            storageUri: \"\",\n                        });\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            }\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst uploadProfilePhoto = async function(file: File) {\n    try {\n        if (auth.currentUser !== null) {\n            //upload file to storage bucket\n            const filePath = `${auth.currentUser.uid}/${file.name}`;\n            const newImageRef = ref(getStorage(), filePath);\n            await uploadBytesResumable(newImageRef, file);\n            const publicImageUrl = await getDownloadURL(newImageRef);\n            return publicImageUrl;\n        }\n    } catch (error) {\n        console.log(error);\n        return false;\n    }\n};\n\nconst createUser = async function(\n    email: string,\n    password: string,\n    username: string,\n    nameSelected: string\n) {\n    const checkUsernameDoesntExist = await checkUniqueUsername(username);\n    if (checkUsernameDoesntExist === true) {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in\n                const user: string = userCredential.user.uid;\n                startEmptyProfile(user, email, username, nameSelected);\n            })\n            .catch((error) => {\n                const errorMessage = error.message;\n                alert(errorMessage);\n                // ..\n            });\n    } else {\n        return \"user already exists\";\n    }\n};\n\nconst startEmptyProfile = async function(\n    userId: string,\n    email: string,\n    username: string,\n    nameSelected: string\n) {\n    try {\n        await setDoc(doc(database, \"users\", userId), {\n            username: username,\n            name: nameSelected,\n            email: email,\n        });\n    } catch (error) {\n        console.log(error);\n    }\n\n    const docRef = doc(database, \"usernames\", \"usernamescollection\");\n    try {\n        await updateDoc(docRef, {\n            all: arrayUnion({ userid: userId, username: username }),\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst addInfoToProfile = async function(\n    imageurl: string,\n    name: string,\n    personalsite: string,\n    selectedcountry: string,\n    yearsknitting: string,\n    yearscrocheting: string,\n    petskids: string,\n    favoritecolors: string,\n    favecurseword: string,\n    aboutme: string\n) {\n    try {\n        const user = auth.currentUser;\n        if (user !== null) {\n            const userRef = doc(database, \"users\", user.uid);\n            await updateDoc(userRef, {\n                imageurl: imageurl,\n                name: name,\n                personalsite: personalsite,\n                selectedcountry: selectedcountry,\n                yearsknitting: yearsknitting,\n                yearscrocheting: yearscrocheting,\n                petskids: petskids,\n                favoritecolors: favoritecolors,\n                favecurseword: favecurseword,\n                aboutme: aboutme,\n            });\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst addFriendDB = async function(friendusername: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            const userRef = doc(database, \"users\", user.uid);\n            await updateDoc(userRef, {\n                friendslist: arrayUnion(friendusername),\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst removeFriendDB = async function(friendusername: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            const userRef = doc(database, \"users\", user.uid);\n            await updateDoc(userRef, {\n                friendslist: arrayRemove(friendusername),\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\n// projects\nconst fetchUserInfo = async function() {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            const querySnapshot = await getDocs(\n                collection(database, \"users\", user.uid, \"projects\")\n            );\n            return querySnapshot;\n        } catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n};\n\nconst fetchOtherUserInfo = async function(username: string) {\n    const loggedInUser = auth.currentUser;\n    if (loggedInUser !== null) {\n        const userid = await getUserID(username);\n        if (userid === false) {\n            return \"user not found\"; //404\n        } else if (userid !== undefined) {\n            const querySnapshot = await getDocs(\n                collection(database, \"users\", userid!, \"projects\")\n            );\n            return querySnapshot;\n        }\n    }\n};\n\nconst signIn = async function(email: string, password: string) {\n    signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => { })\n        .catch((error) => {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(errorCode, errorMessage);\n        });\n};\n\nconst signOutUser = async function() {\n    signOut(auth)\n        .then(() => { })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n// no spaces\nconst getUserID = async function(username: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        const docRef = doc(database, \"usernames\", \"usernamescollection\");\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n            const usernames = docSnap.data();\n            const usernamesarray: { userid: string; username: string }[] =\n                usernames.all;\n            const userOnArray = usernamesarray.find(\n                (element) => element.username === username\n            );\n            if (userOnArray !== undefined) {\n                return userOnArray.userid;\n            } else {\n                return false;\n            }\n        }\n    }\n};\n\nconst getUserProfileInformation = async function(userId: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            const docRef = doc(database, \"users\", userId);\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                const alldata = docSnap.data();\n                const profileinfo: ProfileInformation = {\n                    username: alldata.username,\n                    imageurl: alldata.imageurl,\n                    name: alldata.name,\n                    personalsite: alldata.personalsite,\n                    selectedcountry: alldata.selectedcountry,\n                    yearsknitting: alldata.yearsknitting,\n                    yearscrocheting: alldata.yearscrocheting,\n                    petskids: alldata.petskids,\n                    favoritecolors: alldata.favoritecolors,\n                    favecurseword: alldata.favecurseword,\n                    aboutme: alldata.aboutme,\n                };\n                return profileinfo;\n            }\n        } catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n};\n\nconst getUserProfileImage = async function() {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            const docRef = doc(database, \"users\", user.uid);\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                const alldata = docSnap.data();\n                return alldata.imageurl;\n            } else {\n                return \"\";\n            }\n        } catch (error) {\n            console.log(error);\n            return \"\";\n        }\n    }\n};\n\nconst checkUniqueUsername = async function(desiredusername: string) {\n    const docRef = doc(database, \"usernames\", \"usernamescollection\");\n    const docSnap = await getDoc(docRef);\n    const lowercaseusername = desiredusername.toLowerCase();\n    if (docSnap.exists()) {\n        const usernames = docSnap.data();\n        const usernamesarray: { userid: string; username: string }[] =\n            usernames.all;\n        let usernameisunique: boolean = true;\n        for (let i = 0; i < usernamesarray.length; i++) {\n            if (usernamesarray[i].username.toLowerCase() === lowercaseusername) {\n                usernameisunique = false;\n                break;\n            }\n        }\n        return usernameisunique;\n    }\n};\n\nconst checkUniqueProjectName = async function(desiredprojectname: string) {\n    const cleanProjectName = desiredprojectname\n        .toLowerCase()\n        .trim()\n        .replace(/ /g, \"-\");\n    const user = auth.currentUser;\n    if (user !== null) {\n        const projectNamesRef = collection(\n            database,\n            \"users\",\n            user.uid,\n            \"projectnames\"\n        );\n        const q = query(projectNamesRef, where(\"name\", \"==\", cleanProjectName));\n        const docSnap = await getDocs(q);\n        if (docSnap.docs.length !== 0) {\n            // return count+1, and update count on db\n            let currentCount: number = 1;\n            let docId: string = \"\";\n            docSnap.forEach((doc) => {\n                docId = doc.id;\n                currentCount += doc.data().count;\n            });\n            const projectNameRef = doc(\n                database,\n                \"users\",\n                user.uid,\n                \"projectnames\",\n                docId\n            );\n            try {\n                await updateDoc(projectNameRef, { count: increment(1) });\n                return cleanProjectName + \"-\" + currentCount;\n            } catch (error) {\n                console.log(error);\n                return false;\n            }\n        } else {\n            // create new entry on db for choosen name\n            try {\n                await addDoc(collection(database, \"users\", user.uid, \"projectnames\"), {\n                    name: cleanProjectName,\n                    count: 1,\n                });\n                return cleanProjectName;\n            } catch (error) {\n                console.log(error);\n                return false;\n            }\n        }\n    } else {\n        return \"error\";\n    }\n};\n\nconst getInfo = async function(infotofetch: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        const docRef = doc(database, \"users\", user.uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n            // Convert to user object\n            const userinfo = docSnap.data();\n            if (infotofetch === \"username\") {\n                return userinfo.username;\n            } else if (infotofetch === \"name\") {\n                return userinfo.name;\n            } else if (infotofetch === \"both\") {\n                return [userinfo.username, userinfo.name, user.uid];\n            } else {\n                //return email\n                return userinfo.email;\n            }\n        }\n    }\n};\n\nconst getFriends = async function(userid: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        const docRef = doc(database, \"users\", userid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n            const friendslist = docSnap.data().friendslist;\n            if (friendslist === undefined) {\n                return [];\n            } else {\n                return friendslist;\n            }\n        }\n    }\n};\n\nconst getProfilePic = async function(friendusername: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        const frienduserid = await getUserID(friendusername);\n        if (frienduserid !== undefined && frienduserid !== false) {\n            const docRef = doc(database, \"users\", frienduserid);\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                const userinfo = docSnap.data();\n                return userinfo.imageurl;\n            }\n        } else {\n            return false;\n        }\n    }\n};\n\n// name and username\nconst getOtherUserInfo = async function(username: string) {\n    const loggedInUser = auth.currentUser;\n    if (loggedInUser !== null) {\n        const userid = await getUserID(username);\n        if (userid === false) {\n            return \"user not found\"; //404\n        } else if (userid !== undefined) {\n            const docRef = doc(database, \"users\", userid);\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                const userinfo = docSnap.data();\n                return [userinfo.username, userinfo.name, userid];\n            }\n        }\n    }\n};\n\nconst deleteProject = async function(projectid: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            await deleteDoc(doc(database, \"users\", user.uid, \"projects\", projectid));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst addProjectToNotebook = async function(\n    projectid: string,\n    craftType: string,\n    projectslug: string,\n    projectname: string,\n    patternused: string,\n    patternname: string\n) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        try {\n            await setDoc(doc(database, \"users\", user.uid, \"projects\", projectid), {\n                imageUrl: \"\",\n                storageUri: \"\",\n                crafttype: craftType,\n                projectslug: projectslug,\n                projectname: projectname,\n                patternused: patternused,\n                pattern: { name: patternname, about: \"\" },\n                projectinfo: {\n                    madefor: \"\",\n                    linktoraveler: \"\",\n                    finishby: \"\",\n                    sizemade: \"\",\n                    patternfrom: \"\",\n                    patterncategory: \"\",\n                    tags: \"\",\n                    needles: [],\n                    hooks: [],\n                    gauge: {\n                        numberStsOrRepeats: null,\n                        horizontalunits: \"stitches\",\n                        numberRows: null,\n                        gaugesize: \"\",\n                        gaugepattern: \"\",\n                    },\n                    yarn: \"\",\n                    projectnotes: \"\",\n                },\n                projectstatus: {\n                    progressstatus: \"inprogress\",\n                    progressrange: \"0\",\n                    happiness: \"\",\n                    starteddate: \"\",\n                    completeddate: \"\",\n                },\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst linkToRaveler = async function(username: string) {\n    const docRef = doc(database, \"usernames\", \"usernamescollection\");\n    const docSnap = await getDoc(docRef);\n    const usernamelowercase = username.toLowerCase();\n    if (docSnap.exists()) {\n        const usernames = docSnap.data();\n        const usernamesarray: { userid: string; username: string }[] =\n            usernames.all;\n        let userExists = false;\n        for (let i = 0; i < usernamesarray.length; i++) {\n            if (usernamesarray[i].username.toLowerCase() === usernamelowercase) {\n                userExists = true;\n                break;\n            }\n        }\n        if (userExists) {\n            return `/people/${username}`;\n        } else {\n            return \"\";\n        }\n    } else {\n        return \"error in db\";\n    }\n};\n\nconst fetchCommunityMembers = async function() {\n    const user = auth.currentUser;\n    let allusers: { username: string; imageurl: string }[] = [];\n    if (user !== null) {\n        try {\n            const querySnapshot = await getDocs(collection(database, \"users\"));\n            querySnapshot.forEach((doc) => {\n                const userdata = doc.data();\n                allusers.push({\n                    username: userdata.username,\n                    imageurl: userdata.imageurl,\n                });\n            });\n            return allusers;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst searchUser = async function(username: string) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        const docRef = doc(database, \"usernames\", \"usernamescollection\");\n        const docSnap = await getDoc(docRef);\n        const usernamelowercase = username.toLowerCase();\n        if (docSnap.exists()) {\n            const usernames = docSnap.data();\n            const usernamesarray: { userid: string; username: string }[] =\n                usernames.all;\n            let userExists = false;\n            for (let i = 0; i < usernamesarray.length; i++) {\n                if (usernamesarray[i].username.toLowerCase() === usernamelowercase) {\n                    userExists = true;\n                    break;\n                }\n            }\n            return userExists;\n        }\n    }\n};\n\nconst updateProjectInDB = async function(\n    currentprojectid: string,\n    crafttypeUpdated: string,\n    projectslugUpdated: string,\n    projectnameUpdated: string,\n    patternusedUpdated: string,\n    patternnameUpdated: string,\n    aboutUpdated: string,\n    madeforUpdated: string,\n    linktoravelerUpdated: string,\n    finishbyUpdated: string,\n    sizemadeUpdated: string,\n    patternfromUpdated: string,\n    patterncategoryUpdated: string,\n    tagsUpdated: string,\n    needlesUpdated: Needles[],\n    hooksUpdated: Hooks[],\n    numberStsOrRepeatsUpdated: number | null,\n    horizontalunitsUpdated: string,\n    numberRowsUpdated: number | null,\n    gaugesizeUpdated: string,\n    gaugepatternUpdated: string,\n    yarnUpdated: string,\n    projectnotesUpdated: string,\n    progressstatusUpdated: string,\n    progressrangeUpdated: string,\n    happinessUpdated: string,\n    starteddateUpdated: string,\n    completeddateUpdated: string\n) {\n    const user = auth.currentUser;\n    if (user !== null) {\n        const projectRef = doc(\n            database,\n            \"users\",\n            user.uid,\n            \"projects\",\n            currentprojectid\n        );\n        try {\n            await updateDoc(projectRef, {\n                crafttype: crafttypeUpdated,\n                projectslug: projectslugUpdated,\n                projectname: projectnameUpdated,\n                patternused: patternusedUpdated,\n                pattern: { name: patternnameUpdated, about: aboutUpdated },\n                projectinfo: {\n                    madefor: madeforUpdated,\n                    linktoraveler: linktoravelerUpdated,\n                    finishby: finishbyUpdated,\n                    sizemade: sizemadeUpdated,\n                    patternfrom: patternfromUpdated,\n                    patterncategory: patterncategoryUpdated,\n                    tags: tagsUpdated,\n                    needles: needlesUpdated,\n                    hooks: hooksUpdated,\n                    gauge: {\n                        numberStsOrRepeats: numberStsOrRepeatsUpdated,\n                        horizontalunits: horizontalunitsUpdated,\n                        numberRows: numberRowsUpdated,\n                        gaugesize: gaugesizeUpdated,\n                        gaugepattern: gaugepatternUpdated,\n                    },\n                    yarn: yarnUpdated,\n                    projectnotes: projectnotesUpdated,\n                },\n                projectstatus: {\n                    progressstatus: progressstatusUpdated,\n                    progressrange: progressrangeUpdated,\n                    happiness: happinessUpdated,\n                    starteddate: starteddateUpdated,\n                    completeddate: completeddateUpdated,\n                },\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst database = startDB();\nlet auth = getAuth();\n\nexport default startDB;\nexport {\n    createUser,\n    auth,\n    signIn,\n    signOutUser,\n    getInfo,\n    getOtherUserInfo,\n    addProjectToNotebook,\n    deleteProject,\n    updateProjectInDB,\n    uploadPhoto,\n    deletePhoto,\n    uploadProfilePhoto,\n    fetchUserInfo,\n    fetchOtherUserInfo,\n    linkToRaveler,\n    checkUniqueProjectName,\n    addInfoToProfile,\n    getUserProfileInformation,\n    addFriendDB,\n    removeFriendDB,\n    getFriends,\n    getUserID,\n    getProfilePic,\n    searchUser,\n    fetchCommunityMembers,\n    getUserProfileImage,\n};\n","export default __webpack_public_path__ + \"static/media/emptyprojectphoto.97f342c4.svg\";","import emptyprojectphoto from \"../../images/emptyprojectphoto.svg\";\n\nconst DisplayProfileImage = function(props: { imageurl: string }) {\n    if (props.imageurl === \"\" || props.imageurl === undefined) {\n        return (\n            <div className=\"profileimage\">\n                <img src={emptyprojectphoto} alt=\"emptyprofilephoto\" />\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"profileimage\">\n                <img src={props.imageurl} alt=\"profilephoto\" />\n            </div>\n        );\n    }\n};\n\nexport default DisplayProfileImage;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { searchUser, getProfilePic } from \"../../Firebase\";\nimport DisplayProfileImage from \"../profiledetails/DisplayProfileImage\";\n\nconst SearchFriends = function() {\n    const [searchquery, setsearchquery] = useState<string>(\"\");\n    const [userfound, setuserfound] = useState<boolean>(false);\n    const [searchresultinfo, setsearchresultinfo] = useState<string>(\"\");\n    const [userpic, setuserpic] = useState<string>(\"\");\n    const [cleanusername, setcleanusername] = useState<string>(\"\");\n    const handleChange = function(event: React.ChangeEvent<HTMLInputElement>) {\n        setsearchquery(event.target.value);\n        setuserfound(false);\n        setsearchresultinfo(\"\");\n        setuserpic(\"\");\n        setcleanusername(\"\");\n    };\n    const handleSubmit = async function(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        event.preventDefault();\n        // searches db for username; if user exists displays profilepic\n        const userexists = await searchUser(searchquery);\n        if (userexists) {\n            setuserfound(true);\n            const userprofileimage = await getProfilePic(searchquery);\n            setuserpic(userprofileimage);\n            setcleanusername(searchquery.toLowerCase());\n            setsearchresultinfo(\"We found a user that matches your query:\");\n        } else {\n            setsearchresultinfo(\"We couldn't find a user that matches your query.\");\n        }\n    };\n\n    return (\n        <div>\n            <form id=\"searchusers\" onSubmit={handleSubmit}>\n                <input\n                    type=\"search\"\n                    id=\"searchuser\"\n                    name=\"searchuser\"\n                    placeholder=\"username\"\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className=\"genericbutton\">\n                    Search\n                </button>\n            </form>\n            <p>{searchresultinfo}</p>\n            {userfound && (\n                <div id=\"searchresult\">\n                    <Link to={`/people/${cleanusername}`}>\n                        <DisplayProfileImage imageurl={userpic} />\n                    </Link>\n                    <Link to={`/people/${cleanusername}`}>{cleanusername}</Link>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SearchFriends;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchFriends from \"./community/SearchFriends\";\nimport { fetchCommunityMembers } from \"../Firebase\";\nimport DisplayProfileImage from \"./profiledetails/DisplayProfileImage\";\nimport uniqid from \"uniqid\";\n\ninterface Member {\n    username: string;\n    imageurl: string;\n}\n\nconst Community = function() {\n    const [allmembers, setallmembers] = useState<Member[]>([]);\n    const [usersfetched, setusersfetched] = useState<boolean>(false);\n    const [pagination, setpagination] = useState<Member[][]>([]);\n    const [paginationready, setpaginationready] = useState<boolean>(false);\n    const [pagemembers, setpagemembers] = useState<Member[]>([]);\n    const [pagebuttons, setpagebuttons] = useState<JSX.Element[]>([]);\n\n    // fetches community members from DB\n    useEffect(() => {\n        const fetchusers = async function() {\n            setusersfetched(true);\n            const fetchfromdb = await fetchCommunityMembers();\n            if (fetchfromdb !== undefined) {\n                setallmembers(fetchfromdb);\n            }\n        };\n        if (!usersfetched) {\n            fetchusers();\n        }\n    }, [usersfetched]);\n\n    // displays 10 members at a time\n    useEffect(() => {\n        const numbermembers = allmembers.length;\n        if (numbermembers > 0) {\n            const numberpages = Math.ceil(numbermembers / 10); // 10 members per page\n            let pages: Member[][] = [];\n            for (let i = 0; i < numberpages; i++) {\n                let currentpage = allmembers.slice(i * 10, (i + 1) * 10 - 1);\n                pages.push(currentpage);\n            }\n            setpagination(pages);\n            setpagemembers(pages[0]);\n            setpaginationready(true);\n        }\n    }, [allmembers]);\n    useEffect(() => {\n        const membersToDisplay = function(buttonclicked: string) {\n            const currentpage = Number(buttonclicked.substring(4));\n            const membersonpage = pagination[currentpage - 1];\n            setpagemembers(membersonpage);\n        };\n        const changePage = function(event: React.MouseEvent) {\n            const buttonid = event.currentTarget.id;\n            const buttonnode = document.getElementById(buttonid);\n            const allbuttons = document.querySelectorAll(\"button\");\n            allbuttons.forEach((button) => button.classList.remove(\"buttonactive\"));\n            if (buttonnode !== null) {\n                buttonnode.classList.add(\"buttonactive\");\n            }\n            membersToDisplay(buttonid);\n        };\n        if (paginationready) {\n            const neededbuttons = pagination.length;\n            let buttons: JSX.Element[] = [];\n            for (let i = 0; i < neededbuttons; i++) {\n                if (i === 0) {\n                    buttons.push(\n                        <button\n                            id={`page${i + 1}`}\n                            onClick={changePage}\n                            className=\"genericbutton buttonactive\"\n                        >\n                            {i + 1}\n                        </button>\n                    );\n                } else {\n                    buttons.push(\n                        <button\n                            id={`page${i + 1}`}\n                            onClick={changePage}\n                            className=\"genericbutton\"\n                        >\n                            {i + 1}\n                        </button>\n                    );\n                }\n            }\n            setpagebuttons(buttons);\n        }\n    }, [paginationready, pagination]);\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry\";\n    }, []);\n    return (\n        <div id=\"communitycontent\">\n            <h2>Fake Ravelry's members</h2>\n            <div id=\"searchfrienddiv\">\n                <p>Find a member:</p>\n                <SearchFriends />\n            </div>\n            <div id=\"friendgrid\">\n                {paginationready &&\n                    pagemembers.map((member: Member) => (\n                        <div key={uniqid()} className=\"memberthumbnail\">\n                            <Link to={`/people/${member.username}`}>\n                                <DisplayProfileImage imageurl={member.imageurl} />\n                            </Link>\n                            <Link to={`/people/${member.username}`}>{member.username}</Link>\n                        </div>\n                    ))}\n            </div>\n            <div id=\"pagination\">\n                {pagebuttons.map((button) => (\n                    <div key={uniqid()}>{button}</div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Community;\n","export default __webpack_public_path__ + \"static/media/backgroundprimerio.c0973b0c.png\";","export default __webpack_public_path__ + \"static/media/backgroundsegundo.e95aa619.png\";","export default __webpack_public_path__ + \"static/media/backgroundterceiro.6ce69c89.png\";","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signIn } from \"../Firebase\";\nimport FirstBackground from \"../images/backgroundprimerio.png\";\nimport SecondBackground from \"../images/backgroundsegundo.png\";\nimport ThirdBackground from \"../images/backgroundterceiro.png\";\n\nconst Login = function() {\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const handlerOfChange = function(\n        event: React.ChangeEvent<HTMLInputElement>\n    ) {\n        const elementId = event.target.id;\n        if (elementId === \"email\") {\n            setEmail(event.target.value);\n        } else if (elementId === \"password\") {\n            setPassword(event.target.value);\n        } else {\n            console.log(\"Something went wrong\");\n        }\n    };\n    const navigate = useNavigate();\n    const handlerOfSubmit = async function(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        event.preventDefault();\n        await signIn(email, password);\n        navigate(\"/\");\n    };\n\n    const signup = function() {\n        navigate(\"/signup\");\n    };\n    return (\n        <div id=\"loginpage\">\n            <div id=\"backgroundimages\">\n                <div>\n                    <img src={FirstBackground} alt=\"background1\" id=\"firstbackground\" />\n                </div>\n                <div>\n                    <img src={SecondBackground} alt=\"background2\" id=\"secondbackground\" />\n                </div>\n                <div>\n                    <img src={ThirdBackground} alt=\"background3\" id=\"thirdbackground\" />\n                </div>\n            </div>\n            <div id=\"login\">\n                <div id=\"insidelogin\">\n                    <h2>Log In</h2>\n                    <form onSubmit={handlerOfSubmit} id=\"loginform\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <input\n                            name=\"email\"\n                            id=\"email\"\n                            type=\"email\"\n                            onChange={handlerOfChange}\n                            value={email}\n                        />\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            name=\"password\"\n                            id=\"password\"\n                            type=\"password\"\n                            onChange={handlerOfChange}\n                            value={password}\n                        />\n                        <button type=\"submit\" className=\"frontpagebutton\" title=\"Log In\">\n                            Log In\n                        </button>\n                    </form>\n\n                    <div id=\"bigsignup\">\n                        <h3>Sign Up</h3>\n                        <h1>\n                            Fake Ravelry is a free website for knitters, crocheters, and fiber\n                            artists.\n                        </h1>\n                    </div>\n                    <button onClick={signup} className=\"frontpagebutton\" title=\"Join now\">\n                        Join now\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import emptyprojectphoto from \"../../images/emptyprojectphoto.svg\";\n\nconst DisplayProjectImage = function(props: { imageurl: string }) {\n    if (props.imageurl === \"\") {\n        return (\n            <div>\n                <img src={emptyprojectphoto} alt=\"emptyprojectphoto\" />\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <img src={props.imageurl} alt=\"projectphoto\" />\n            </div>\n        );\n    }\n};\n\nexport default DisplayProjectImage;\n","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DisplayProjectImage from \"./DisplayProjectImage\";\nimport uniqid from \"uniqid\";\n\nconst ProjectThumbnail = function(props: {\n    useronpath: string;\n    projectname: string;\n    projectphoto: string;\n    projectslug: string;\n    projectstatus: string;\n    projectprogress: string;\n    projectid: string;\n    username: string;\n}) {\n    const [progress, setProgress] = useState<string>();\n    const [projectpath, setProjectpath] = useState<string>(\"\");\n    const [projectID, setProjectID] = useState<string>(\"\");\n    let navigate = useNavigate();\n    useEffect(() => {\n        if (props.projectprogress === \"0\") {\n            setProgress(\"\");\n        } else {\n            setProgress(props.projectprogress);\n        }\n    }, [props.projectprogress]);\n\n    useEffect(() => {\n        setProjectpath(\n            \"/notebook/\" + props.useronpath + \"/projects/\" + props.projectslug\n        );\n    }, [props]);\n    useEffect(() => {\n        setProjectID(props.projectid);\n    }, [props.projectid]);\n\n    const handleClicks = function(event: React.MouseEvent) {\n        navigate(projectpath, {\n            state: { projectid: projectID },\n        });\n    };\n    return (\n        <div onClick={handleClicks} key={uniqid()} title=\"Open project\">\n            <div>\n                <p className=\"projectname\">{props.projectname}</p>\n                <div>\n                    {props.projectstatus === \"inprogress\" ? (\n                        <span className=\"projectstatusonthumbnail\">wip</span>\n                    ) : (\n                        <span className=\"projectcomplete\"></span>\n                    )}\n                    <DisplayProjectImage imageurl={props.projectphoto} />\n                    {props.projectstatus === \"inprogress\" ? (\n                        <p className=\"progressonthumbnail\">{progress}%</p>\n                    ) : (\n                        <p className=\"progressonthumbnail\"></p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectThumbnail;\n","export default __webpack_public_path__ + \"static/media/circle.21c9aa32.svg\";","export default __webpack_public_path__ + \"static/media/projectsicon.46f18e65.svg\";","export default __webpack_public_path__ + \"static/media/queueicon.74c32c92.svg\";","export default __webpack_public_path__ + \"static/media/stash.57e501cd.svg\";","export default __webpack_public_path__ + \"static/media/handspun.9ea2b6aa.svg\";","export default __webpack_public_path__ + \"static/media/tools.15b387e2.svg\";","export default __webpack_public_path__ + \"static/media/favoritesicon.7ae18f6f.svg\";","export default __webpack_public_path__ + \"static/media/libraryicon.c6ef027b.svg\";","//show project collection from (db -> store redux)\nimport { RootState } from \"./store/store\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ProjectThumbnail from \"./projects/ProjectThumbnail\";\nimport type { ProjectFromStore } from \"./common/types\";\nimport uniqid from \"uniqid\";\nimport Circle from \"../images/circle.svg\";\nimport ProjectsIcon from \"../images/projectsicon.svg\";\nimport QueueIcon from \"../images/queueicon.svg\";\nimport StashIcon from \"../images/stash.svg\";\nimport HandspunIcon from \"../images/handspun.svg\";\nimport ToolsIcon from \"../images/tools.svg\";\nimport FavoritesIcon from \"../images/favoritesicon.svg\";\nimport LibraryIcon from \"../images/libraryicon.svg\";\n\nconst Notebook = function() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [newprojectpath, setnewprojectpath] = useState<string>(\"\");\n    const user = useSelector((state: RootState) => state.userinfo.username);\n    const projectData: ProjectFromStore[] | undefined = useSelector(\n        (state: RootState) => state.projects\n    );\n    const otherUserProjectData: ProjectFromStore[] | undefined = useSelector(\n        (state: RootState) => state.otheruserprojects\n    );\n    const [projectsToDisplay, setprojectsToDisplay] = useState<\n        ProjectFromStore[]\n    >([]);\n\n    const [useronpath, setuseronpath] = useState<string>(\n        location.pathname.substring(10)\n    );\n    const [usermatchespath, setusermatchespath] = useState<boolean>(true);\n    const [cleared, setcleared] = useState<boolean>(false);\n    const [projectsready, setprojectsready] = useState<boolean>(false);\n\n    // sets state for projects to be displayed that where fetched from store when the state was cleared\n    useEffect(() => {\n        if (cleared && !projectsready) {\n            setprojectsready(true);\n            // a fake ravelry member's projects\n            if (useronpath !== user) {\n                setusermatchespath(false);\n                setprojectsToDisplay((prevState) => {\n                    let updateState = Array.from(prevState);\n                    otherUserProjectData!.forEach((project) => {\n                        const currentprojectid = project.projectid;\n                        const checkifexists = updateState.find(\n                            (element: ProjectFromStore) =>\n                                element.projectid === currentprojectid\n                        );\n                        if (checkifexists === undefined && project.projectid !== \"\") {\n                            updateState = [...updateState, project];\n                        }\n                    });\n                    return updateState;\n                });\n                // the logged in user's projects\n            } else {\n                setusermatchespath(true);\n                setprojectsToDisplay((prevState) => {\n                    let updateState = Array.from(prevState);\n                    projectData!.forEach((project) => {\n                        const currentprojectid = project.projectid;\n                        const checkifexists = updateState.find(\n                            (element: ProjectFromStore) =>\n                                element.projectid === currentprojectid\n                        );\n                        if (checkifexists === undefined && project.projectid !== \"\") {\n                            updateState = [...updateState, project];\n                        }\n                    });\n                    return updateState;\n                });\n            }\n        }\n    }, [\n        projectsToDisplay,\n        cleared,\n        projectsready,\n        otherUserProjectData,\n        projectData,\n        user,\n        useronpath,\n    ]);\n\n    // clears state when user checks another notebook\n    useEffect(() => {\n        setprojectsToDisplay((prevState) => {\n            const freshArray: ProjectFromStore[] = [];\n            return freshArray;\n        });\n        setcleared(true);\n        setprojectsready(false);\n        setuseronpath(location.pathname.substring(10));\n    }, [location]);\n\n    useEffect(() => {\n        const usernameonpath = location.pathname.substring(10);\n        if (usernameonpath === user && user !== \"\" && projectData !== undefined) {\n            setprojectsToDisplay((prevState) => {\n                let updateState = Array.from(prevState);\n                projectData!.forEach((project) => {\n                    const currentprojectid = project.projectid;\n                    const checkifexists = updateState.find(\n                        (element: ProjectFromStore) =>\n                            element.projectid === currentprojectid\n                    );\n                    if (checkifexists === undefined && project.projectid !== \"\") {\n                        updateState = [...updateState, project];\n                    }\n                });\n                return updateState;\n            });\n        }\n    }, [projectData, user, location.pathname]);\n\n    const loadnewprojectpage = function(event: React.MouseEvent) {\n        navigate(newprojectpath);\n    };\n\n    useEffect(() => {\n        const usernameonpath = location.pathname.substring(10);\n        if (usernameonpath !== user && user !== \"\") {\n            setprojectsToDisplay((prevState) => {\n                let updateState = Array.from(prevState);\n                otherUserProjectData!.forEach((project) => {\n                    const currentprojectid = project.projectid;\n                    const checkifexists = updateState.find(\n                        (element: ProjectFromStore) =>\n                            element.projectid === currentprojectid\n                    );\n                    if (checkifexists === undefined && project.projectid !== \"\") {\n                        updateState = [...updateState, project];\n                    }\n                });\n                return updateState;\n            });\n        }\n    }, [otherUserProjectData, location.pathname, user]);\n\n    useEffect(() => {\n        setnewprojectpath(\"/notebook/\" + user + \"/newproject\");\n    }, [user]);\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry: \" + useronpath + \"'s Projects\";\n    }, [useronpath]);\n\n    return (\n        <div id=\"notebookcontentdiv\">\n            <div id=\"notebooknav\">\n                <ul>\n                    <li id=\"notebooknavselected\">\n                        <img src={ProjectsIcon} alt=\"projecticon\" /> Projects\n                    </li>\n                    <li>\n                        <img src={QueueIcon} alt=\"queueicon\" /> Queue\n                    </li>\n                    <li>\n                        <img src={StashIcon} alt=\"stashicon\" /> Stash\n                    </li>\n                    <li>\n                        <img src={HandspunIcon} alt=\"handspunicon\" /> Handspun\n                    </li>\n                    <li>\n                        <img src={ToolsIcon} alt=\"toolsicon\" /> Tools\n                    </li>\n                    <li>\n                        <img src={FavoritesIcon} alt=\"favoritesicon\" /> Favorites\n                    </li>\n                    <li>\n                        <img src={LibraryIcon} alt=\"libraryicon\" /> Library\n                    </li>\n                </ul>\n            </div>\n            <div id=\"notebook\">\n                {usermatchespath ? (\n                    <h2>My projects</h2>\n                ) : (\n                    <h2>{useronpath}'s projects</h2>\n                )}\n                <div id=\"notebookcontent\">\n                    {usermatchespath && (\n                        <button className=\"genericbutton\" onClick={loadnewprojectpage}>\n                            <img src={Circle} alt=\"circle\" />\n                            <span>Add new project</span>\n                        </button>\n                    )}\n                    <div id=\"notebookprojects\">\n                        {projectsToDisplay.map((project: ProjectFromStore) => (\n                            <div key={uniqid()} className=\"projectthumbnail\">\n                                <ProjectThumbnail\n                                    useronpath={useronpath}\n                                    projectname={project.projectname}\n                                    projectphoto={project.imageUrl}\n                                    projectslug={project.projectslug}\n                                    projectstatus={project.projectstatus.progressstatus}\n                                    projectprogress={project.projectstatus.progressrange}\n                                    projectid={project.projectid}\n                                    username={user}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Notebook;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n    {\n        projectid: \"\",\n        imageUrl: \"\",\n        crafttype: \"\",\n        projectslug: \"\",\n        projectname: \"\",\n        patternused: \"\",\n        pattern: { name: \"\", about: \"\" },\n        projectinfo: {\n            madefor: \"\",\n            linktoraveler: \"\",\n            finishby: \"\",\n            sizemade: \"\",\n            patternfrom: \"\",\n            patterncategory: \"\",\n            selectedtags: \"\",\n            needles: [],\n            hooks: [],\n            gauge: {\n                numberStsOrRepeats: 0,\n                horizontalunits: \"stitches\",\n                numberRows: 0,\n                gaugesize: \"\",\n                gaugepattern: \"\",\n            },\n            yarn: \"\",\n            projectnotes: \"\",\n        },\n        projectstatus: {\n            progressstatus: \"In progress\",\n            progressrange: \"0\",\n            happiness: \"\",\n            starteddate: \"\",\n            completeddate: \"\",\n        },\n    },\n];\n\nconst projectsSliceOtherUser = createSlice({\n    name: \"otheruserprojects\",\n    initialState,\n    reducers: {\n        clearProjects(state, action) {\n            return initialState;\n        },\n        otherUserProjectFetchedFromDB(state, action) {\n            const {\n                projectid,\n                imageUrl,\n                crafttype,\n                projectslug,\n                projectname,\n                patternused,\n                patternname,\n                about,\n                madefor,\n                linktoraveler,\n                finishby,\n                sizemade,\n                patternfrom,\n                patterncategory,\n                selectedtags,\n                needles,\n                hooks,\n                numberStsOrRepeats,\n                horizontalunits,\n                numberRows,\n                gaugesize,\n                gaugepattern,\n                yarn,\n                projectnotes,\n                progressstatus,\n                progressrange,\n                happiness,\n                starteddate,\n                completeddate,\n            } = action.payload;\n            if (state.length === 1 && state[0].projectid === \"\") {\n                state[0].projectid = projectid;\n                state[0].imageUrl = imageUrl;\n                state[0].crafttype = crafttype;\n                state[0].projectslug = projectslug;\n                state[0].projectname = projectname;\n                state[0].patternused = patternused;\n                state[0].pattern.name = patternname;\n                state[0].pattern.about = about;\n                state[0].projectinfo.madefor = madefor;\n                state[0].projectinfo.linktoraveler = linktoraveler;\n                state[0].projectinfo.finishby = finishby;\n                state[0].projectinfo.sizemade = sizemade;\n                state[0].projectinfo.patternfrom = patternfrom;\n                state[0].projectinfo.patterncategory = patterncategory;\n                state[0].projectinfo.selectedtags = selectedtags;\n                state[0].projectinfo.needles = needles;\n                state[0].projectinfo.hooks = hooks;\n                state[0].projectinfo.gauge.numberStsOrRepeats = numberStsOrRepeats;\n                state[0].projectinfo.gauge.horizontalunits = horizontalunits;\n                state[0].projectinfo.gauge.numberRows = numberRows;\n                state[0].projectinfo.gauge.gaugesize = gaugesize;\n                state[0].projectinfo.gauge.gaugepattern = gaugepattern;\n                state[0].projectinfo.yarn = yarn;\n                state[0].projectinfo.projectnotes = projectnotes;\n                state[0].projectstatus.progressstatus = progressstatus;\n                state[0].projectstatus.progressrange = progressrange;\n                state[0].projectstatus.happiness = happiness;\n                state[0].projectstatus.starteddate = starteddate;\n                state[0].projectstatus.completeddate = completeddate;\n            } else {\n                const project = {\n                    projectid: projectid,\n                    imageUrl: imageUrl,\n                    crafttype: crafttype,\n                    projectslug: projectslug,\n                    projectname: projectname,\n                    patternused: patternused,\n                    pattern: { name: patternname, about: about },\n                    projectinfo: {\n                        madefor: madefor,\n                        linktoraveler: linktoraveler,\n                        finishby: finishby,\n                        sizemade: sizemade,\n                        patternfrom: patternfrom,\n                        patterncategory: patterncategory,\n                        selectedtags: selectedtags,\n                        needles: needles,\n                        hooks: hooks,\n                        gauge: {\n                            numberStsOrRepeats: numberStsOrRepeats,\n                            horizontalunits: horizontalunits,\n                            numberRows: numberRows,\n                            gaugesize: gaugesize,\n                            gaugepattern: gaugepattern,\n                        },\n                        yarn: yarn,\n                        projectnotes: projectnotes,\n                    },\n                    projectstatus: {\n                        progressstatus: progressstatus,\n                        progressrange: progressrange,\n                        happiness: happiness,\n                        starteddate: starteddate,\n                        completeddate: completeddate,\n                    },\n                };\n                state.push(project);\n            }\n        },\n    },\n});\n\nexport const {\n    otherUserProjectFetchedFromDB,\n    clearProjects,\n} = projectsSliceOtherUser.actions;\nexport default projectsSliceOtherUser.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface OtherUserInfo {\n    username: string;\n    name: string;\n    userID: string;\n}\n\nconst initialState: OtherUserInfo = {\n    username: \"\",\n    name: \"\",\n    userID: \"\",\n};\nconst otherUserInfoSlice = createSlice({\n    name: \"otheruserinfo\",\n    initialState,\n    reducers: {\n        otherUserAdded(state, action) {\n            const { username, name, userID } = action.payload;\n            state.username = username;\n            state.name = name;\n            state.userID = userID;\n        },\n    },\n});\n\nexport const { otherUserAdded } = otherUserInfoSlice.actions;\nexport default otherUserInfoSlice.reducer;\n","export const Colorways: string[] = [\n    \"Closest color?\",\n    \"Black\",\n    \"Blue\",\n    \"Blue-green\",\n    \"Blue-purple\",\n    \"Brown\",\n    \"Gray\",\n    \"Green\",\n    \"Multicolored\",\n    \"Natural/Undyed\",\n    \"Orange\",\n    \"Pink\",\n    \"Purple\",\n    \"Rainbow\\t\",\n    \"Red\",\n    \"Red-orange\",\n    \"Red-purple\",\n    \"White\",\n    \"Yellow\",\n    \"Yellow-green\",\n    \"Yellow-orange\",\n];\n\nexport const Yarnweight: string[] = [\n    \"Thread\",\n    \"Cobweb\",\n    \"Lace\",\n    \"Light Fingering\",\n    \"Fingering (14 wpi)\",\n    \"Sport (12 wpi)\",\n    \"DK (11 wpi)\",\n    \"Worsted (9 wpi)\",\n    \"Aran (8 wpi)\",\n    \"Bulky (7 wpi)\",\n    \"Super Bulky (5-6 wpi)\",\n    \"Jumbo (0-4 wpi)\",\n];\n\nexport const Currency: string[] = [\n    \"USD: U.S. $\",\n    \"AUD: Australian $\",\n    \"BRL: Real\",\n    \"CAD: Canadian $\",\n    \"CHF: Francs\",\n    \"CZK: Koruna\",\n    \"DKK: Kroner\",\n    \"EUR: Euros\",\n    \"GBP: Sterling\",\n    \"HKD: Hong Kong $\",\n    \"HRK: Kuna\",\n    \"HUF: Forint\",\n    \"ILS: NIS\",\n    \"INR: Rupee\",\n    \"ISK: króna\",\n    \"JPY: Yen\",\n    \"MXN: Mexican $\",\n    \"NOK: Kroner\",\n    \"NZD: New Zealand $\",\n    \"PLN: Złoty\",\n    \"RUB: Ruble\",\n    \"SEK: Kronor\",\n    \"SGD: Singapore $\",\n    \"TWD: New Taiwan $\",\n    \"ZAR: Rand\",\n];\n\nexport const HookSizes = [\n    { value: \"25\", text: \"0.6 mm\" },\n    { value: \"26\", text: \"0.7 mm\" },\n    { value: \"27\", text: \"0.75 mm\" },\n    { value: \"28\", text: \"0.85 mm\" },\n    { value: \"29\", text: \"0.9 mm\" },\n    { value: \"30\", text: \"1.0 mm\" },\n    { value: \"31\", text: \"1.05 mm\" },\n    { value: \"47\", text: \"1.1 mm\" },\n    { value: \"32\", text: \"1.1 mm\" },\n    { value: \"33\", text: \"1.15 mm\" },\n    { value: \"34\", text: \"1.25 mm\" },\n    { value: \"35\", text: \"1.3 mm\" },\n    { value: \"36\", text: \"1.4 mm\" },\n    { value: \"37\", text: \"1.5 mm\" },\n    { value: \"38\", text: \"1.65 mm\" },\n    { value: \"22\", text: \"1.75 mm\" },\n    { value: \"44\", text: \"1.8 mm\" },\n    { value: \"45\", text: \"1.9 mm\" },\n    { value: \"19\", text: \"2.0 mm\" },\n    { value: \"46\", text: \"2.1 mm\" },\n    { value: \"1\", text: \"2.25 mm (B)\" },\n    { value: \"50\", text: \"2.35 mm\" },\n    { value: \"21\", text: \"2.5 mm\" },\n    { value: \"2\", text: \"2.75 mm (C)\" },\n    { value: \"20\", text: \"3.0 mm\" },\n    { value: \"3\", text: \"3.25 mm (D)\" },\n    { value: \"4\", text: \"3.5 mm (E)\" },\n    { value: \"5\", text: \"3.75 mm (F)\" },\n    { value: \"6\", text: \"4.0 mm (G)\" },\n    { value: \"49\", text: \"4.25 mm (G)\" },\n    { value: \"7\", text: \"4.5 mm\" },\n    { value: \"8\", text: \"5.0 mm (H)\" },\n    { value: \"9\", text: \"5.5 mm (I)\" },\n    { value: \"10\", text: \"6.0 mm (J)\" },\n    { value: \"11\", text: \"6.5 mm (K)\" },\n    { value: \"23\", text: \"7.0 mm\" },\n    { value: \"24\", text: \"7.5 mm\" },\n    { value: \"12\", text: \"8.0 mm (L)\" },\n    { value: \"13\", text: \"9.0 mm (M/N)\" },\n    { value: \"14\", text: \"10.0 mm (N/P)\" },\n    { value: \"51\", text: \"11.5 mm (P)\" },\n    { value: \"15\", text: \"12.0 mm\" },\n    { value: \"48\", text: \"12.0 mm\" },\n    { value: \"16\", text: \"15.0 mm (P/Q)\" },\n    { value: \"52\", text: \"15.75 mm (Q)\" },\n    { value: \"17\", text: \"19.0 mm (S)\" },\n    { value: \"18\", text: \"25.0 mm\" },\n    { value: \"53\", text: \"40.0 mm\" },\n];\n\nexport const NeedleSizes = [\n    { value: \"43\", text: \"US 00000000 - 0.5 mm\" },\n    { value: \"42\", text: \"US 000000 - 0.75 mm\" },\n    { value: \"41\", text: \"US 00000 - 1.0 mm\" },\n    { value: \"40\", text: \"US 0000 - 1.25 mm\" },\n    { value: \"39\", text: \"US 000 - 1.5 mm\" },\n    { value: \"22\", text: \"US 00 - 1.75 mm\" },\n    { value: \"19\", text: \"US 0 - 2.0 mm\" },\n    { value: \"1\", text: \"US 1  - 2.25 mm\" },\n    { value: \"21\", text: \"US 1½ - 2.5 mm\" },\n    { value: \"2\", text: \"US 2  - 2.75 mm\" },\n    { value: \"20\", text: \"US 2½ - 3.0 mm\" },\n    { value: \"3\", text: \"US 3  - 3.25 mm\" },\n    { value: \"4\", text: \"US 4  - 3.5 mm\" },\n    { value: \"5\", text: \"US 5  - 3.75 mm\" },\n    { value: \"6\", text: \"US 6  - 4.0 mm\" },\n    { value: \"49\", text: \"4.25 mm\" },\n    { value: \"7\", text: \"US 7  - 4.5 mm\" },\n    { value: \"55\", text: \"4.75 mm\" },\n    { value: \"8\", text: \"US 8  - 5.0 mm\" },\n    { value: \"9\", text: \"US 9  - 5.5 mm\" },\n    { value: \"10\", text: \"US 10  - 6.0 mm\" },\n    { value: \"11\", text: \"US 10½ - 6.5 mm\" },\n    { value: \"23\", text: \"7.0 mm\" },\n    { value: \"24\", text: \"7.5 mm\" },\n    { value: \"12\", text: \"US 11  - 8.0 mm\" },\n    { value: \"13\", text: \"US 13  - 9.0 mm\" },\n    { value: \"14\", text: \"US 15  - 10.0 mm\" },\n    { value: \"15\", text: \"US 17  - 12.0 mm\" },\n    { value: \"16\", text: \"US 19  - 15.0 mm\" },\n    { value: \"17\", text: \"US 35  - 19.0 mm\" },\n    { value: \"18\", text: \"US 50  - 25.0 mm\" },\n];\n\nexport const NeedleMap = new Map([\n    [\"43\", \"US 00000000 - 0.5 mm\"],\n    [\"42\", \"US 000000 - 0.75 mm\"],\n    [\"41\", \"US 00000 - 1.0 mm\"],\n    [\"40\", \"US 0000 - 1.25 mm\"],\n    [\"39\", \"US 000 - 1.5 mm\"],\n    [\"22\", \"US 00 - 1.75 mm\"],\n    [\"19\", \"US 0 - 2.0 mm\"],\n    [\"1\", \"US 1  - 2.25 mm\"],\n    [\"21\", \"US 1½ - 2.5 mm\"],\n    [\"2\", \"US 2  - 2.75 mm\"],\n    [\"20\", \"US 2½ - 3.0 mm\"],\n    [\"3\", \"US 3  - 3.25 mm\"],\n    [\"4\", \"US 4  - 3.5 mm\"],\n    [\"5\", \"US 5  - 3.75 mm\"],\n    [\"6\", \"US 6  - 4.0 mm\"],\n    [\"49\", \"4.25 mm\"],\n    [\"7\", \"US 7  - 4.5 mm\"],\n    [\"55\", \"4.75 mm\"],\n    [\"8\", \"US 8  - 5.0 mm\"],\n    [\"9\", \"US 9  - 5.5 mm\"],\n    [\"10\", \"US 10  - 6.0 mm\"],\n    [\"11\", \"US 10½ - 6.5 mm\"],\n    [\"23\", \"7.0 mm\"],\n    [\"24\", \"7.5 mm\"],\n    [\"12\", \"US 11  - 8.0 mm\"],\n    [\"13\", \"US 13  - 9.0 mm\"],\n    [\"14\", \"US 15  - 10.0 mm\"],\n    [\"15\", \"US 17  - 12.0 mm\"],\n    [\"16\", \"US 19  - 15.0 mm\"],\n    [\"17\", \"US 35  - 19.0 mm\"],\n    [\"18\", \"US 50  - 25.0 mm\"],\n]);\n\nexport const HookMap = new Map([\n    [\"25\", \"0.6 mm\"],\n    [\"26\", \"0.7 mm\"],\n    [\"27\", \"0.75 mm\"],\n    [\"28\", \"0.85 mm\"],\n    [\"29\", \"0.9 mm\"],\n    [\"30\", \"1.0 mm\"],\n    [\"31\", \"1.05 mm\"],\n    [\"47\", \"1.1 mm\"],\n    [\"32\", \"1.1 mm\"],\n    [\"33\", \"1.15 mm\"],\n    [\"34\", \"1.25 mm\"],\n    [\"35\", \"1.3 mm\"],\n    [\"36\", \"1.4 mm\"],\n    [\"37\", \"1.5 mm\"],\n    [\"38\", \"1.65 mm\"],\n    [\"22\", \"1.75 mm\"],\n    [\"44\", \"1.8 mm\"],\n    [\"45\", \"1.9 mm\"],\n    [\"19\", \"2.0 mm\"],\n    [\"46\", \"2.1 mm\"],\n    [\"1\", \"2.25 mm (B)\"],\n    [\"50\", \"2.35 mm\"],\n    [\"21\", \"2.5 mm\"],\n    [\"2\", \"2.75 mm (C)\"],\n    [\"20\", \"3.0 mm\"],\n    [\"3\", \"3.25 mm (D)\"],\n    [\"4\", \"3.5 mm (E)\"],\n    [\"5\", \"3.75 mm (F)\"],\n    [\"6\", \"4.0 mm (G)\"],\n    [\"49\", \"4.25 mm (G)\"],\n    [\"7\", \"4.5 mm\"],\n    [\"8\", \"5.0 mm (H)\"],\n    [\"9\", \"5.5 mm (I)\"],\n    [\"10\", \"6.0 mm (J)\"],\n    [\"11\", \"6.5 mm (K)\"],\n    [\"23\", \"7.0 mm\"],\n    [\"24\", \"7.5 mm\"],\n    [\"12\", \"8.0 mm (L)\"],\n    [\"13\", \"9.0 mm (M/N)\"],\n    [\"14\", \"10.0 mm (N/P)\"],\n    [\"51\", \"11.5 mm (P)\"],\n    [\"15\", \"12.0 mm\"],\n    [\"48\", \"12.0 mm\"],\n    [\"16\", \"15.0 mm (P/Q)\"],\n    [\"52\", \"15.75 mm (Q)\"],\n    [\"17\", \"19.0 mm (S)\"],\n    [\"18\", \"25.0 mm\"],\n    [\"53\", \"40.0 mm\"],\n]);\n\nexport const Country = [\n    { value: \"notselected\", text: \"\" },\n    { value: \"13\", text: \"Australia\" },\n    { value: \"39\", text: \"Canada\" },\n    { value: \"84\", text: \"Germany\" },\n    { value: \"228\", text: \"United Kingdom\" },\n    { value: \"229\", text: \"United States\" },\n    { value: \"1\", text: \"Afghanistan\" },\n    { value: \"2\", text: \"Albania\" },\n    { value: \"3\", text: \"Algeria\" },\n    { value: \"4\", text: \"American Samoa\" },\n    { value: \"5\", text: \"Andorra\" },\n    { value: \"6\", text: \"Angola\" },\n    { value: \"7\", text: \"Anguilla\" },\n    { value: \"8\", text: \"Antarctica\" },\n    { value: \"9\", text: \"Antigua And Barbuda\" },\n    { value: \"10\", text: \"Argentina\" },\n    { value: \"11\", text: \"Armenia\" },\n    { value: \"12\", text: \"Aruba\" },\n    { value: \"13\", text: \"Australia\" },\n    { value: \"14\", text: \"Austria\" },\n    { value: \"15\", text: \"Azerbaijan\" },\n    { value: \"16\", text: \"Bahamas\" },\n    { value: \"17\", text: \"Bahrain\" },\n    { value: \"18\", text: \"Bangladesh\" },\n    { value: \"19\", text: \"Barbados\" },\n    { value: \"20\", text: \"Belarus\" },\n    { value: \"21\", text: \"Belgium\" },\n    { value: \"22\", text: \"Belize\" },\n    { value: \"23\", text: \"Benin\" },\n    { value: \"24\", text: \"Bermuda\" },\n    { value: \"25\", text: \"Bhutan\" },\n    { value: \"26\", text: \"Bolivia\" },\n    { value: \"27\", text: \"Bosnia and Herzegowina\" },\n    { value: \"28\", text: \"Botswana\" },\n    { value: \"29\", text: \"Bouvet Island\" },\n    { value: \"30\", text: \"Brazil\" },\n    { value: \"31\", text: \"British Indian Ocean Territory\" },\n    { value: \"32\", text: \"Brunei Darussalam\" },\n    { value: \"33\", text: \"Bulgaria\" },\n    { value: \"34\", text: \"Burkina Faso\" },\n    { value: \"35\", text: \"Burma\" },\n    { value: \"36\", text: \"Burundi\" },\n    { value: \"37\", text: \"Cambodia\" },\n    { value: \"38\", text: \"Cameroon\" },\n    { value: \"39\", text: \"Canada\" },\n    { value: \"40\", text: \"Cape Verde\" },\n    { value: \"41\", text: \"Cayman Islands\" },\n    { value: \"42\", text: \"Central African Republic\" },\n    { value: \"43\", text: \"Chad\" },\n    { value: \"44\", text: \"Chile\" },\n    { value: \"45\", text: \"China\" },\n    { value: \"46\", text: \"Christmas Island\" },\n    { value: \"47\", text: \"Cocos (Keeling) Islands\" },\n    { value: \"48\", text: \"Colombia\" },\n    { value: \"49\", text: \"Comoros\" },\n    { value: \"50\", text: \"Congo\" },\n    { value: \"51\", text: \"Congo, the Democratic Republic of the\" },\n    { value: \"52\", text: \"Cook Islands\" },\n    { value: \"53\", text: \"Costa Rica\" },\n    { value: \"54\", text: \"Cote d'Ivoire\" },\n    { value: \"55\", text: \"Croatia\" },\n    { value: \"56\", text: \"Cuba\" },\n    { value: \"57\", text: \"Cyprus\" },\n    { value: \"58\", text: \"Czech Republic\" },\n    { value: \"59\", text: \"Denmark\" },\n    { value: \"60\", text: \"Djibouti\" },\n    { value: \"61\", text: \"Dominica\" },\n    { value: \"62\", text: \"Dominican Republic\" },\n    { value: \"63\", text: \"East Timor\" },\n    { value: \"64\", text: \"Ecuador\" },\n    { value: \"65\", text: \"Egypt\" },\n    { value: \"66\", text: \"El Salvador\" },\n    { value: \"67\", text: \"England\" },\n    { value: \"68\", text: \"Equatorial Guinea\" },\n    { value: \"69\", text: \"Eritrea\" },\n    { value: \"71\", text: \"Estonia\" },\n    { value: \"72\", text: \"Ethiopia\" },\n    { value: \"73\", text: \"Falkland Islands\" },\n    { value: \"74\", text: \"Faroe Islands\" },\n    { value: \"75\", text: \"Fiji\" },\n    { value: \"76\", text: \"Finland\" },\n    { value: \"77\", text: \"France\" },\n    { value: \"78\", text: \"French Guiana\" },\n    { value: \"79\", text: \"French Polynesia\" },\n    { value: \"80\", text: \"French Southern Territories\" },\n    { value: \"81\", text: \"Gabon\" },\n    { value: \"82\", text: \"Gambia\" },\n    { value: \"83\", text: \"Georgia\" },\n    { value: \"84\", text: \"Germany\" },\n    { value: \"85\", text: \"Ghana\" },\n    { value: \"86\", text: \"Gibraltar\" },\n    { value: \"88\", text: \"Greece\" },\n    { value: \"89\", text: \"Greenland\" },\n    { value: \"90\", text: \"Grenada\" },\n    { value: \"91\", text: \"Guadeloupe\" },\n    { value: \"92\", text: \"Guam\" },\n    { value: \"93\", text: \"Guatemala\" },\n    { value: \"245\", text: \"Guernsey\" },\n    { value: \"94\", text: \"Guinea\" },\n    { value: \"95\", text: \"Guinea-Bissau\" },\n    { value: \"96\", text: \"Guyana\" },\n    { value: \"97\", text: \"Haiti\" },\n    { value: \"98\", text: \"Heard and Mc Donald Islands\" },\n    { value: \"99\", text: \"Honduras\" },\n    { value: \"100\", text: \"Hong Kong\" },\n    { value: \"101\", text: \"Hungary\" },\n    { value: \"102\", text: \"Iceland\" },\n    { value: \"103\", text: \"India\" },\n    { value: \"104\", text: \"Indonesia\" },\n    { value: \"108\", text: \"Iran\" },\n    { value: \"109\", text: \"Iraq\" },\n    { value: \"105\", text: \"Ireland\" },\n    { value: \"251\", text: \"Isle of Man\" },\n    { value: \"106\", text: \"Israel\" },\n    { value: \"107\", text: \"Italy\" },\n    { value: \"110\", text: \"Jamaica\" },\n    { value: \"111\", text: \"Japan\" },\n    { value: \"250\", text: \"Jersey\" },\n    { value: \"112\", text: \"Jordan\" },\n    { value: \"113\", text: \"Kazakhstan\" },\n    { value: \"114\", text: \"Kenya\" },\n    { value: \"115\", text: \"Kiribati\" },\n    { value: \"116\", text: \"Korea, Republic of\" },\n    { value: \"249\", text: \"Kosovo\" },\n    { value: \"118\", text: \"Kuwait\" },\n    { value: \"119\", text: \"Kyrgyzstan\" },\n    { value: \"120\", text: \"Lao People's Democratic Republic\" },\n    { value: \"121\", text: \"Latvia\" },\n    { value: \"122\", text: \"Lebanon\" },\n    { value: \"123\", text: \"Lesotho\" },\n    { value: \"124\", text: \"Liberia\" },\n    { value: \"125\", text: \"Liechtenstein\" },\n    { value: \"126\", text: \"Lithuania\" },\n    { value: \"127\", text: \"Luxembourg\" },\n    { value: \"128\", text: \"Macau\" },\n    { value: \"129\", text: \"Macedonia\" },\n    { value: \"130\", text: \"Madagascar\" },\n    { value: \"131\", text: \"Malawi\" },\n    { value: \"132\", text: \"Malaysia\" },\n    { value: \"133\", text: \"Maldives\" },\n    { value: \"134\", text: \"Mali\" },\n    { value: \"135\", text: \"Malta\" },\n    { value: \"136\", text: \"Marshall Islands\" },\n    { value: \"137\", text: \"Martinique\" },\n    { value: \"138\", text: \"Mauritania\" },\n    { value: \"139\", text: \"Mauritius\" },\n    { value: \"140\", text: \"Mayotte\" },\n    { value: \"141\", text: \"Mexico\" },\n    { value: \"142\", text: \"Micronesia, Federated States of\" },\n    { value: \"143\", text: \"Moldova, Republic of\" },\n    { value: \"144\", text: \"Monaco\" },\n    { value: \"145\", text: \"Mongolia\" },\n    { value: \"248\", text: \"Montenegro\" },\n    { value: \"146\", text: \"Montserrat\" },\n    { value: \"147\", text: \"Morocco\" },\n    { value: \"148\", text: \"Mozambique\" },\n    { value: \"149\", text: \"Myanmar\" },\n    { value: \"150\", text: \"Namibia\" },\n    { value: \"151\", text: \"Nauru\" },\n    { value: \"152\", text: \"Nepal\" },\n    { value: \"153\", text: \"Netherlands\" },\n    { value: \"154\", text: \"Netherlands Antilles\" },\n    { value: \"155\", text: \"New Caledonia\" },\n    { value: \"156\", text: \"New Zealand\" },\n    { value: \"157\", text: \"Nicaragua\" },\n    { value: \"158\", text: \"Niger\" },\n    { value: \"159\", text: \"Nigeria\" },\n    { value: \"160\", text: \"Niue\" },\n    { value: \"161\", text: \"Norfolk Island\" },\n    { value: \"162\", text: \"Northern Ireland\" },\n    { value: \"163\", text: \"Northern Mariana Islands\" },\n    { value: \"164\", text: \"Norway\" },\n    { value: \"165\", text: \"Oman\" },\n    { value: \"166\", text: \"Pakistan\" },\n    { value: \"167\", text: \"Palau\" },\n    { value: \"168\", text: \"Panama\" },\n    { value: \"169\", text: \"Papua New Guinea\" },\n    { value: \"170\", text: \"Paraguay\" },\n    { value: \"171\", text: \"Peru\" },\n    { value: \"172\", text: \"Philippines\" },\n    { value: \"173\", text: \"Pitcairn\" },\n    { value: \"174\", text: \"Poland\" },\n    { value: \"175\", text: \"Portugal\" },\n    { value: \"176\", text: \"Puerto Rico\" },\n    { value: \"177\", text: \"Qatar\" },\n    { value: \"178\", text: \"Reunion\" },\n    { value: \"179\", text: \"Romania\" },\n    { value: \"180\", text: \"Russia\" },\n    { value: \"181\", text: \"Rwanda\" },\n    { value: \"182\", text: \"Saint Kitts and Nevis\" },\n    { value: \"183\", text: \"Saint Lucia\" },\n    { value: \"184\", text: \"Saint Vincent and the Grenadines\" },\n    { value: \"185\", text: \"Samoa (Independent)\" },\n    { value: \"186\", text: \"San Marino\" },\n    { value: \"187\", text: \"Sao Tome and Principe\" },\n    { value: \"188\", text: \"Saudi Arabia\" },\n    { value: \"189\", text: \"Scotland\" },\n    { value: \"190\", text: \"Senegal\" },\n    { value: \"247\", text: \"Serbia\" },\n    { value: \"191\", text: \"Serbia and Montenegro\" },\n    { value: \"192\", text: \"Seychelles\" },\n    { value: \"193\", text: \"Sierra Leone\" },\n    { value: \"194\", text: \"Singapore\" },\n    { value: \"195\", text: \"Slovakia\" },\n    { value: \"196\", text: \"Slovenia\" },\n    { value: \"197\", text: \"Solomon Islands\" },\n    { value: \"198\", text: \"Somalia\" },\n    { value: \"199\", text: \"South Africa\" },\n    { value: \"200\", text: \"South Georgia and the South Sandwich Islands\" },\n    { value: \"201\", text: \"South Korea\" },\n    { value: \"202\", text: \"Spain\" },\n    { value: \"203\", text: \"Sri Lanka\" },\n    { value: \"204\", text: \"St. Helena\" },\n    { value: \"205\", text: \"St. Pierre and Miquelon\" },\n    { value: \"246\", text: \"Sudan, Republic of\" },\n    { value: \"206\", text: \"Suriname\" },\n    { value: \"207\", text: \"Svalbard and Jan Mayen Islands\" },\n    { value: \"208\", text: \"Swaziland\" },\n    { value: \"209\", text: \"Sweden\" },\n    { value: \"210\", text: \"Switzerland\" },\n    { value: \"211\", text: \"Taiwan\" },\n    { value: \"212\", text: \"Tajikistan\" },\n    { value: \"213\", text: \"Tanzania\" },\n    { value: \"214\", text: \"Thailand\" },\n    { value: \"215\", text: \"Togo\" },\n    { value: \"216\", text: \"Tokelau\" },\n    { value: \"217\", text: \"Tonga\" },\n    { value: \"218\", text: \"Trinidad\" },\n    { value: \"219\", text: \"Trinidad and Tobago\" },\n    { value: \"220\", text: \"Tunisia\" },\n    { value: \"221\", text: \"Turkey\" },\n    { value: \"222\", text: \"Turkmenistan\" },\n    { value: \"223\", text: \"Turks and Caicos Islands\" },\n    { value: \"224\", text: \"Tuvalu\" },\n    { value: \"225\", text: \"Uganda\" },\n    { value: \"226\", text: \"Ukraine\" },\n    { value: \"227\", text: \"United Arab Emirates\" },\n    { value: \"228\", text: \"United Kingdom\" },\n    { value: \"229\", text: \"United States\" },\n    { value: \"230\", text: \"United States Minor Outlying Islands\" },\n    { value: \"231\", text: \"Uruguay\" },\n    { value: \"232\", text: \"Uzbekistan\" },\n    { value: \"233\", text: \"Vanuatu\" },\n    { value: \"234\", text: \"Vatican City State (Holy See)\" },\n    { value: \"235\", text: \"Venezuela\" },\n    { value: \"236\", text: \"Viet Nam\" },\n    { value: \"237\", text: \"Virgin Islands (British)\" },\n    { value: \"238\", text: \"Virgin Islands (U.S.)\" },\n    { value: \"239\", text: \"Wales\" },\n    { value: \"240\", text: \"Wallis and Futuna Islands\" },\n    { value: \"241\", text: \"Western Sahara\" },\n    { value: \"242\", text: \"Yemen\" },\n    { value: \"243\", text: \"Zambia\" },\n    { value: \"244\", text: \"Zimbabwe\" },\n];\n","import { useState, useEffect } from \"react\";\nimport type { ProfileInformation } from \"../common/types\";\nimport uniqid from \"uniqid\";\nimport { Country } from \"../projects/SelectOptions\";\n\nconst DisplayProfileDetails = function(props: {\n    userinfo: ProfileInformation;\n}) {\n    // displays profile information\n    const infomap = new Map([\n        [\"personalsite\", \"Website or blog\"],\n        [\"selectedcountry\", \"Location\"],\n        [\"yearsknitting\", \"Years knitting\"],\n        [\"yearscrocheting\", \"Years crocheting\"],\n        [\"petskids\", \"Pets? Kids?\"],\n        [\"favoritecolors\", \"Favorite colors\"],\n        [\"favecurseword\", \"Fave curse word\"],\n        [\"aboutme\", \"About me\"],\n    ]);\n    const [infotodisplay, setinfotodisplay] = useState<[string, string][]>([]);\n    const [infofinished, setinfofinished] = useState<boolean>(false);\n    const [personalsiteurl, setpersonalsiteurl] = useState<string>(\"\");\n\n    const [countryname, setcountryname] = useState<string>(\"\");\n\n    useEffect(() => {\n        const selectnonemptyinfo = function() {\n            const info = props.userinfo;\n            for (const [key, value] of Object.entries(info)) {\n                if (\n                    value !== \"\" &&\n                    value !== undefined &&\n                    value !== \"notselected\" &&\n                    key !== \"username\" &&\n                    key !== \"name\" &&\n                    key !== \"imageurl\"\n                ) {\n                    setinfotodisplay((prevState) => [...prevState, [key, value]]);\n                    // transforms personal site from string to a clickable url if necessary\n                    if (key === \"personalsite\") {\n                        if (value.includes(\"http\")) {\n                            setpersonalsiteurl(value);\n                        } else {\n                            setpersonalsiteurl(\"https://\" + value);\n                        }\n                    }\n                }\n            }\n            setinfofinished(true);\n        };\n        if (!infofinished) {\n            selectnonemptyinfo();\n        }\n    }, [infofinished, props]);\n\n    // gets country name from code\n    useEffect(() => {\n        const getCountryName = function(countrycode: string) {\n            const countryinarray = Country.find(\n                (element) => element.value === countrycode\n            );\n            if (countryinarray !== undefined) {\n                setcountryname(countryinarray.text);\n            }\n        };\n        getCountryName(props.userinfo.selectedcountry);\n    }, [props.userinfo]);\n\n    useEffect(() => {\n        setinfotodisplay((prevState) => {\n            const copyArray = Array.from(prevState);\n            const countryinarray = prevState.findIndex(\n                (element) => element[0] === \"selectedcountry\"\n            );\n            copyArray[countryinarray] = [\"selectedcountry\", countryname];\n            return copyArray;\n        });\n    }, [countryname]);\n\n    return (\n        <div>\n            <div className=\"profileinfodiv\">\n                <div className=\"itemdescription\">First Name</div>\n                <div className=\"itemvalue\">{props.userinfo.name}</div>\n            </div>\n            {infotodisplay.map((information) => (\n                <div className=\"profileinfodiv\" key={uniqid()}>\n                    <div className=\"itemdescription\">{infomap.get(information[0])}</div>\n                    <div className=\"itemvalue\">\n                        {information[0] === \"personalsite\" ? (\n                            <a href={personalsiteurl}>{personalsiteurl}</a>\n                        ) : (\n                            information[1]\n                        )}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default DisplayProfileDetails;\n","export default __webpack_public_path__ + \"static/media/friendsicon.cbc6276d.svg\";","export default __webpack_public_path__ + \"static/media/forumsicon.b2b9d8ca.svg\";","export default __webpack_public_path__ + \"static/media/commentsicon.c80199ce.svg\";","import { useLocation, useNavigate } from \"react-router-dom\";\nimport {\n    fetchOtherUserInfo,\n    getOtherUserInfo,\n    getUserProfileInformation,\n    addFriendDB,\n    removeFriendDB,\n    getFriends,\n} from \"../Firebase\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { RootState } from \"./store/store\";\nimport {\n    otherUserProjectFetchedFromDB,\n    clearProjects,\n} from \"./projects/projectsSliceOtherUser\";\nimport { otherUserAdded } from \"./store/otherUserInfoSlice\";\nimport DisplayProfileDetails from \"./profiledetails/DisplayProfileDetail\";\nimport DisplayProfileImage from \"./profiledetails/DisplayProfileImage\";\nimport type { ProfileInformation, ProjectFromStore } from \"./common/types\";\n\n//icons\nimport ProjectIcon from \"../images/projectsicon.svg\";\nimport StashIcon from \"../images/stash.svg\";\nimport QueueIcon from \"../images/queueicon.svg\";\nimport FavoritesIcon from \"../images/favoritesicon.svg\";\nimport LibraryIcon from \"../images/libraryicon.svg\";\nimport FriendsIcon from \"../images/friendsicon.svg\";\nimport ForumIcon from \"../images/forumsicon.svg\";\nimport CommentsIcon from \"../images/commentsicon.svg\";\n\nconst Profile = function() {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const user = useSelector((state: RootState) => state.userinfo);\n    const projectData: ProjectFromStore[] = useSelector(\n        (state: RootState) => state.projects\n    );\n    // fetch all info from store and display number of projects\n    const [username, setUsername] = useState<string>(\"\");\n    const [userMatchesPath, setUserMatchesPath] = useState<boolean>();\n    const [userOnPath, setUserOnPath] = useState<string>(\n        location.pathname.substring(8)\n    );\n    const [userIDOnPath, setUserIDOnPath] = useState<string>(\"\");\n    const [publicImgUrl, setPublicImgUrl] = useState<string>(\"\");\n    const [otherUserProjectsFetched, setOtherUserProjectsFetched] =\n        useState<boolean>(false);\n    const [otherUserDetailsFetched, setOtherUserDetailsFetched] =\n        useState<boolean>(false);\n\n    const [infotodisplay, setinfotodisplay] = useState<ProfileInformation>();\n    const [notebookpath, setnotebookpath] = useState<string>(\"\");\n    const [friendslist, setfriendslist] = useState<string[]>([]);\n    const [isfriend, setisfriend] = useState<boolean>(false);\n    const [friendspath, setfriendspath] = useState<string>(\n        \"/people/\" + location.pathname.substring(8) + \"/friends\"\n    );\n    const [numberprojects, setnumberprojects] = useState<number>(0);\n\n    // fetches profile information for user on location\n    useEffect(() => {\n        const usernameOnPath = location.pathname.substring(8);\n        const fetchUserOtherDetails = async function(usernameonpath: string) {\n            const otheruserdetails = await getOtherUserInfo(usernameonpath);\n            if (\n                otheruserdetails !== undefined &&\n                otheruserdetails !== \"user not found\"\n            ) {\n                setUserIDOnPath(otheruserdetails[2]);\n                dispatch(\n                    otherUserAdded({\n                        username: otheruserdetails[0],\n                        name: otheruserdetails[1],\n                        userID: otheruserdetails[2],\n                    })\n                );\n                fetchFriendsList(otheruserdetails[2]);\n                setOtherUserDetailsFetched(true);\n            }\n        };\n        setUserOnPath(usernameOnPath);\n        // wait for user from store\n        if (user.username !== \"\") {\n            setUsername(user.username);\n            setnotebookpath(\"/notebook/\" + usernameOnPath);\n            if (user.username !== usernameOnPath) {\n                setUserMatchesPath(false);\n                if (!otherUserDetailsFetched) {\n                    fetchUserOtherDetails(usernameOnPath);\n                }\n                checkIfIsFriend(user.userID, usernameOnPath);\n            } else {\n                setUserMatchesPath(true);\n                setUserIDOnPath(user.userID);\n                fetchFriendsList(user.userID);\n                setnumberprojects(projectData.length);\n            }\n        }\n    }, [location, user, otherUserDetailsFetched, projectData, dispatch]);\n\n    const fetchFriendsList = async function(userIDtoFetch: string) {\n        const friends = await getFriends(userIDtoFetch);\n        if (friends === undefined) {\n            setfriendslist([]);\n        } else {\n            setfriendslist(friends);\n        }\n    };\n\n    // check if logged in user is friends with user on path\n    const checkIfIsFriend = async function(\n        loggedinuser: string,\n        currentuseronpath: string\n    ) {\n        const friends = await getFriends(loggedinuser);\n        const friendexists = friends.includes(currentuseronpath);\n        setisfriend(friendexists);\n    };\n\n    const [infofetched, setinfofetched] = useState<boolean>(false);\n\n    useEffect(() => {\n        const fetchUserProfileInformation = async () => {\n            if (userIDOnPath !== \"\") {\n                const profileinfo: ProfileInformation | false | undefined =\n                    await getUserProfileInformation(userIDOnPath);\n                return profileinfo;\n            }\n        };\n        if (userIDOnPath !== \"\" && !infofetched) {\n            const profileinfo = fetchUserProfileInformation();\n            profileinfo.then(function(dbinfo) {\n                if (dbinfo !== false && dbinfo !== undefined) {\n                    setinfotodisplay(dbinfo);\n                    setPublicImgUrl(dbinfo.imageurl);\n                    setinfofetched(true);\n                }\n            });\n        }\n    }, [userIDOnPath, infofetched]);\n\n    useEffect(() => {\n        setinfofetched(false);\n        setnumberprojects(0);\n    }, [location]);\n\n    // if visiting someone else's profile, fetches projects and info from db and places it on store\n    useEffect(() => {\n        const fetchProjectsOtherUser = async function() {\n            const usernameOnPath = location.pathname.substring(8);\n            const otheruserprojects = await fetchOtherUserInfo(usernameOnPath);\n            if (\n                otheruserprojects !== undefined &&\n                otheruserprojects !== \"user not found\"\n            ) {\n                let countprojects = 0;\n                const addallprojects = new Promise((resolve, reject) => {\n                    otheruserprojects.forEach((project) => {\n                        countprojects += 1;\n                        let gaugeNumberSts: number;\n                        let gaugeNumberRows: number;\n                        project.data().projectinfo.gauge.numberStsOrRepeats === null\n                            ? (gaugeNumberSts = 0)\n                            : (gaugeNumberSts =\n                                project.data().projectinfo.gauge.numberStsOrRepeats);\n                        project.data().projectinfo.gauge.numberRows === null\n                            ? (gaugeNumberRows = 0)\n                            : (gaugeNumberRows = project.data().projectinfo.gauge.numberRows);\n                        dispatch(\n                            otherUserProjectFetchedFromDB({\n                                projectid: project.id,\n                                imageUrl: project.data().imageUrl,\n                                crafttype: project.data().crafttype,\n                                projectslug: project.data().projectslug,\n                                projectname: project.data().projectname,\n                                patternused: project.data().patternused,\n                                patternname: project.data().pattern.name,\n                                about: project.data().pattern.about,\n                                madefor: project.data().projectinfo.madefor,\n                                linktoraveler: project.data().projectinfo.linktoraveler,\n                                finishby: project.data().projectinfo.finishby,\n                                sizemade: project.data().projectinfo.sizemade,\n                                patternfrom: project.data().projectinfo.patternfrom,\n                                patterncategory: project.data().projectinfo.patterncategory,\n                                selectedtags: project.data().projectinfo.tags,\n                                needles: project.data().projectinfo.needles,\n                                hooks: project.data().projectinfo.hooks,\n                                numberStsOrRepeats: gaugeNumberSts,\n                                horizontalunits:\n                                    project.data().projectinfo.gauge.horizontalunits,\n                                numberRows: gaugeNumberRows,\n                                gaugesize: project.data().projectinfo.gauge.gaugesize,\n                                gaugepattern: project.data().projectinfo.gauge.gaugepattern,\n                                yarn: project.data().projectinfo.yarn,\n                                projectnotes: project.data().projectinfo.projectnotes,\n                                progressstatus: project.data().projectstatus.progressstatus,\n                                progressrange: project.data().projectstatus.progressrange,\n                                happiness: project.data().projectstatus.happiness,\n                                starteddate: project.data().projectstatus.starteddate,\n                                completeddate: project.data().projectstatus.completeddate,\n                            })\n                        );\n                    });\n                });\n                setnumberprojects(countprojects);\n                addallprojects\n                    .then((resolve) => setOtherUserProjectsFetched(true))\n                    .catch((reject) => console.log(\"error\"));\n            }\n        };\n        if (\n            userMatchesPath !== undefined &&\n            !userMatchesPath &&\n            !otherUserProjectsFetched\n        ) {\n            fetchProjectsOtherUser();\n        }\n    }, [userMatchesPath, otherUserProjectsFetched, dispatch, location.pathname]);\n\n    const editProfile = function(event: React.MouseEvent) {\n        navigate(\"/people/\" + username + \"/edit\");\n    };\n\n    // when visiting other user's profile shows remove and add friend buttons\n    const addFriend = async function(event: React.MouseEvent) {\n        await addFriendDB(userOnPath);\n        setfriendslist((prevState) => [...prevState, userOnPath]);\n        setisfriend(true);\n    };\n\n    const removeFriend = async function(event: React.MouseEvent) {\n        await removeFriendDB(userOnPath);\n        setfriendslist((prevState) => {\n            const newfriendlist = Array.from(prevState);\n            const friendtoremove = newfriendlist.findIndex(\n                (element) => element === userOnPath\n            );\n            if (friendtoremove !== -1) {\n                newfriendlist.splice(friendtoremove, 1);\n            }\n            return newfriendlist;\n        });\n        setisfriend(false);\n    };\n\n    useEffect(() => {\n        const currentnameonpath = location.pathname.substring(8);\n        setUserOnPath(currentnameonpath);\n        setfriendspath(\"/people/\" + currentnameonpath + \"/friends\");\n        const loggedinuser = user.username;\n        if (loggedinuser !== currentnameonpath) {\n            setUserMatchesPath(false);\n            setOtherUserDetailsFetched(false);\n            setOtherUserProjectsFetched(false);\n            dispatch(clearProjects({ allprojects: \"allprojects\" }));\n        } else {\n            setUserMatchesPath(true);\n            if (projectData[0].projectid === \"\") {\n                setnumberprojects(0);\n            } else {\n                setnumberprojects(projectData.length);\n            }\n        }\n    }, [location, dispatch, projectData, user]);\n\n    useEffect(() => {\n        if (projectData[0].projectid === \"\") {\n            setnumberprojects(0);\n        } else {\n            setnumberprojects(projectData.length);\n        }\n    }, [projectData]);\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry: \" + userOnPath + \"'s profile\";\n    }, [userOnPath]);\n\n    // only the number of projects and friends is working. remaining counters are not implemented\n    return (\n        <div id=\"content\">\n            <div id=\"usernickname\">\n                <h2>{userMatchesPath ? username : userOnPath}</h2>\n            </div>\n            <div id=\"userprofile\">\n                <div id=\"profileleft\">\n                    {userMatchesPath && (\n                        <button onClick={editProfile} className=\"genericbutton\">\n                            edit profile\n                        </button>\n                    )}\n                    {!userMatchesPath && !isfriend && (\n                        <button onClick={addFriend} className=\"genericbutton\">\n                            add friend\n                        </button>\n                    )}\n                    {!userMatchesPath && isfriend && (\n                        <button onClick={removeFriend} className=\"genericbutton\">\n                            remove friend\n                        </button>\n                    )}\n\n                    <DisplayProfileImage imageurl={publicImgUrl} />\n                </div>\n                <div id=\"profile\">\n                    {infofetched && infotodisplay !== undefined && (\n                        <DisplayProfileDetails userinfo={infotodisplay} />\n                    )}\n                </div>\n                <div id=\"profileright\">\n                    <div>\n                        <Link to={notebookpath}>\n                            <img src={ProjectIcon} alt=\"projecticon\" /> {numberprojects}{\" \"}\n                            projects\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to=\"/\">\n                            <img src={StashIcon} alt=\"stashicon\" /> 0 stashed\n                        </Link>\n                    </div>\n\n                    <div>\n                        <Link to=\"/\">\n                            <img src={QueueIcon} alt=\"queueicon\" /> 0 queued{\" \"}\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to=\"/\">\n                            <img src={FavoritesIcon} alt=\"favoritesicon\" /> 0 faves\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to=\"/\">\n                            <img src={LibraryIcon} alt=\"libraryicon\" /> 0 library\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to={friendspath}>\n                            <img src={FriendsIcon} alt=\"friendsicon\" /> {friendslist.length}{\" \"}\n                            friends\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to=\"/\">\n                            <img src={ForumIcon} alt=\"forumicon\" /> 0 posts\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to=\"/\">\n                            <img src={CommentsIcon} alt=\"commenticon\" /> 0 comments\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n","import { Country } from \"../projects/SelectOptions\";\nimport { RootState } from \"../store/store\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    addInfoToProfile,\n    getInfo,\n    uploadProfilePhoto,\n    getUserProfileInformation,\n} from \"../../Firebase\";\nimport uniqid from \"uniqid\";\nimport DisplayProfileImage from \"./DisplayProfileImage\";\nimport type { ProfileInformation } from \"../common/types\";\n\nconst EditProfile = function() {\n    const navigate = useNavigate();\n    const [selectedcountry, setselectedcountry] = useState<string>(\"notselected\");\n    const [personalsite, setpersonalsite] = useState<string>(\"\");\n    const [firstname, setfirstname] = useState<string>(\"\");\n    const [yearsknitting, setyearsknitting] = useState<string>(\"\");\n    const [yearscrocheting, setyearscrocheting] = useState<string>(\"\");\n    const [petskids, setpetskids] = useState<string>(\"\");\n    const [favoritecolors, setfavoritecolors] = useState<string>(\"\");\n    const [favecurseword, setfavecurseword] = useState<string>(\"\");\n    const [aboutme, setaboutme] = useState<string>(\"\");\n    const [email, setemail] = useState<string>(\"\");\n    const [emailready, setemailready] = useState<boolean>(false);\n    const [infofetched, setinfofecthed] = useState<boolean>(false);\n    const [publicImgUrl, setPublicImgUrl] = useState<string>(\"\");\n    const fileInput = useRef<HTMLInputElement | null>(null);\n\n    const functionmap = new Map([\n        [\"personalsite\", setpersonalsite],\n        [\"firstname\", setfirstname],\n        [\"yearsknitting\", setyearsknitting],\n        [\"yearscrocheting\", setyearscrocheting],\n        [\"petskids\", setpetskids],\n        [\"favoritecolors\", setfavoritecolors],\n        [\"curseword\", setfavecurseword],\n        [\"aboutme\", setaboutme],\n    ]);\n\n    const user = useSelector((state: RootState) => state.userinfo);\n\n    useEffect(() => {\n        setfirstname(user.name);\n    }, [user]);\n\n    useEffect(() => {\n        const fetchEmail = async function() {\n            const fetchedemail = await getInfo(\"email\");\n            setemail(fetchedemail);\n            setemailready(true);\n        };\n        if (!emailready) {\n            fetchEmail();\n        }\n    }, [emailready]);\n\n    useEffect(() => {\n        const fetchUserProfileInformation = async function() {\n            const profileinfo: ProfileInformation | false | undefined =\n                await getUserProfileInformation(user.userID);\n\n            return profileinfo;\n        };\n        if (!infofetched) {\n            const profileinfo = fetchUserProfileInformation();\n            profileinfo.then(function(dbinfo) {\n                if (dbinfo !== false && dbinfo !== undefined) {\n                    if (dbinfo.selectedcountry !== undefined) {\n                        setselectedcountry(dbinfo.selectedcountry);\n                    }\n\n                    if (dbinfo.personalsite !== undefined) {\n                        setpersonalsite(dbinfo.personalsite);\n                    }\n\n                    if (dbinfo.yearsknitting !== undefined) {\n                        setyearsknitting(dbinfo.yearsknitting);\n                    }\n\n                    if (dbinfo.yearscrocheting !== undefined) {\n                        setyearscrocheting(dbinfo.yearscrocheting);\n                    }\n\n                    if (dbinfo.petskids !== undefined) {\n                        setpetskids(dbinfo.petskids);\n                    }\n                    if (dbinfo.favoritecolors !== undefined) {\n                        setfavoritecolors(dbinfo.favoritecolors);\n                    }\n                    if (dbinfo.favecurseword !== undefined) {\n                        setfavecurseword(dbinfo.favecurseword);\n                    }\n\n                    if (dbinfo.aboutme !== undefined) {\n                        setaboutme(dbinfo.aboutme);\n                    }\n                    if (dbinfo.imageurl !== undefined) {\n                        setPublicImgUrl(dbinfo.imageurl);\n                    }\n                }\n                setinfofecthed(true);\n            });\n        }\n    }, [infofetched, user]);\n\n    // saves photo to firebase storage and updates DB with publicURL\n    const savePhoto = async function(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (\n            fileInput !== null &&\n            fileInput.current !== null &&\n            fileInput.current.files !== null\n        ) {\n            const publicUrl = await uploadProfilePhoto(fileInput.current.files[0]);\n            if (publicUrl !== false && publicUrl !== undefined) {\n                setPublicImgUrl(publicUrl);\n                await addInfoToProfile(\n                    publicUrl,\n                    firstname,\n                    personalsite,\n                    selectedcountry,\n                    yearsknitting,\n                    yearscrocheting,\n                    petskids,\n                    favoritecolors,\n                    favecurseword,\n                    aboutme\n                );\n            }\n        }\n    };\n\n    const selectCountry = function(event: React.ChangeEvent<HTMLSelectElement>) {\n        setselectedcountry(event.target.value);\n    };\n\n    const handleSubmit = async function(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        event.preventDefault();\n        await addInfoToProfile(\n            publicImgUrl,\n            firstname,\n            personalsite,\n            selectedcountry,\n            yearsknitting,\n            yearscrocheting,\n            petskids,\n            favoritecolors,\n            favecurseword,\n            aboutme\n        );\n        navigate(\"/people/\" + user.username);\n    };\n\n    const handleChange = function(\n        event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n    ): void {\n        const elementId: string = event.target.id;\n        if (elementId === \"country\") {\n            setselectedcountry(event.target.value);\n        } else {\n            const elementStateFunction = functionmap.get(elementId);\n            if (elementStateFunction !== undefined) {\n                elementStateFunction(event.target.value);\n            }\n        }\n    };\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry: \" + user.username + \"'s profile\";\n    }, [user]);\n\n    return (\n        <div id=\"content\">\n            <div id=\"userprofile\">\n                <div id=\"profileleft\">\n                    <div>\n                        <h2>{user.username}</h2>\n                    </div>\n                    <div>add profile pics</div>\n                    <DisplayProfileImage imageurl={publicImgUrl} />\n                    <form id=\"uploadProfilePic\" onSubmit={savePhoto}>\n                        <label htmlFor=\"uploadphotoproject\">\n                            <input\n                                type=\"file\"\n                                id=\"uploadphotoproject\"\n                                name=\"uploadphotoproject\"\n                                accept=\"image/*\"\n                                ref={fileInput}\n                            />\n                        </label>\n                        <button\n                            id=\"submitphoto\"\n                            type=\"submit\"\n                            form=\"uploadProfilePic\"\n                            className=\"genericbutton\"\n                        >\n                            Upload\n                        </button>\n                    </form>\n                </div>\n\n                <div id=\"editprofile\">\n                    <h3>important stuff</h3>\n                    <div className=\"editprofilediv\">\n                        <div className=\"editprofiledivlabel\">Email address</div>\n                        <div>{email}</div>\n                    </div>\n                    <form onSubmit={handleSubmit} id=\"submitprofiledetails\">\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"personalsite\" className=\"editprofiledivlabel\">\n                                Website or blog\n                            </label>\n                            <input\n                                type=\"text\"\n                                name=\"personalsite\"\n                                id=\"personalsite\"\n                                value={personalsite}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <h3>personal bits</h3>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"firstname\" className=\"editprofiledivlabel\">\n                                First Name\n                            </label>\n                            <input\n                                type=\"text\"\n                                name=\"firstname\"\n                                id=\"firstname\"\n                                value={firstname}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"country\" className=\"editprofiledivlabel\">\n                                Country\n                            </label>\n                            <select\n                                id=\"country\"\n                                name=\"country\"\n                                value={selectedcountry}\n                                onChange={selectCountry}\n                            >\n                                {Country.map((acountry) => (\n                                    <option key={uniqid()} value={acountry.value}>\n                                        {acountry.text}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"yearsknitting\" className=\"editprofiledivlabel\">\n                                Years knitting\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"yearsknitting\"\n                                name=\"yearsknitting\"\n                                value={yearsknitting}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"yearscrocheting\" className=\"editprofiledivlabel\">\n                                Years crocheting\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"yearscrocheting\"\n                                name=\"yearscrocheting\"\n                                value={yearscrocheting}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"petskids\" className=\"editprofiledivlabel\">\n                                Any pets? Kids?\n                            </label>\n                            <input\n                                id=\"petskids\"\n                                name=\"petskids\"\n                                type=\"text\"\n                                value={petskids}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"favoritecolors\" className=\"editprofiledivlabel\">\n                                Favorite colors\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"favoritecolors\"\n                                name=\"favoritecolors\"\n                                value={favoritecolors}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"curseword\" className=\"editprofiledivlabel\">\n                                Fave curse word\n                            </label>\n                            <input\n                                type=\"text\"\n                                name=\"curseword\"\n                                id=\"curseword\"\n                                value={favecurseword}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"editprofilediv\">\n                            <label htmlFor=\"aboutme\" className=\"editprofiledivlabel\">\n                                About me\n                            </label>\n                            <input\n                                type=\"textarea\"\n                                name=\"aboutme\"\n                                id=\"aboutme\"\n                                value={aboutme}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"genericbutton\"\n                            form=\"submitprofiledetails\"\n                        >\n                            save changes\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditProfile;\n","export default __webpack_public_path__ + \"static/media/recap.a760b8a0.jpg\";","import Recap from \"../images/recap.jpg\";\nimport React, { useEffect } from \"react\";\n\nconst Welcome = function() {\n    useEffect(() => {\n        document.title = \"Fake Ravelry: Home\";\n    }, []);\n    return (\n        <div id=\"blogcontent\">\n            <h2>Welcome to Fake Ravelry</h2>\n            <div id=\"introduction\">\n                <p>\n                    This website is a project for The Odin Project. It is meant to be a\n                    copy of <a href=\"https://www.ravelry.com/\">Ravelry</a>, a website for\n                    crafters.\n                </p>\n                <p>\n                    It is a very simplified version of Ravelry, with only two features\n                    implemented: the user can add friends and projects. And that's it!\n                </p>\n                <p>Below is a copy of a blog post from Ravelry's main page.</p>\n            </div>\n            <div className=\"blogpost\">\n                <div className=\"blogpostheader\">\n                    <h2>2021 Recap</h2>\n                    <div>\n                        <p>\n                            by{\" \"}\n                            <a href=\"https://www.ravelry.com/people/onestitchshort\">\n                                onestitchshort\n                            </a>\n                        </p>\n                        <p>January 7, 2022</p>\n                    </div>\n                </div>\n                <img src={Recap} alt=\"2021recap\" />\n\n                <p>\n                    After 2020, we had high hopes for 2021. In a lot of ways,\n                    unfortunately, it didn't live up to our expectations. But through it\n                    all, Ravelers kept on making beautiful creations! This year our\n                    Ravelry community:\n                </p>\n                <ul>\n                    <li>\n                        published more than <b>82,000</b> patterns, helping the Ravelry\n                        database grow past <b>1.1 million</b> patterns\n                    </li>\n                    <li>\n                        finished over <b>1.2 million</b> projects: 1,000,000 knitting,\n                        192,000 crochet, 7,000 weaving, 6,000 machine knitting, 1,000 loom\n                        knitting, and 14,000 spinning projects.\n                    </li>\n                    <li>\n                        used at least <b>440 million yards</b> /{\" \"}\n                        <b>400 million meters of yarn</b>\n                    </li>\n                    <li>\n                        added over <b>31.7 million</b> patterns and 3 million projects to\n                        your favorites\n                    </li>\n                    <li>\n                        spun over <b>1200 kilograms</b> of fiber\n                    </li>\n                    <li>\n                        added over 9 million photos throughout pattern, yarn, project, and\n                        stash pages\n                    </li>\n                    <li>\n                        kept our Hot Right Now area busy! <b>6,230</b> different patterns\n                        were featured in the Hot Right Now top 20. <b>4,135</b> designers\n                        appeared in the debut patterns spotlight. You can find both of these\n                        lists on the Patterns page.\n                    </li>\n                </ul>\n                <p>\n                    Last year, we posted the number of projects countries had completed\n                    per capita and it sparked a little friendly competition between\n                    countries who wanted to move up in the rankings. Here's our Top 5 2021\n                    countries based on projects per capita:\n                </p>\n                <ul>\n                    <li>Iceland: 744 projects per 100,000 people</li>\n                    <li>Norway: 601 projects per 100,000 people</li>\n                    <li>Finland: 544 projects per 100,000 people</li>\n                    <li>Canada: 302 projects per 100,000 people</li>\n                    <li>Sweden: 285 projects per 100,000 people</li>\n                </ul>\n                <p>\n                    While Iceland, Norway, and Finland remained our top three in that\n                    order, Finland moved much closer to Norway.Last year they were\n                    separated by 167 projects and this year only 67 projects separated\n                    them!\n                </p>\n\n                <p>\n                    Your creativity has kept us inspired throughout 2021 and we are very\n                    much looking forward to seeing what you will make in 2022. If you'd\n                    like to set a goal for how many projects you'd like to create, check\n                    out our Project Challenge! It allows you to set your goal and make a\n                    plan for 2022 using your queue.You can find out how it works in this\n                    blog post.\n                </p>\n\n                <p>\n                    We know the year hasn't quite started on a hopeful note with high\n                    Covid rates in many parts of the world, but your creations bring joy\n                    both to those around you and to those of us who get the pleasure of\n                    seeing them on Ravelry. Here's to more creativity and joy flying off\n                    the needles and hooks in 2022!\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Welcome;\n","export default __webpack_public_path__ + \"static/media/logo.ab7b75e2.svg\";","import { createUser } from \"../Firebase\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport logo from \"../images/logo.svg\";\n\nconst Signup = function() {\n    const [username, setUsername] = useState<string>(\"\");\n    const [nameSelected, setNameSelected] = useState<string>(\"\");\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n\n    const setFunctions = new Map([\n        [\"username\", setUsername],\n        [\"nameSelected\", setNameSelected],\n        [\"email\", setEmail],\n        [\"password\", setPassword],\n    ]);\n\n    const navigate = useNavigate();\n    // checks if username already exists; creates user on DB if it doesn't\n    const handlerOfSubmit = async function(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        event.preventDefault();\n        const signup = await createUser(email, password, username, nameSelected);\n        if (signup !== \"user already exists\") {\n            const newpath: string = \"/people/\" + username;\n            navigate(newpath, { state: { name: nameSelected } });\n        } else {\n            alert(\"Username is already being used. Choose another one\");\n        }\n    };\n\n    const handlerOfChange = function(\n        event: React.ChangeEvent<HTMLInputElement>\n    ) {\n        const elementId: string = event.target.id;\n        const elementStateFunction = setFunctions.get(elementId);\n        if (elementStateFunction !== undefined)\n            elementStateFunction(event.target.value);\n    };\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry\";\n    }, []);\n\n    return (\n        <div id=\"signuppage\">\n            <div id=\"navnotloggedin\">\n                <ul>\n                    <li id=\"notloggedinlogo\">\n                        <Link to=\"/\">\n                            <span id=\"logo\">\n                                <img src={logo} alt=\"fakeravelrylogo\" />\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/\">sign in</Link>\n                    </li>\n                    <li>or</li>\n                    <li>\n                        <Link to=\"/signup\">create an account</Link>\n                    </li>\n                </ul>\n            </div>\n            <div id=\"signupform\">\n                <h1>Join Fakeravelry!</h1>\n                <form onSubmit={handlerOfSubmit}>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        onChange={handlerOfChange}\n                        value={username}\n                        maxLength={16}\n                    />\n                    <label htmlFor=\"nameSelected\">Name:</label>\n                    <input\n                        name=\"nameSelected\"\n                        id=\"nameSelected\"\n                        type=\"text\"\n                        onChange={handlerOfChange}\n                        value={nameSelected}\n                        maxLength={24}\n                    />\n                    <label htmlFor=\"email\">E-mail:</label>\n                    <input\n                        name=\"email\"\n                        id=\"email\"\n                        type=\"email\"\n                        onChange={handlerOfChange}\n                        value={email}\n                    />\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        name=\"password\"\n                        id=\"password\"\n                        type=\"password\"\n                        onChange={handlerOfChange}\n                        value={password}\n                    />\n                    <button type=\"submit\" title=\"Sign up\" className=\"frontpagebutton\">\n                        Sign up\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store/store\";\n\nconst initialState = [\n    {\n        projectid: \"\",\n        imageUrl: \"\",\n        crafttype: \"\",\n        projectslug: \"\",\n        projectname: \"\",\n        patternused: \"\",\n        pattern: { name: \"\", about: \"\" },\n        projectinfo: {\n            madefor: \"\",\n            linktoraveler: \"\",\n            finishby: \"\",\n            sizemade: \"\",\n            patternfrom: \"\",\n            patterncategory: \"\",\n            selectedtags: \"\",\n            needles: [],\n            hooks: [],\n            gauge: {\n                numberStsOrRepeats: 0,\n                horizontalunits: \"stitches\",\n                numberRows: 0,\n                gaugesize: \"\",\n                gaugepattern: \"\",\n            },\n            yarn: \"\",\n            projectnotes: \"\",\n        },\n        projectstatus: {\n            progressstatus: \"inprogress\",\n            progressrange: \"0\",\n            happiness: \"\",\n            starteddate: \"\",\n            completeddate: \"\",\n        },\n    },\n];\n\nconst projectsSlice = createSlice({\n    name: \"projects\",\n    initialState,\n    reducers: {\n        projectDeleted(state, action) {\n            const { projectid } = action.payload;\n            return state.filter((element) => element.projectid !== projectid);\n        },\n        projectAdded(state, action) {\n            if (state.length === 1 && state[0].projectid === \"\") {\n                state[0].projectid = action.payload.projectid;\n                state[0].crafttype = action.payload.crafttype;\n                state[0].projectslug = action.payload.projectslug;\n                state[0].projectname = action.payload.projectname;\n                state[0].patternused = action.payload.patternused;\n                state[0].pattern.name = action.payload.patternname;\n            } else {\n                const project = {\n                    projectid: action.payload.projectid,\n                    imageUrl: \"\",\n                    crafttype: action.payload.crafttype,\n                    projectslug: action.payload.projectslug,\n                    projectname: action.payload.projectname,\n                    patternused: action.payload.patternused,\n                    pattern: { name: action.payload.patternname, about: \"\" },\n                    projectinfo: {\n                        madefor: \"\",\n                        linktoraveler: \"\",\n                        finishby: \"\",\n                        sizemade: \"\",\n                        patternfrom: \"\",\n                        patterncategory: \"\",\n                        selectedtags: \"\",\n                        needles: [],\n                        hooks: [],\n                        gauge: {\n                            numberStsOrRepeats: 0,\n                            horizontalunits: \"stitches\",\n                            numberRows: 0,\n                            gaugesize: \"\",\n                            gaugepattern: \"\",\n                        },\n                        yarn: \"\",\n                        projectnotes: \"\",\n                    },\n                    projectstatus: {\n                        progressstatus: \"inprogress\",\n                        progressrange: \"0\",\n                        happiness: \"\",\n                        starteddate: \"\",\n                        completeddate: \"\",\n                    },\n                };\n                state.push(project);\n            }\n        },\n        projectFetchedFromDB(state, action) {\n            const {\n                projectid,\n                imageUrl,\n                crafttype,\n                projectslug,\n                projectname,\n                patternused,\n                patternname,\n                about,\n                madefor,\n                linktoraveler,\n                finishby,\n                sizemade,\n                patternfrom,\n                patterncategory,\n                selectedtags,\n                needles,\n                hooks,\n                numberStsOrRepeats,\n                horizontalunits,\n                numberRows,\n                gaugesize,\n                gaugepattern,\n                yarn,\n                projectnotes,\n                progressstatus,\n                progressrange,\n                happiness,\n                starteddate,\n                completeddate,\n            } = action.payload;\n            if (state.length === 1 && state[0].projectid === \"\") {\n                state[0].projectid = projectid;\n                state[0].imageUrl = imageUrl;\n                state[0].crafttype = crafttype;\n                state[0].projectslug = projectslug;\n                state[0].projectname = projectname;\n                state[0].patternused = patternused;\n                state[0].pattern.name = patternname;\n                state[0].pattern.about = about;\n                state[0].projectinfo.madefor = madefor;\n                state[0].projectinfo.linktoraveler = linktoraveler;\n                state[0].projectinfo.finishby = finishby;\n                state[0].projectinfo.sizemade = sizemade;\n                state[0].projectinfo.patternfrom = patternfrom;\n                state[0].projectinfo.patterncategory = patterncategory;\n                state[0].projectinfo.selectedtags = selectedtags;\n                state[0].projectinfo.needles = needles;\n                state[0].projectinfo.hooks = hooks;\n                state[0].projectinfo.gauge.numberStsOrRepeats = numberStsOrRepeats;\n                state[0].projectinfo.gauge.horizontalunits = horizontalunits;\n                state[0].projectinfo.gauge.numberRows = numberRows;\n                state[0].projectinfo.gauge.gaugesize = gaugesize;\n                state[0].projectinfo.gauge.gaugepattern = gaugepattern;\n                state[0].projectinfo.yarn = yarn;\n                state[0].projectinfo.projectnotes = projectnotes;\n                state[0].projectstatus.progressstatus = progressstatus;\n                state[0].projectstatus.progressrange = progressrange;\n                state[0].projectstatus.happiness = happiness;\n                state[0].projectstatus.starteddate = starteddate;\n                state[0].projectstatus.completeddate = completeddate;\n            } else {\n                const project = {\n                    projectid: projectid,\n                    imageUrl: imageUrl,\n                    crafttype: crafttype,\n                    projectslug: projectslug,\n                    projectname: projectname,\n                    patternused: patternused,\n                    pattern: { name: patternname, about: about },\n                    projectinfo: {\n                        madefor: madefor,\n                        linktoraveler: linktoraveler,\n                        finishby: finishby,\n                        sizemade: sizemade,\n                        patternfrom: patternfrom,\n                        patterncategory: patterncategory,\n                        selectedtags: selectedtags,\n                        needles: needles,\n                        hooks: hooks,\n                        gauge: {\n                            numberStsOrRepeats: numberStsOrRepeats,\n                            horizontalunits: horizontalunits,\n                            numberRows: numberRows,\n                            gaugesize: gaugesize,\n                            gaugepattern: gaugepattern,\n                        },\n                        yarn: yarn,\n                        projectnotes: projectnotes,\n                    },\n                    projectstatus: {\n                        progressstatus: progressstatus,\n                        progressrange: progressrange,\n                        happiness: happiness,\n                        starteddate: starteddate,\n                        completeddate: completeddate,\n                    },\n                };\n                state.push(project);\n            }\n        },\n        projectPhotoAdded(state, action) {\n            const { projectid, imageUrl } = action.payload;\n            const existingProject = state.find(\n                (project) => project.projectid === projectid\n            );\n            if (existingProject) {\n                existingProject.imageUrl = imageUrl;\n            }\n        },\n        projectPhotoDeleted(state, action) {\n            const { projectid } = action.payload;\n            const existingProject = state.find(\n                (project) => project.projectid === projectid\n            );\n            if (existingProject) {\n                existingProject.imageUrl = \"\";\n            }\n        },\n        projectUpdated(state, action) {\n            const {\n                projectid,\n                crafttype,\n                projectslug,\n                projectname,\n                patternused,\n                patternname,\n                about,\n                madefor,\n                linktoraveler,\n                finishby,\n                sizemade,\n                patternfrom,\n                patterncategory,\n                selectedtags,\n                needles,\n                hooks,\n                numberStsOrRepeats,\n                horizontalunits,\n                numberRows,\n                gaugesize,\n                gaugepattern,\n                yarn,\n                projectnotes,\n                progressstatus,\n                progressrange,\n                happiness,\n                starteddate,\n                completeddate,\n            } = action.payload;\n            const existingProject = state.find(\n                (project) => project.projectid === projectid\n            );\n            if (existingProject) {\n                existingProject.crafttype = crafttype;\n                existingProject.projectslug = projectslug;\n                existingProject.projectname = projectname;\n                existingProject.patternused = patternused;\n                existingProject.pattern.name = patternname;\n                existingProject.pattern.about = about;\n                existingProject.projectinfo.madefor = madefor;\n                existingProject.projectinfo.linktoraveler = linktoraveler;\n                existingProject.projectinfo.finishby = finishby;\n                existingProject.projectinfo.sizemade = sizemade;\n                existingProject.projectinfo.patternfrom = patternfrom;\n                existingProject.projectinfo.patterncategory = patterncategory;\n                existingProject.projectinfo.selectedtags = selectedtags;\n                existingProject.projectinfo.needles = needles;\n                existingProject.projectinfo.hooks = hooks;\n                existingProject.projectinfo.gauge.numberStsOrRepeats =\n                    numberStsOrRepeats;\n                existingProject.projectinfo.gauge.horizontalunits = horizontalunits;\n                existingProject.projectinfo.gauge.numberRows = numberRows;\n                existingProject.projectinfo.gauge.gaugesize = gaugesize;\n                existingProject.projectinfo.gauge.gaugepattern = gaugepattern;\n                existingProject.projectinfo.yarn = yarn;\n                existingProject.projectinfo.projectnotes = projectnotes;\n                existingProject.projectstatus.progressstatus = progressstatus;\n                existingProject.projectstatus.progressrange = progressrange;\n                existingProject.projectstatus.happiness = happiness;\n                existingProject.projectstatus.starteddate = starteddate;\n                existingProject.projectstatus.completeddate = completeddate;\n            }\n        },\n    },\n});\n\nexport const {\n    projectAdded,\n    projectFetchedFromDB,\n    projectUpdated,\n    projectPhotoAdded,\n    projectPhotoDeleted,\n    projectDeleted,\n} = projectsSlice.actions;\nexport const selectProjectById = (state: RootState, projectID: string) =>\n    state.projects.find((project) => project.projectid === projectID);\nexport default projectsSlice.reducer;\n","import { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Breadcrumbs = function(props: {\n    username: string;\n    projectname: string;\n    profileimage: string;\n}) {\n    const [userprofile, setuserprofile] = useState<string>(\"\");\n    const [usernotebook, setusernotebook] = useState<string>(\"\");\n\n    useEffect(() => {\n        setuserprofile(`/people/${props.username}`);\n        setusernotebook(`/notebook/${props.username}`);\n    }, [props.username]);\n\n    return (\n        <div id=\"breadcrumbs\">\n            <ul>\n                <li>\n                    <img\n                        src={props.profileimage}\n                        alt=\"userimage\"\n                        id=\"profileimgbreadcrumb\"\n                    />\n                    <Link to={userprofile}>{props.username}</Link>\n                </li>\n                <li> {\">\"} </li>\n                <li>\n                    <Link to={usernotebook}>notebook</Link>\n                </li>\n                <li> {\">\"} </li>\n                <li>\n                    <Link to={usernotebook}>projects</Link>\n                </li>\n                <li> {\">\"} </li>\n                <li>{props.projectname}</li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Breadcrumbs;\n","// create new project\nimport React, { useState, useEffect } from \"react\";\nimport { RootState } from \"./store/store\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { projectAdded } from \"./projects/projectsSlice\";\nimport { addProjectToNotebook, checkUniqueProjectName } from \"../Firebase\";\nimport Breadcrumbs from \"./projects/Breadcrumbs\";\nimport type { ProfileInformation } from \"./common/types\";\nimport { getUserProfileInformation } from \"../Firebase\";\n\nconst NewProject = function() {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [projectID, setProjectID] = useState<string>(\"\");\n    const [craftType, setCraftType] = useState<string>(\"knitting\");\n    const [projectName, setProjectName] = useState<string>(\"\");\n    const [patternName, setPatternName] = useState<string>(\"\");\n    const user = useSelector((state: RootState) => state.userinfo.username);\n    const userid = useSelector((state: RootState) => state.userinfo.userID);\n    const projectData = useSelector((state: RootState) => state.projects);\n    const [username, setUsername] = useState<string>(\"\");\n    const setFunctions = new Map([\n        [\"craft-select\", setCraftType],\n        [\"projectname\", setProjectName],\n        [\"patternname\", setPatternName],\n    ]);\n\n    useEffect(() => {\n        setProjectID(nanoid());\n    }, []);\n    const handlerOfChange = function(\n        event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n    ): void {\n        const elementID = event.target.id;\n        const newvalue = event.target.value;\n        const elementStateFunction = setFunctions.get(elementID);\n        if (elementStateFunction !== undefined) {\n            elementStateFunction(newvalue);\n        }\n    };\n\n    // creates project in DB with provided information and also adds project to store\n    const handlerOfSubmit = async function(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        event.preventDefault();\n        const patternUsed: string = (event.currentTarget.elements.namedItem(\n            \"patternused\"\n        ) as HTMLInputElement).value;\n        const cleanProjectName = projectName\n            .toLowerCase()\n            .trim()\n            .replace(/ /g, \"-\");\n        // checks if a project with the same name already exists in DB; if it does, checkUniqueProjectName returns a usable projectslug (with a number)\n        const uniqueProjectSlug = await checkUniqueProjectName(cleanProjectName);\n        if (uniqueProjectSlug !== false) {\n            const newpath = getPathWithUsername(uniqueProjectSlug);\n            await addProjectToNotebook(\n                projectID,\n                craftType,\n                uniqueProjectSlug,\n                projectName,\n                patternUsed,\n                patternName\n            );\n\n            dispatch(\n                projectAdded({\n                    projectid: projectID,\n                    crafttype: craftType,\n                    projectslug: uniqueProjectSlug,\n                    projectname: projectName,\n                    patternused: patternUsed,\n                    patternname: patternName,\n                })\n            );\n\n            navigate(newpath, {\n                state: {\n                    projectid: projectID,\n                },\n            });\n        } else {\n            console.log(\"error creating project\");\n        }\n    };\n\n    const getPathWithUsername = function(projectslug: string) {\n        const path =\n            \"/notebook/\" + username + \"/projects/\" + projectslug + \"/editproject\";\n        return path;\n    };\n\n    const [profilebreadcrumbimage, setprofilebreadcrumbimage] = useState<string>(\n        \"\"\n    );\n    const [projectordinalnumber, setprojectordinalnumber] = useState<string>(\"\");\n\n    // for displaying the user's number of existing projects in ordinal\n    const transformtoordinalnumber = function(originalnumber: number) {\n        let ordinalnumber = \"\";\n        if (Math.floor(originalnumber / 10) === 0) {\n            switch (originalnumber) {\n                case 1:\n                    ordinalnumber = \"1st\";\n                    break;\n                case 2:\n                    ordinalnumber = \"2nd\";\n                    break;\n                case 3:\n                    ordinalnumber = \"3rd\";\n                    break;\n                default:\n                    ordinalnumber = originalnumber + \"th\";\n            }\n        } else if (\n            Math.floor(originalnumber / 10) > 0 &&\n            Math.floor(originalnumber / 10) <= 9\n        ) {\n            switch (originalnumber % 10) {\n                case 1:\n                    ordinalnumber = (originalnumber - (originalnumber % 10)) / 10 + \"1st\";\n                    break;\n                case 2:\n                    ordinalnumber = (originalnumber - (originalnumber % 10)) / 10 + \"2nd\";\n                    break;\n                case 3:\n                    ordinalnumber = (originalnumber - (originalnumber % 10)) / 10 + \"3rd\";\n                    break;\n                default:\n                    ordinalnumber = originalnumber + \"th\";\n            }\n        } else {\n            ordinalnumber = originalnumber + \"th\";\n        }\n        return ordinalnumber;\n    };\n    useEffect(() => {\n        const fetchUserProfileInformation = async () => {\n            if (userid !== \"\") {\n                const profileinfo:\n                    | ProfileInformation\n                    | false\n                    | undefined = await getUserProfileInformation(userid);\n                if (profileinfo !== undefined && profileinfo !== false) {\n                    setprofilebreadcrumbimage(profileinfo.imageurl);\n                }\n            }\n        };\n        fetchUserProfileInformation();\n    }, [userid]);\n\n    useEffect(() => {\n        setUsername(user);\n    }, [user]);\n\n    useEffect(() => {\n        const ordinalnumber = transformtoordinalnumber(projectData.length + 1);\n        setprojectordinalnumber(ordinalnumber);\n    }, [projectData]);\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry\";\n    }, []);\n\n    return (\n        <div id=\"newprojectcontent\">\n            <Breadcrumbs\n                username={username}\n                projectname={\"new project\"}\n                profileimage={profilebreadcrumbimage}\n            />\n\n            <div id=\"newproject\">\n                <div id=\"newprojectprofile\">\n                    <img src={profilebreadcrumbimage} alt=\"profileimg\" />\n\n                    <p>You are adding your {projectordinalnumber} project</p>\n                </div>\n                <form onSubmit={handlerOfSubmit} id=\"newprojectform\">\n                    <label htmlFor=\"craft-select\" className=\"labelemphasis\">\n                        Which craft?\n                    </label>\n                    <select\n                        name=\"crafts\"\n                        id=\"craft-select\"\n                        value={craftType}\n                        onChange={handlerOfChange}\n                    >\n                        <option value=\"knitting\">Knitting</option>\n                        <option value=\"crochet\">Crochet</option>\n                        <option value=\"loomknitting\">Loom Knitting</option>\n                        <option value=\"machineknitting\">Machine Knitting</option>\n                        <option value=\"weaving\">Weaving</option>\n                        <option value=\"spinning\">Spinning</option>\n                    </select>\n                    <label htmlFor=\"projectname\" className=\"labelemphasis\">\n                        Name your project{\" \"}\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"projectname\"\n                        name=\"projectname\"\n                        onChange={handlerOfChange}\n                    />\n                    <div className=\"newprojectlabel\">\n                        <input\n                            type=\"radio\"\n                            id=\"usedapattern\"\n                            name=\"patternused\"\n                            value=\"usedapattern\"\n                            defaultChecked\n                        />\n                        <label htmlFor=\"usedapattern\">I used a pattern</label>\n                    </div>\n                    <label htmlFor=\"patternname\" className=\"labelemphasis\">\n                        Enter the pattern name\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"patternname\"\n                        name=\"patternname\"\n                        onChange={handlerOfChange}\n                    />\n                    <div className=\"newprojectlabel\">\n                        <input\n                            type=\"radio\"\n                            id=\"didntuseapattern\"\n                            name=\"patternused\"\n                            value=\"didntuseapattern\"\n                        />\n                        <label htmlFor=\"didntuseapattern\" className=\"newprojectlabel\">\n                            I didn't use a pattern\n                        </label>\n                    </div>\n                    <div className=\"newprojectlabel\">\n                        <input\n                            type=\"radio\"\n                            id=\"patternnotonrav\"\n                            name=\"patternused\"\n                            value=\"patternnotonrav\"\n                        />\n                        <label htmlFor=\"patternnotonrav\" className=\"newprojectlabel\">\n                            The pattern that I used is not in Ravelry\n                        </label>\n                    </div>\n                    <button type=\"submit\" className=\"genericbutton\">\n                        Continue\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default NewProject;\n","import type { Yarn } from \"./types\";\n\nexport class YarnEntry implements Yarn {\n    [key: string]: string | number | null | undefined;\n    yarnID: string;\n    yarnname: string;\n    colorway: string;\n    closestcolor: string;\n    dyelot: string;\n    yarnweight: string;\n    meterage: number | undefined;\n    skeinmeterageunit: string;\n    skeinweight: number | undefined;\n    skeinweightunit: string;\n    numberskeins: number | undefined;\n    purchasedat: string;\n    purchasedate: string;\n    totalpaid: number | undefined;\n    currency: string;\n    constructor(yarnID: string) {\n        this.yarnID = yarnID;\n        this.yarnname = \"\";\n        this.colorway = \"\";\n        this.closestcolor = \"colorway0\";\n        this.dyelot = \"\";\n        this.yarnweight = \"yarnweight0\";\n        this.meterage = undefined;\n        this.skeinmeterageunit = \"meters\";\n        this.skeinweight = undefined;\n        this.skeinweightunit = \"grams\";\n        this.numberskeins = undefined;\n        this.purchasedat = \"\";\n        this.purchasedate = \"\";\n        this.totalpaid = undefined;\n        this.currency = \"currency0\";\n    }\n}\n","export let selectedCategory: string = \"\";\n\nconst displaycategories = function() {\n    // creates a list for each category, and if an item is also a foldersecondlevel or folderthirdlevel, creates another list;\n    const categoriesArray = [\n        { item: \"nocategory\" },\n        {\n            folderTopLevel: \"Clothing\",\n            subfolder: [\n                \"Coat/Jacket\",\n                \"Dress\",\n                \"Intimate-Apparel\",\n                \"Leggings\",\n                \"Onesies\",\n                \"Other\",\n                \"Pants\",\n                \"Robe\",\n                \"Shorts\",\n                \"Shrug/Bolero\",\n                \"Skirt\",\n                \"Sleepwear\",\n                \"Soakers\",\n                \"Sweater\",\n                \"Swimwear\",\n                \"Tops\",\n                \"Vest\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Intimate-Apparel\",\n            subfolder: [\"Bra\", \"Other\", \"Pasties\", \"Underwear\"],\n        },\n        {\n            folderSecondLevel: \"Sweater\",\n            subfolder: [\"Cardigan\", \"Other\", \"Pullover\"],\n        },\n        {\n            folderSecondLevel: \"Tops\",\n            subfolder: [\"Other\", \"Sleeveless-Top\", \"Strapless-Top\", \"Tee\"],\n        },\n\n        {\n            folderTopLevel: \"Accessories\",\n            subfolder: [\n                \"Bag\",\n                \"Belt\",\n                \"Feet/Legs\",\n                \"Hands\",\n                \"Hat\",\n                \"Jewelry\",\n                \"Neck/Torso\",\n                \"Other-Headwear\",\n            ],\n        },\n        { item: \"Medical\" },\n        {\n            folderSecondLevel: \"Bag\",\n            subfolder: [\n                \"Backpack\",\n                \"Clutch\",\n                \"Drawstring\",\n                \"Duffle\",\n                \"Laptop\",\n                \"Market-bag-(slouchy)\",\n                \"Messenger\",\n                \"Money\",\n                \"Other\",\n                \"Purse/Handbag\",\n                \"Tote\",\n                \"Wristlet\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Feet/Legs\",\n            subfolder: [\n                \"Boot-Toppers\",\n                \"Booties\",\n                \"Legwarmers\",\n                \"Other\",\n                \"Slippers\",\n                \"Socks\",\n                \"Spats\",\n            ],\n        },\n        {\n            folderThirdLevel: \"Socks\",\n            subfolder: [\n                \"Ankle\",\n                \"Knee-highs\",\n                \"Mid-calf\",\n                \"Other\",\n                \"Thigh-high\",\n                \"Toeless\",\n                \"Tube\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Hands\",\n            subfolder: [\n                \"Convertible\",\n                \"Cuffs\",\n                \"Fingerless-Gloves/Mitts\",\n                \"Gloves\",\n                \"Mittens\",\n                \"Muff\",\n                \"Other\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Hat\",\n            subfolder: [\n                \"Balaclava\",\n                \"Beanie/Toque\",\n                \"Beret/Tam\",\n                \"Billed\",\n                \"Bonnet\",\n                \"Brimmed\",\n                \"Cloche\",\n                \"Earflap\",\n                \"Other\",\n                \"Pixie\",\n                \"Stocking\",\n                \"Yarmulke\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Jewelry\",\n            subfolder: [\n                \"Ankle\",\n                \"Bracelet\",\n                \"Brooch\",\n                \"Earrings\",\n                \"Necklace\",\n                \"Other\",\n                \"Ring\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Neck/Torso\",\n            subfolder: [\n                \"Bib\",\n                \"Cape\",\n                \"Collar\",\n                \"Cowl\",\n                \"Necktie\",\n                \"Other\",\n                \"Poncho\",\n                \"Scarf\",\n                \"Shawl/Wrap\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Other-Headwear\",\n            subfolder: [\n                \"Earwarmers\",\n                \"Eye-mask\",\n                \"Hair-accessories\",\n                \"Headband\",\n                \"Headwrap\",\n                \"Kerchief\",\n                \"Other\",\n                \"Snood\",\n            ],\n        },\n\n        {\n            folderTopLevel: \"Home\",\n            subfolder: [\n                \"Blanket\",\n                \"Bookmark\",\n                \"Cleaning\",\n                \"Coaster\",\n                \"Containers\",\n                \"Cozy\",\n                \"Curtain\",\n                \"Decorative\",\n                \"Lampshade\",\n                \"Other\",\n                \"Pillow\",\n                \"Potholder\",\n                \"Rug\",\n                \"Sachet\",\n                \"Table-Setting\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Blanket\",\n            subfolder: [\"Baby-Blanket\", \"Bedspread\", \"Other\", \"Throw\"],\n        },\n        {\n            folderSecondLevel: \"Cleaning\",\n            subfolder: [\n                \"Bath-Mitt\",\n                \"Other\",\n                \"Scrubber\",\n                \"Towel\",\n                \"Washcloth/Dishcloth\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Cozy\",\n            subfolder: [\n                \"Automobile\",\n                \"Bathroom\",\n                \"Book-Cover\",\n                \"Coffee/Tea-Pot\",\n                \"Cup/Mug\",\n                \"Electronics\",\n                \"Food-Cozy\",\n                \"Glasses-Case\",\n                \"Hanger-Cover\",\n                \"Hot-Water-Bottle\",\n                \"Lip-Balm\",\n                \"Mature-Content-Toys\",\n                \"Other\",\n                \"Sports-Equipment\",\n                \"Tissue-Box-Cover\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Decorative\",\n            subfolder: [\n                \"Christmas-Stocking\",\n                \"Doily\",\n                \"Hanging-Ornament\",\n                \"Ornamental-Flower\",\n                \"Other\",\n                \"Picture-Frame\",\n                \"Wall-Hanging\",\n                \"Wreath\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Table-Setting\",\n            subfolder: [\"Napkin\", \"Other\", \"Placemat\", \"Table-Runner\", \"Tablecloth\"],\n        },\n\n        {\n            folderTopLevel: \"Toys-and-Hobbies\",\n            subfolder: [\n                \"Ball\",\n                \"Blocks\",\n                \"Costume\",\n                \"Craft\",\n                \"Doll-Clothes\",\n                \"Food\",\n                \"Game\",\n                \"Mature-Content\",\n                \"Mobile\",\n                \"Other\",\n                \"Puppet\",\n                \"Softies\",\n            ],\n        },\n        {\n            folderTopLevel: \"Craft\",\n            subfolder: [\n                \"Crochet-Hook-Holder\",\n                \"Needle-Holder\",\n                \"Other\",\n                \"Pin-Cushion\",\n                \"Tape-Measure-Cover\",\n            ],\n        },\n        {\n            folderSecondLevel: \"Doll-Clothes\",\n            subfolder: [\"Baby-Doll\", \"Child-Doll\", \"Fashion-doll\", \"Other\"],\n        },\n        {\n            folderSecondLevel: \"Softies\",\n            subfolder: [\"Animal\", \"Doll\", \"Other\", \"Plant\", \"Vehicle\"],\n        },\n\n        {\n            folderTopLevel: \"Pet\",\n            subfolder: [\"Accessory\", \"Bedding\", \"Clothing\", \"Other\", \"Toys\"],\n        },\n        {\n            folderTopLevel: \"Components\",\n            subfolder: [\n                \"Afghan-block\",\n                \"Applique/Embellishment\",\n                \"Button\",\n                \"Chart\",\n                \"Edging\",\n                \"Floral-block\",\n                \"Frog\",\n                \"Insertion\",\n                \"Other\",\n                \"Stitch-pattern\",\n                \"Tutorial\",\n            ],\n        },\n    ];\n\n    const ulSelectCategory: HTMLElement | null = document.getElementById(\n        \"selectcategory\"\n    );\n    ulSelectCategory!.style.border = \"solid 1px lightgrey\";\n    ulSelectCategory!.style.margin = \"14px 0px 14px 124px\";\n    const showFolderContent = function(event: MouseEvent): void {\n        // folder clicked\n        const folderclicked: HTMLElement | null = event.target as HTMLElement;\n        // get subfolder child of folder clicked\n        const folderUlChild: HTMLElement | null = folderclicked.querySelector(\n            \"ul.subfolder\"\n        );\n\n        if (folderUlChild !== null) {\n            folderUlChild.style.display = \"block\";\n        }\n    };\n\n    const showSubFolderContent = function(event: MouseEvent): void {\n        const subfolderClicked: HTMLElement | null = event.target as HTMLElement;\n        const subfolderUlChild: HTMLElement | null = subfolderClicked.querySelector(\n            \"ul.subsubfolder\"\n        );\n        if (subfolderUlChild !== null) {\n            subfolderUlChild.style.display = \"block\";\n        }\n    };\n    const showSubSubFolderContent = function(event: MouseEvent): void {\n        const subsubfolderClicked: HTMLElement | null = event.target as HTMLElement;\n        const subsubfolderUlChild: HTMLElement | null = subsubfolderClicked.querySelector(\n            \"ul.subsubsubfolder\"\n        );\n        if (subsubfolderUlChild !== null) {\n            subsubfolderUlChild.style.display = \"block\";\n        }\n    };\n\n    for (let i = 0; i < categoriesArray.length; i++) {\n        const firstKey: string = Object.keys(categoriesArray[i])[0];\n        if (\n            firstKey === \"folderTopLevel\" &&\n            categoriesArray[i].folderTopLevel !== undefined\n        ) {\n            // folder\n            const folderli = document.createElement(\"li\");\n            const foldername: string | undefined = categoriesArray[i].folderTopLevel;\n            const subfolder: string[] | undefined = categoriesArray[i].subfolder;\n            if (foldername !== undefined) {\n                folderli.setAttribute(\"id\", foldername!);\n                folderli.textContent = foldername!;\n            }\n\n            folderli.setAttribute(\"class\", \"folder\");\n            folderli.addEventListener(\"click\", showFolderContent);\n            ulSelectCategory?.appendChild(folderli);\n            // subfolder\n            const subfolderul = document.createElement(\"ul\");\n            subfolderul.classList.add(\"subfolder\", \"childOf\" + foldername);\n            subfolderul.style.display = \"none\";\n            folderli.appendChild(subfolderul);\n            if (subfolder !== undefined) {\n                for (let j = 0; j < subfolder.length; j++) {\n                    const subfolderli = document.createElement(\"li\");\n                    subfolderli.textContent = subfolder[j];\n                    subfolderli.classList.add(\"item\", \"childOf\" + foldername);\n                    const subfoldername: string = subfolder[j];\n                    subfolderli.setAttribute(\"id\", subfoldername);\n                    subfolderul.appendChild(subfolderli);\n                }\n            }\n        } else if (\n            firstKey === \"folderSecondLevel\" &&\n            categoriesArray[i].folderSecondLevel !== undefined\n        ) {\n            // subfolder\n            const subfoldername: string | undefined =\n                categoriesArray[i].folderSecondLevel;\n            const subfolder: string[] | undefined = categoriesArray[i].subfolder;\n            let liparent: HTMLElement | null = null;\n            if (subfoldername !== undefined) {\n                liparent = document.getElementById(subfoldername!);\n            }\n            const subfolderul = document.createElement(\"ul\");\n            const liparentClasses: DOMTokenList | undefined = liparent?.classList;\n            subfolderul.classList.add(\n                \"subfolder\",\n                \"childOf\" + subfoldername,\n                \"g\" + liparentClasses![0]\n            );\n            subfolderul.style.display = \"none\";\n            liparent?.appendChild(subfolderul);\n            liparent?.classList.remove(\"item\");\n            liparent?.classList.add(\"subfolder\");\n\n            if (subfolder !== undefined) {\n                for (let j = 0; j < subfolder.length; j++) {\n                    const subfolderli = document.createElement(\"li\");\n                    const subsubfoldername: string = subfolder[j];\n                    subfolderli.textContent = subfolder[j];\n                    subfolderli.addEventListener(\"click\", showSubFolderContent);\n                    subfolderli.classList.add(\n                        \"item\",\n                        \"childOf\" + subfoldername,\n                        \"g\" + liparentClasses![0]\n                    );\n                    subfolderli.setAttribute(\"id\", subsubfoldername);\n                    subfolderul.appendChild(subfolderli);\n                }\n            }\n        } else if (\n            firstKey === \"folderThirdLevel\" &&\n            categoriesArray[i].folderThirdLevel !== undefined\n        ) {\n            // subsubfolder: socks only\n            const subsubfoldername: string | undefined =\n                categoriesArray[i].folderThirdLevel;\n            const subsubfolder: string[] | undefined = categoriesArray[i].subfolder;\n            let liparent: HTMLElement | null = null;\n            if (subsubfoldername !== undefined) {\n                liparent = document.getElementById(subsubfoldername!);\n            }\n\n            const subsubfolderul = document.createElement(\"ul\");\n\n            subsubfolderul.style.display = \"none\";\n            liparent?.appendChild(subsubfolderul);\n            liparent?.classList.remove(\"item\");\n            liparent?.classList.add(\"subsubfolder\");\n            const liparentClasses: DOMTokenList | undefined = liparent?.classList;\n            subsubfolderul.classList.add(\n                \"subsubfolder\",\n                \"childOf\" + subsubfoldername,\n                \"g\" + liparentClasses![0],\n                \"g\" + liparentClasses![1]\n            );\n\n            if (subsubfolder !== undefined) {\n                for (let j = 0; j < subsubfolder.length; j++) {\n                    const subsubfolderli = document.createElement(\"li\");\n                    const subsubsubfoldername: string = subsubfolder[j];\n                    subsubfolderli.textContent = subsubfolder[j];\n                    subsubfolderli.classList.add(\n                        \"item\",\n                        \"childOf\" + subsubfoldername,\n                        \"g\" + liparentClasses![0],\n                        \"g\" + liparentClasses![1]\n                    );\n                    subsubfolderli.addEventListener(\"click\", showSubSubFolderContent);\n                    subsubfolderli.setAttribute(\"id\", subsubsubfoldername);\n                    subsubfolderul.appendChild(subsubfolderli);\n                }\n            }\n        } else {\n            //is item\n            const item = categoriesArray[i].item;\n            if (item !== undefined) {\n                const itemli = document.createElement(\"li\");\n                itemli.setAttribute(\"class\", \"item\");\n                itemli.textContent = item;\n                ulSelectCategory?.appendChild(itemli);\n            }\n        }\n    }\n\n    const updateInput = function(event: MouseEvent): void {\n        const clickedOnItem:\n            | boolean\n            | null = (event.target as HTMLElement).classList.contains(\"item\");\n        const clickedOnSubFolder:\n            | boolean\n            | null = (event.target as HTMLElement).classList.contains(\"subfolder\");\n        const clickedOnSubsubFolder:\n            | boolean\n            | null = (event.target as HTMLElement).classList.contains(\"subsubfolder\");\n        if (clickedOnItem && !clickedOnSubFolder && !clickedOnSubsubFolder) {\n            const liclicked: string | null = (event.target as HTMLElement)\n                .textContent;\n            const inputSelectCategory = document.getElementById(\n                \"patterncategory\"\n            ) as HTMLInputElement;\n            if (inputSelectCategory !== null && liclicked !== null) {\n                const eventTarget: HTMLElement | null = event.target as HTMLElement;\n                const eventTargetClasses: DOMTokenList | undefined =\n                    eventTarget?.classList;\n                const arrayClasses: string[] = Array.from(eventTargetClasses);\n                let catPath: string = \"\";\n                for (let c = 0; c < arrayClasses.length; c++) {\n                    const currentClass: string = arrayClasses[c];\n                    if (currentClass === \"item\") {\n                        continue;\n                    } else {\n                        let cleanCat: string = \"\";\n                        if (currentClass.substring(0, 7) === \"childOf\") {\n                            cleanCat = currentClass.replace(\"childOf\", \"\");\n                        } else if (currentClass.substring(0, 8) === \"gchildOf\") {\n                            cleanCat = currentClass.replace(\"gchildOf\", \"\");\n                        } else {\n                            cleanCat = currentClass.replace(\"ggchildOf\", \"\");\n                        }\n                        catPath += cleanCat + \" > \";\n                    }\n                }\n\n                inputSelectCategory.value = catPath + liclicked;\n                selectedCategory = catPath + liclicked;\n            }\n            //remove categories\n            const folders = document.querySelectorAll(\".folder\");\n            folders.forEach((folder) => folder.remove());\n            const items = document.querySelectorAll(\".item\");\n            items.forEach((item) => item.remove());\n        }\n    };\n    ulSelectCategory?.addEventListener(\"click\", updateInput);\n};\n\nexport default displaycategories;\n","import uniqid from \"uniqid\";\nimport React, { useState, useEffect } from \"react\";\nimport { Colorways, Yarnweight, Currency } from \"./SelectOptions\";\nimport type { Yarn } from \"../common/types\";\n\ninterface YarnSelects {\n    [key: string]: string;\n    closestcolor: string;\n    yarnweight: string;\n    skeinmeterageunit: string;\n    skeinweightunit: string;\n    currency: string;\n}\n\nconst YarnInfo = function(props: {\n    yarnID: string;\n    yarninfo: Yarn;\n    handler: (\n        event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n    ) => void;\n}) {\n    const [selectValue, setSelectValue] = useState<YarnSelects>({\n        closestcolor: \"\",\n        yarnweight: \"\",\n        skeinmeterageunit: \"\",\n        skeinweightunit: \"\",\n        currency: \"\",\n    });\n\n    const changeSelect = function(event: React.ChangeEvent<HTMLSelectElement>) {\n        const elementID = event.target.id;\n        setSelectValue((prevState) => {\n            let prevSelects = Object.assign({}, prevState);\n            prevSelects[elementID] = event.target.value;\n            return prevSelects;\n        });\n\n        props.handler(event);\n    };\n\n    const [yarnName, setYarnName] = useState<string>(\"\");\n    const [colorway, setColorway] = useState<string>(\"\");\n    const [dyelot, setDyelot] = useState<string>(\"\");\n    const [meterage, setMeterage] = useState<number | undefined>(undefined);\n    const [skeinWeight, setSkeinWeight] = useState<number | undefined>(undefined);\n    const [numberSkeins, setNumberSkeins] = useState<number | undefined>(\n        undefined\n    );\n    const [purchasedAt, setPurchasedAt] = useState<string>(\"\");\n    const [purchaseDate, setPurchaseDate] = useState<string>(\"\");\n    const [totalPaid, setTotalPaid] = useState<number | undefined>(undefined);\n\n    useEffect(() => {\n        setYarnName(props.yarninfo.yarnname);\n        setColorway(props.yarninfo.colorway);\n        setDyelot(props.yarninfo.dyelot);\n        setMeterage(props.yarninfo.meterage);\n        setSkeinWeight(props.yarninfo.skeinweight);\n        setNumberSkeins(props.yarninfo.numberskeins);\n        setPurchasedAt(props.yarninfo.purchasedat);\n        setPurchaseDate(props.yarninfo.purchasedate);\n        setTotalPaid(props.yarninfo.totalpaid);\n\n        setSelectValue((prevState) => {\n            let previousselectvalues = Object.assign({}, prevState);\n            previousselectvalues.closestcolor = props.yarninfo.closestcolor;\n            previousselectvalues.yarnweight = props.yarninfo.yarnweight;\n            previousselectvalues.skeinmeterageunit = props.yarninfo.skeinmeterageunit;\n            previousselectvalues.currency = props.yarninfo.currency;\n            return previousselectvalues;\n        });\n    }, [props]);\n\n    const setFunctions = new Map<string, any>([\n        [\"yarnname\", setYarnName],\n        [\"colorway\", setColorway],\n        [\"dyelot\", setDyelot],\n        [\"meterage\", setMeterage],\n        [\"skeinweight\", setSkeinWeight],\n        [\"numberskeins\", setNumberSkeins],\n        [\"purchasedat\", setPurchasedAt],\n        [\"purchasedate\", setPurchaseDate],\n        [\"totalpaid\", setTotalPaid],\n    ]);\n\n    const localChangeHandler = function(\n        event: React.ChangeEvent<HTMLInputElement>\n    ) {\n        const parentEventHandler = function(\n            event: React.ChangeEvent<HTMLInputElement>\n        ) {\n            props.handler(event);\n        };\n        const elementId: string = event.target.id;\n        const newvalue = event.target.value;\n        const elementStateFunction = setFunctions.get(elementId);\n        if (elementStateFunction !== undefined) {\n            elementStateFunction(newvalue);\n        }\n        parentEventHandler(event);\n    };\n\n    return (\n        <fieldset id={props.yarnID} className=\"yarnfieldset\">\n            <div className=\"newprojectlabel\">\n                <label htmlFor=\"yarnname\" className=\"yarnsubset\">\n                    Yarn\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"yarnname\"\n                    id=\"yarnname\"\n                    data-project=\"yarn\"\n                    value={yarnName}\n                    onChange={localChangeHandler}\n                />\n            </div>\n            <div className=\"colorway\">\n                <label htmlFor=\"colorway\">Colorway</label>\n                <input\n                    type=\"text\"\n                    name=\"colorway\"\n                    id=\"colorway\"\n                    value={colorway}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n                <select\n                    name=\"closestcolor\"\n                    id=\"closestcolor\"\n                    onChange={changeSelect}\n                    value={selectValue.closestcolor}\n                    data-project=\"yarn\"\n                >\n                    {Colorways.map((color, index) => (\n                        <option value={\"color\" + index} key={uniqid()}>\n                            {color}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"newprojectlabel\">\n                <label htmlFor=\"dyelot\">Dye lot</label>\n                <input\n                    name=\"dyelot\"\n                    id=\"dyelot\"\n                    type=\"text\"\n                    value={dyelot}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n            </div>\n            <div className=\"craftselect\">\n                <label htmlFor=\"yarnweight\">Weight</label>\n                <select\n                    name=\"yarnweight\"\n                    id=\"yarnweight\"\n                    onChange={changeSelect}\n                    value={selectValue.yarnweight}\n                    data-project=\"yarn\"\n                >\n                    {Yarnweight.map((weight, index) => (\n                        <option value={\"yarnweight\" + index} key={uniqid()}>\n                            {weight}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"skeindescription\">\n                <label htmlFor=\"meterage\">Per skein:</label>\n                <input\n                    id=\"meterage\"\n                    name=\"meterage\"\n                    type=\"number\"\n                    value={meterage}\n                    onChange={localChangeHandler}\n                    data-project=\"yarn\"\n                />\n                <select\n                    name=\"skeinmeterageunit\"\n                    id=\"skeinmeterageunit\"\n                    value={selectValue.skeinmeterageunit}\n                    onChange={changeSelect}\n                    data-project=\"yarn\"\n                >\n                    <option value=\"meters\">Meters</option>\n                    <option value=\"yards\">Convert to Yards</option>\n                </select>\n                <input\n                    id=\"skeinweight\"\n                    name=\"skeinweight\"\n                    type=\"number\"\n                    value={skeinWeight}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n                <select\n                    name=\"skeinweightunit\"\n                    id=\"skeinweightunit\"\n                    value={selectValue.skeinweightunit}\n                    onChange={changeSelect}\n                    data-project=\"yarn\"\n                >\n                    <option value=\"grams\">Grams</option>\n                    <option value=\"ounces\">Convert to Ounces</option>\n                </select>\n            </div>\n            <div className=\"newprojectlabel\">\n                <label htmlFor=\"numberskeins\">Skeins </label>\n                <input\n                    type=\"number\"\n                    id=\"numberskeins\"\n                    name=\"numberskeins\"\n                    value={numberSkeins}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n            </div>\n            <div className=\"newprojectlabel\">\n                <label htmlFor=\"purchasedat\">Purchased at</label>\n                <input\n                    id=\"purchasedat\"\n                    name=\"purchasedat\"\n                    type=\"text\"\n                    value={purchasedAt}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n            </div>\n            <div className=\"newprojectlabel\">\n                <label htmlFor=\"purchasedate\">Purchase date</label>\n                <input\n                    name=\"purchasedate\"\n                    id=\"purchasedate\"\n                    type=\"date\"\n                    value={purchaseDate}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n            </div>\n            <div className=\"totalpaiddiv\">\n                <label htmlFor=\"totalpaid\">Total paid </label>\n                <input\n                    type=\"number\"\n                    name=\"totalpaid\"\n                    id=\"totalpaid\"\n                    value={totalPaid}\n                    data-project=\"yarn\"\n                    onChange={localChangeHandler}\n                />\n                <select\n                    name=\"currency\"\n                    id=\"currency\"\n                    value={selectValue.currency}\n                    onChange={changeSelect}\n                    data-project=\"yarn\"\n                >\n                    {Currency.map((cur, index) => (\n                        <option value={\"currency\" + index} key={uniqid()}>\n                            {cur}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </fieldset>\n    );\n};\n\nexport default YarnInfo;\n","import uniqid from \"uniqid\";\nimport React, { useState, useEffect } from \"react\";\nimport { NeedleSizes } from \"./SelectOptions\";\nimport type { Needles } from \"../common/types\";\n\nconst DisplaySingleNeedle = function(props: {\n    needle: Needles;\n    handler: (\n        event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n    ) => void;\n}) {\n    // select needle is populated with items from select options (there are quite a few needle sizes)\n    const [selectValue, setSelectValue] = useState<string>(\"\");\n    const handleChange = function(event: React.ChangeEvent<HTMLSelectElement>) {\n        setSelectValue(event.target.value);\n        props.handler(event);\n    };\n    useEffect(() => {\n        setSelectValue(props.needle.value);\n    }, [props]);\n    return (\n        <div key={uniqid()}>\n            <select\n                name={props.needle.selectid}\n                id={props.needle.selectid}\n                value={selectValue}\n                onChange={handleChange}\n                data-project=\"info\"\n                className=\"needles\"\n            >\n                {NeedleSizes.map((needlesize) => (\n                    <option key={uniqid()} value={needlesize.value}>\n                        {needlesize.text}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport default DisplaySingleNeedle;\n","import uniqid from \"uniqid\";\nimport React, { useState, useEffect } from \"react\";\nimport { HookSizes } from \"./SelectOptions\";\nimport type { Hooks } from \"../common/types\";\n\nconst DisplaySingleHook = function(props: {\n    hook: Hooks;\n    handler: (\n        event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n    ) => void;\n}) {\n    // select hook is populated with items from select options (there are quite a few hook sizes)\n    const [selectValue, setSelectValue] = useState<string>(\"\");\n    const handleChange = function(event: React.ChangeEvent<HTMLSelectElement>) {\n        setSelectValue(event.target.value);\n        props.handler(event);\n    };\n    useEffect(() => {\n        setSelectValue(props.hook.value);\n    }, [props]);\n    return (\n        <div key={uniqid()}>\n            <select\n                name={props.hook.selectid}\n                id={props.hook.selectid}\n                value={selectValue}\n                onChange={handleChange}\n                data-project=\"info\"\n                className=\"hooks\"\n            >\n                {HookSizes.map((hooksize) => (\n                    <option key={uniqid()} value={hooksize.value}>\n                        {hooksize.text}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport default DisplaySingleHook;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../store/store\";\nimport { projectUpdated, projectPhotoAdded } from \"./projectsSlice\";\nimport { YarnEntry } from \"../common/classes\";\nimport displaycategories, { selectedCategory } from \"../patterns/categories\";\nimport DisplayProjectImage from \"./DisplayProjectImage\";\nimport YarnInfo from \"./YarnInfo\";\nimport type {\n    ProjectInfo,\n    Status,\n    ProjectFromStore,\n    Needles,\n    Hooks,\n    Yarn,\n} from \"../common/types\";\nimport {\n    updateProjectInDB,\n    uploadPhoto,\n    linkToRaveler,\n    getUserProfileImage,\n} from \"../../Firebase\";\nimport DisplaySingleNeedle from \"./DisplaySingleNeedle\";\nimport DisplaySingleHook from \"./DisplaySingleHook\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport ProjectsIcon from \"../../images/projectsicon.svg\";\nimport PlusIcon from \"../../images/circle.svg\";\n\nconst EditProject = function() {\n    // project id is available on state\n    const { state } = useLocation();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { projectid } = state;\n    const [projectID, setProjectID] = useState<string>(\"\");\n    const [username, setUsername] = useState<string>(\"\");\n    // fetches current username from store\n    const user = useSelector((state: RootState) => state.userinfo.username);\n    // fetches project data from store\n    const projectData: ProjectFromStore | undefined = useSelector(\n        (state: RootState) =>\n            state.projects.find((element) => element.projectid === projectid)\n    );\n\n    // local state hooks for form\n    const [craftType, setCraftType] = useState<string>(\"\");\n    const [projectName, setProjectName] = useState<string>(\"\");\n    const [patternAbout, setPatternAbout] = useState<string>(\"\");\n    const [patternName, setPatternName] = useState<string>(\"\");\n    const [patternUsed, setPatternUsed] = useState<string>(\"\");\n    const [projectInformation, setProjectInformation] = useState<ProjectInfo>();\n    const [projectStatus, setProjectStatus] = useState<Status>();\n    const [happinessChecked, setHappinessChecked] = useState<string>(\"\");\n    const [needleCollection, setNeedleCollection] = useState<Needles[]>([]);\n    const [hookCollection, setHookCollection] = useState<Hooks[]>([]);\n    const [selectNeedlesToRender, setSelectNeedlesToRender] = useState<\n        JSX.Element[]\n    >([]);\n    const [needlesAdded, setNeedlesAdded] = useState<number>(0);\n    const [selectHooksToRender, setSelectHooksToRender] = useState<JSX.Element[]>(\n        []\n    );\n    const [hooksAdded, setHooksAdded] = useState<number>(0);\n    const [showYarnForm, setShowYarnForm] = useState<JSX.Element[]>([]);\n    const [yarncollection, setYarnCollection] = useState<Yarn[]>([]);\n    const [projectSlug, setProjectSlug] = useState<string>(\"\");\n    const [madefor, setMadeFor] = useState<string>(\"\");\n    const fileInput = useRef<HTMLInputElement | null>(null);\n    const [profilebreadcrumbimage, setprofilebreacrumbimage] =\n        useState<string>(\"\");\n\n    const [projectdatafinished, setprojectdatafinished] =\n        useState<boolean>(false);\n\n    // easier access to correct hook for event target id\n    const setFunctions = new Map([\n        [\"projectname\", setProjectName],\n        [\"craft-select\", setCraftType],\n        [\"patternname\", setPatternName],\n    ]);\n\n    const handlerOfChange = function(\n        event: React.ChangeEvent<\n            HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n        >\n    ): void {\n        const elementId: string = event.target.id;\n        const elementDataSet = event.target.dataset.project;\n        const newvalue = event.target.value;\n        if (elementDataSet === \"newproject\") {\n            const elementStateFunction = setFunctions.get(elementId);\n            if (elementStateFunction !== undefined) {\n                elementStateFunction(newvalue);\n            }\n        } else if (elementDataSet === \"info\") {\n            if (event.target.className === \"needles\") {\n                setNeedleCollection((prevState) => {\n                    const previousInfo: Needles[] = Array.from(prevState);\n                    const selectedneedle = previousInfo.findIndex(\n                        (element) => element.selectid === elementId\n                    );\n                    previousInfo[selectedneedle].value = newvalue;\n                    return previousInfo;\n                });\n            } else if (event.target.className === \"hooks\") {\n                setHookCollection((prevState) => {\n                    const previousInfo: Hooks[] = Array.from(prevState);\n                    const selectedhook = previousInfo.findIndex(\n                        (element) => element.selectid === elementId\n                    );\n                    previousInfo[selectedhook].value = newvalue;\n                    return previousInfo;\n                });\n            } else if (elementId === \"madefor\") {\n                setProjectInformation((prevState) => {\n                    let previousInfo = Object.assign({}, prevState);\n                    previousInfo.madefor = newvalue;\n                    return previousInfo;\n                });\n                setMadeFor(newvalue);\n            } else {\n                setProjectInformation((prevState) => {\n                    let previousInfo = Object.assign({}, prevState);\n                    previousInfo[elementId] = newvalue;\n                    return previousInfo;\n                });\n            }\n        } else if (elementDataSet === \"yarn\") {\n            let indexYarnAdded = event.target.parentElement!.parentElement!.id;\n            setYarnCollection((prevState) => {\n                let currentyarncollection = Array.from(prevState);\n                const indexCurrentYarn = prevState.findIndex(\n                    (element) => element.yarnID === indexYarnAdded\n                );\n                let currentYarn = currentyarncollection[indexCurrentYarn];\n                currentYarn[elementId] = event.target.value;\n                return currentyarncollection;\n            });\n        } else if (elementDataSet === \"status\") {\n            setProjectStatus((prevState) => {\n                let previousStatus = Object.assign({}, prevState);\n                if (event.target.name === \"happiness\") {\n                    setHappinessChecked(elementId);\n                    previousStatus.happiness = elementId;\n                } else {\n                    previousStatus[elementId] = event.target.value;\n                }\n\n                return previousStatus;\n            });\n        } else if (elementDataSet === \"gauge\") {\n            if (elementId === \"gaugehorizontal\") {\n                setProjectInformation({\n                    ...projectInformation!,\n                    gauge: {\n                        ...projectInformation!.gauge,\n                        numberStsOrRepeats: Number(newvalue),\n                    },\n                });\n            } else if (elementId === \"horizontalUnits\") {\n                setProjectInformation({\n                    ...projectInformation!,\n                    gauge: { ...projectInformation!.gauge, horizontalunits: newvalue },\n                });\n            } else if (elementId === \"gaugevertical\") {\n                setProjectInformation({\n                    ...projectInformation!,\n                    gauge: { ...projectInformation!.gauge, numberRows: Number(newvalue) },\n                });\n            } else if (elementId === \"gaugepattern\") {\n                setProjectInformation({\n                    ...projectInformation!,\n                    gauge: { ...projectInformation!.gauge, gaugepattern: newvalue },\n                });\n            } else {\n                setProjectInformation({\n                    ...projectInformation!,\n                    gauge: { ...projectInformation!.gauge, gaugesize: newvalue },\n                });\n            }\n        } else {\n            console.log(\"data set is missing\");\n        }\n    };\n\n    const handlerOfSubmit = async function(\n        event: React.FormEvent<HTMLFormElement>\n    ) {\n        event.preventDefault();\n        if (projectInformation !== undefined) {\n            // update project in db\n            let gaugeNumberSts: number | null;\n            let gaugeNumberRows: number | null;\n            projectInformation.gauge.numberStsOrRepeats === undefined\n                ? (gaugeNumberSts = null)\n                : (gaugeNumberSts = projectInformation.gauge.numberStsOrRepeats);\n            projectInformation.gauge.numberRows === undefined\n                ? (gaugeNumberRows = null)\n                : (gaugeNumberRows = projectInformation.gauge.numberRows);\n            updateProjectInDB(\n                projectID,\n                craftType!,\n                projectSlug!,\n                projectName!,\n                patternUsed,\n                patternName!,\n                patternAbout!,\n                projectInformation.madefor,\n                projectInformation.linktoraveler,\n                projectInformation.finishby,\n                projectInformation.sizemade,\n                projectInformation.patternfrom,\n                selectedCategory,\n                projectInformation.selectedtags,\n                needleCollection,\n                hookCollection,\n                gaugeNumberSts,\n                projectInformation.gauge.horizontalunits,\n                gaugeNumberRows,\n                projectInformation.gauge.gaugesize,\n                projectInformation.gauge.gaugepattern,\n                JSON.stringify(yarncollection),\n                projectInformation.projectnotes,\n                projectStatus!.progressstatus,\n                projectStatus!.progressrange,\n                projectStatus!.happiness,\n                projectStatus!.starteddate,\n                projectStatus!.completeddate\n            );\n\n            // update project in store\n            dispatch(\n                projectUpdated({\n                    projectid: projectID,\n                    crafttype: craftType,\n                    projectslug: projectSlug,\n                    projectname: projectName,\n                    patternused: patternUsed,\n                    patternname: patternName,\n                    about: patternAbout,\n                    madefor: projectInformation.madefor,\n                    linktoraveler: projectInformation.linktoraveler,\n                    finishby: projectInformation.finishby,\n                    sizemade: projectInformation.sizemade,\n                    patternfrom: projectInformation.patternfrom,\n                    patterncategory: selectedCategory,\n                    selectedtags: projectInformation.selectedtags,\n                    needles: needleCollection,\n                    hooks: hookCollection,\n                    numberStsOrRepeats: projectInformation.gauge.numberStsOrRepeats,\n                    horizontalunits: projectInformation.gauge.horizontalunits,\n                    numberRows: projectInformation.gauge.numberRows,\n                    gaugesize: projectInformation.gauge.gaugesize,\n                    gaugepattern: projectInformation.gauge.gaugepattern,\n                    yarn: JSON.stringify(yarncollection),\n                    projectnotes: projectInformation.projectnotes,\n                    progressstatus: projectStatus!.progressstatus,\n                    progressrange: projectStatus!.progressrange,\n                    happiness: projectStatus!.happiness,\n                    starteddate: projectStatus!.starteddate,\n                    completeddate: projectStatus!.completeddate,\n                })\n            );\n            const cleanProjectName = projectName!\n                .toLowerCase()\n                .trim()\n                .replace(/ /g, \"-\");\n\n            // redirects to project page\n            const path = \"/notebook/\" + username + \"/projects/\" + cleanProjectName;\n            navigate(path, {\n                state: { projectid: projectID },\n            });\n        }\n    };\n\n    // needles, hooks and yarn forms are only displayed if the user clicks their respective buttons.\n    const addNeedle = function(event: React.MouseEvent) {\n        setNeedlesAdded(needlesAdded + 1);\n        const newneedlealias = \"selectneedles\" + needlesAdded;\n        // sets an initial needle value\n        setNeedleCollection((prevState) => [\n            ...prevState,\n            { selectid: newneedlealias, value: \"43\" },\n        ]);\n        // renders the needle select form\n        setSelectNeedlesToRender((prevState) => [\n            ...prevState,\n            <DisplaySingleNeedle\n                needle={{ selectid: newneedlealias, value: \"43\" }}\n                handler={handlerOfChange}\n                key={uniqid()}\n            />,\n        ]);\n    };\n\n    const addHook = function(event: React.MouseEvent) {\n        setHooksAdded(hooksAdded + 1);\n        const newhookalias = \"selecthooks\" + hooksAdded;\n        setHookCollection((prevState) => [\n            ...prevState,\n            { selectid: newhookalias, value: \"43\" },\n        ]);\n        setSelectHooksToRender((prevState) => [\n            ...prevState,\n            <DisplaySingleHook\n                hook={{ selectid: newhookalias, value: \"43\" }}\n                handler={handlerOfChange}\n                key={uniqid()}\n            />,\n        ]);\n    };\n\n    const addYarn = function(event: React.MouseEvent): void {\n        const newYarnCollectionLength: number = yarncollection.length + 1;\n        const newyarn = new YarnEntry(\"yarn\" + newYarnCollectionLength);\n        setYarnCollection((prevState) => [...prevState, newyarn]);\n        setShowYarnForm((prevState) => [\n            ...prevState,\n            <YarnInfo\n                yarnID={\"yarn\" + newYarnCollectionLength}\n                yarninfo={newyarn}\n                key={uniqid()}\n                handler={handlerOfChange}\n            />,\n        ]);\n    };\n\n    // handles adding images to projects\n    const [publicImgUrl, setPublicImgUrl] = useState<string>();\n    const [displayImageComponent, setDisplayImageComponent] =\n        useState<JSX.Element>();\n\n    const savePhoto = async function(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (\n            fileInput !== null &&\n            fileInput.current !== null &&\n            fileInput.current.files !== null\n        ) {\n            const publicUrl = await uploadPhoto(\n                projectID,\n                fileInput.current.files[0]\n            );\n\n            if (publicUrl !== false) {\n                setPublicImgUrl(publicUrl);\n                // updates store with publicurl\n                dispatch(\n                    projectPhotoAdded({ projectid: projectID, imageUrl: publicUrl })\n                );\n            }\n        }\n    };\n\n    const fetchUserProfileInformation = async () => {\n        const profileImgUrl: string | undefined = await getUserProfileImage();\n        if (profileImgUrl !== undefined) {\n            setprofilebreacrumbimage(profileImgUrl);\n        }\n    };\n\n    const cancelEdit = function(event: React.MouseEvent) {\n        const cleanProjectName = projectName!\n            .toLowerCase()\n            .trim()\n            .replace(/ /g, \"-\");\n\n        // redirects to project page\n        const path = \"/notebook/\" + username + \"/projects/\" + cleanProjectName;\n        navigate(path, {\n            state: { projectid: projectID },\n        });\n    };\n\n    useEffect(() => {\n        setProjectID(state.projectid);\n    }, [state]);\n\n    // on page load, sets project information with info from store; used when user is editing a project that already existed on db (instead of editing a new project)\n    useEffect(() => {\n        const localHandlerOfChange = function(\n            event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n        ): void {\n            const elementId: string = event.target.id;\n            const elementDataSet = event.target.dataset.project;\n            const newvalue = event.target.value;\n            if (elementDataSet === \"yarn\") {\n                let indexYarnAdded = event.target.parentElement!.parentElement!.id;\n                setYarnCollection((prevState) => {\n                    let currentyarncollection = Array.from(prevState);\n                    const indexCurrentYarn = prevState.findIndex(\n                        (element) => element.yarnID === indexYarnAdded\n                    );\n                    let currentYarn = currentyarncollection[indexCurrentYarn];\n                    currentYarn[elementId] = event.target.value;\n                    return currentyarncollection;\n                });\n            } else if (elementDataSet === \"info\") {\n                if (event.target.className === \"needles\") {\n                    setNeedleCollection((prevState) => {\n                        const previousInfo: Needles[] = Array.from(prevState);\n                        const selectedneedle = previousInfo.findIndex(\n                            (element) => element.selectid === elementId\n                        );\n                        previousInfo[selectedneedle].value = newvalue;\n                        return previousInfo;\n                    });\n                } else if (event.target.className === \"hooks\") {\n                    setHookCollection((prevState) => {\n                        const previousInfo: Hooks[] = Array.from(prevState);\n                        const selectedhook = previousInfo.findIndex(\n                            (element) => element.selectid === elementId\n                        );\n                        previousInfo[selectedhook].value = newvalue;\n                        return previousInfo;\n                    });\n                }\n            }\n        };\n\n        const renderYarnFromStorage = function(yarncollection: string) {\n            if (yarncollection !== \"\") {\n                // due to the amount of information for each yarn added to a project, the yarn array is stored in a json on the store\n                const parseCollection: Yarn[] = JSON.parse(yarncollection);\n                for (let i = 0; i < parseCollection.length; i++) {\n                    setYarnCollection((prevState) => [...prevState, parseCollection[i]]);\n                    setShowYarnForm((prevState) => [\n                        ...prevState,\n                        <YarnInfo\n                            yarnID={parseCollection[i].yarnID}\n                            yarninfo={parseCollection[i]}\n                            key={uniqid()}\n                            handler={localHandlerOfChange}\n                        />,\n                    ]);\n                }\n            }\n        };\n        // if the user is editing a project that already existed, the needles, hooks and yarn need to be rendered differently, since they are rendered with individual components\n        const addNeedlesFromStorage = function(needles: Needles[]) {\n            for (let i = 0; i < needles.length; i++) {\n                setNeedlesAdded(needlesAdded + 1);\n                setNeedleCollection((prevState) => [\n                    ...prevState,\n                    { selectid: needles[i].selectid, value: needles[i].value },\n                ]);\n                setSelectNeedlesToRender((prevState) => [\n                    ...prevState,\n                    <DisplaySingleNeedle\n                        needle={{ selectid: needles[i].selectid, value: needles[i].value }}\n                        handler={localHandlerOfChange}\n                        key={uniqid()}\n                    />,\n                ]);\n            }\n        };\n\n        const addHooksFromStorage = function(hooks: Hooks[]) {\n            for (let i = 0; i < hooks.length; i++) {\n                setHooksAdded(hooksAdded + 1);\n                setHookCollection((prevState) => [\n                    ...prevState,\n                    { selectid: hooks[i].selectid, value: hooks[i].value },\n                ]);\n                setSelectHooksToRender((prevState) => [\n                    ...prevState,\n                    <DisplaySingleHook\n                        hook={{ selectid: hooks[i].selectid, value: hooks[i].value }}\n                        handler={localHandlerOfChange}\n                        key={uniqid()}\n                    />,\n                ]);\n            }\n        };\n\n        if (!projectdatafinished && projectData !== undefined) {\n            setprojectdatafinished(true);\n            setCraftType(projectData.crafttype);\n            setProjectName(projectData.projectname);\n            setPatternAbout(projectData.pattern.about);\n            setPatternName(projectData.pattern.name);\n            setProjectInformation(projectData.projectinfo);\n            setProjectStatus(projectData.projectstatus);\n            setHappinessChecked(projectData.projectstatus.happiness);\n            renderYarnFromStorage(projectData.projectinfo.yarn);\n            addNeedlesFromStorage(projectData.projectinfo.needles);\n            addHooksFromStorage(projectData.projectinfo.hooks);\n            setPublicImgUrl(projectData.imageUrl);\n            setProjectSlug(projectData.projectslug);\n            setPatternUsed(projectData.patternused);\n        }\n    }, [projectdatafinished, projectData, needlesAdded, hooksAdded]);\n\n    useEffect(() => {\n        const renderImage = function(): void {\n            if (publicImgUrl !== undefined) {\n                setDisplayImageComponent(\n                    <DisplayProjectImage imageurl={publicImgUrl} />\n                );\n            }\n        };\n        renderImage();\n    }, [publicImgUrl]);\n    useEffect(() => {\n        setUsername(user);\n        fetchUserProfileInformation();\n    }, [user]);\n\n    useEffect(() => {\n        if (madefor !== \"\") {\n            linkToRaveler(projectInformation!.madefor).then((value) => {\n                setProjectInformation((prevState) => {\n                    let previousInfo = Object.assign({}, prevState);\n                    previousInfo.linktoraveler = value;\n                    return previousInfo;\n                });\n            });\n        }\n    }, [madefor, projectInformation]);\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry: \" + user + \"'s \" + projectName;\n    }, [user, projectName]);\n\n    if (projectInformation !== undefined) {\n        return (\n            <div>\n                <Breadcrumbs\n                    username={user}\n                    projectname={projectName}\n                    profileimage={profilebreadcrumbimage}\n                />\n                <div id=\"projectcontent\">\n                    <h2>\n                        <img src={ProjectsIcon} alt=\"projecticon\" /> Project\n                    </h2>\n                    <div id=\"project\">\n                        <div id=\"projectphoto\">\n                            {displayImageComponent}\n                            <form id=\"uploadPhotoForm\" onSubmit={savePhoto}>\n                                <label htmlFor=\"uploadphotoproject\">\n                                    <input\n                                        type=\"file\"\n                                        id=\"uploadphotoproject\"\n                                        name=\"uploadphotoproject\"\n                                        accept=\"image/*\"\n                                        ref={fileInput}\n                                    />\n                                </label>\n                                <button\n                                    id=\"submitphoto\"\n                                    type=\"submit\"\n                                    className=\"genericbutton\"\n                                >\n                                    upload\n                                </button>\n                            </form>\n                        </div>\n                        <form id=\"editprojectform\" onSubmit={handlerOfSubmit}>\n                            <div id=\"projectdescription\">\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"projectname\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        value={projectName}\n                                        id=\"projectname\"\n                                        name=\"projectname\"\n                                        data-project=\"newproject\"\n                                        onChange={handlerOfChange}\n                                    />\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"madefor\">Made for</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"madefor\"\n                                        name=\"madefor\"\n                                        data-project=\"info\"\n                                        value={projectInformation.madefor}\n                                        onChange={handlerOfChange}\n                                    />\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"linktoraveler\">Link to Raveler</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"linktoraveler\"\n                                        name=\"linktoraveler\"\n                                        data-project=\"info\"\n                                        onChange={handlerOfChange}\n                                        value={projectInformation.linktoraveler}\n                                    />\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"finishby\">Finish by</label>\n                                    <input\n                                        type=\"date\"\n                                        id=\"finishby\"\n                                        name=\"finishby\"\n                                        data-project=\"info\"\n                                        onChange={handlerOfChange}\n                                        value={projectInformation.finishby}\n                                    />\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"sizemade\">Size made</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"sizemade\"\n                                        name=\"sizemade\"\n                                        onChange={handlerOfChange}\n                                        data-project=\"info\"\n                                        value={projectInformation.sizemade}\n                                    />\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"patternfrom\">Pattern from</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"patternfrom\"\n                                        name=\"patternfrom\"\n                                        data-project=\"info\"\n                                        onChange={handlerOfChange}\n                                        value={projectInformation.patternfrom}\n                                    />\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"patternname\">Pattern name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"patternname\"\n                                        name=\"patternname\"\n                                        value={patternName}\n                                        data-project=\"newproject\"\n                                        onChange={handlerOfChange}\n                                    />\n                                </div>\n                                <div className=\"craftselect\">\n                                    <label htmlFor=\"craft-select\">Craft</label>\n                                    <select\n                                        name=\"crafts\"\n                                        id=\"craft-select\"\n                                        value={craftType}\n                                        data-project=\"newproject\"\n                                        onChange={handlerOfChange}\n                                    >\n                                        <option value=\"knitting\">Knitting</option>\n                                        <option value=\"crochet\">Crochet</option>\n                                        <option value=\"loomknitting\">Loom Knitting</option>\n                                        <option value=\"machineknitting\">Machine Knitting</option>\n                                        <option value=\"weaving\">Weaving</option>\n                                        <option value=\"spinning\">Spinning</option>\n                                    </select>\n                                </div>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"patterncategory\">Pattern category</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"patterncategory\"\n                                        id=\"patterncategory\"\n                                        placeholder=\"select category...\"\n                                        onClick={displaycategories}\n                                        onChange={handlerOfChange}\n                                        value={selectedCategory}\n                                        data-project=\"info\"\n                                    />\n                                </div>\n                                <ul id=\"selectcategory\"></ul>\n                                <div className=\"newprojectlabel\">\n                                    <label htmlFor=\"selectedtags\">Tags</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"selectedtags\"\n                                        id=\"selectedtags\"\n                                        data-project=\"info\"\n                                        value={projectInformation.selectedtags}\n                                        onChange={handlerOfChange}\n                                        title=\"Separate tags with spaces or commas\"\n                                    />\n                                </div>\n                                <div id=\"needlesandgauge\">\n                                    <h3>Needles</h3>\n                                    <div id=\"addtool\">\n                                        <button id=\"addneedle\" onClick={addNeedle} type=\"button\">\n                                            <img src={PlusIcon} alt=\"icon\" /> add needle\n                                        </button>\n                                        <button id=\"addhook\" onClick={addHook} type=\"button\">\n                                            <img src={PlusIcon} alt=\"icon\" /> add hook\n                                        </button>\n                                    </div>\n                                    <div id=\"showtools\">\n                                        {selectNeedlesToRender}\n                                        {selectHooksToRender}\n                                    </div>\n                                    <div className=\"gaugediv\">\n                                        <label htmlFor=\"gaugehorizontal\">Gauge</label>\n                                        <div id=\"completegauge\">\n                                            <input\n                                                type=\"number\"\n                                                name=\"gaugehorizontal\"\n                                                id=\"gaugehorizontal\"\n                                                data-project=\"gauge\"\n                                                onChange={handlerOfChange}\n                                                value={projectInformation.gauge.numberStsOrRepeats}\n                                            />\n                                            <select\n                                                name=\"horizontalUnits\"\n                                                id=\"horizontalUnits\"\n                                                onChange={handlerOfChange}\n                                                value={projectInformation.gauge.horizontalunits}\n                                                data-project=\"gauge\"\n                                            >\n                                                <option value=\"stitches\">stitches</option>\n                                                <option value=\"repeats\">repeats</option>\n                                            </select>\n\n                                            <input\n                                                type=\"number\"\n                                                name=\"gaugevertical\"\n                                                id=\"gaugevertical\"\n                                                onChange={handlerOfChange}\n                                                value={projectInformation.gauge.numberRows}\n                                                data-project=\"gauge\"\n                                            />\n                                            <label htmlFor=\"gaugevertical\">rows in</label>\n                                            <select\n                                                name=\"verticalUnits\"\n                                                id=\"verticalUnits\"\n                                                onChange={handlerOfChange}\n                                                value={projectInformation.gauge.gaugesize}\n                                                data-project=\"gauge\"\n                                            >\n                                                <option value=\"notselected\"> </option>\n                                                <option value=\"25\">2.5 cm</option>\n                                                <option value=\"5\">5 cm</option>\n                                                <option value=\"10\">10 cm</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"newprojectlabel\">\n                                        <label htmlFor=\"gaugepattern\">Pattern for gauge</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"gaugepattern\"\n                                            id=\"gaugepattern\"\n                                            data-project=\"gauge\"\n                                            onChange={handlerOfChange}\n                                            value={projectInformation.gauge.gaugepattern}\n                                        />\n                                    </div>\n                                </div>\n                                <h3>Yarns</h3>\n                                <div id=\"yarn\">\n                                    {showYarnForm}\n                                    <button onClick={addYarn} type=\"button\" id=\"addyarnbutton\">\n                                        <img src={PlusIcon} alt=\"icon\" /> add yarn\n                                    </button>\n                                </div>\n                                <h3>Project notes</h3>\n                                <textarea\n                                    name=\"projectnotes\"\n                                    id=\"projectnotes\"\n                                    data-project=\"info\"\n                                    onChange={handlerOfChange}\n                                    value={projectInformation.projectnotes}\n                                ></textarea>\n                                <div id=\"editprojectfooter\">\n                                    <button className=\"genericbutton\" onClick={cancelEdit}>\n                                        Cancel\n                                    </button>\n                                    <button type=\"submit\" className=\"genericbutton\">\n                                        Save Changes\n                                    </button>\n                                </div>\n                            </div>\n                            <div id=\"projectsidebar\">\n                                <div className=\"sidebarstatus\">\n                                    <label\n                                        htmlFor=\"progressstatus\"\n                                        className=\"progresstatuslabel\"\n                                    >\n                                        Status\n                                    </label>\n                                    <select\n                                        id=\"progressstatus\"\n                                        name=\"progressstatus\"\n                                        value={projectStatus!.progressstatus}\n                                        onChange={handlerOfChange}\n                                        data-project=\"status\"\n                                    >\n                                        <option value=\"inprogress\">In progress</option>\n                                        <option value=\"finished\">Finished</option>\n                                        <option value=\"hibernating\">Hibernating</option>\n                                        <option value=\"frogged\">Frogged</option>\n                                    </select>\n                                </div>\n                                <div className=\"sidebarstatus\">\n                                    <label htmlFor=\"happiness\" className=\"progresstatuslabel\">\n                                        Happiness\n                                    </label>\n                                    <div id=\"emojistatus\">\n                                        <input\n                                            type=\"radio\"\n                                            name=\"happiness\"\n                                            id=\"verysad\"\n                                            onChange={handlerOfChange}\n                                            data-project=\"status\"\n                                            checked={happinessChecked === \"verysad\"}\n                                        />\n                                        <label htmlFor=\"verysad\">\n                                            <i className=\"las la-sad-tear happinessemoji\"></i>\n                                        </label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"happiness\"\n                                            id=\"sad\"\n                                            onChange={handlerOfChange}\n                                            data-project=\"status\"\n                                            checked={happinessChecked === \"sad\"}\n                                        />\n                                        <label htmlFor=\"sad\">\n                                            <i className=\"las la-frown happinessemoji\"></i>\n                                        </label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"happiness\"\n                                            id=\"meh\"\n                                            onChange={handlerOfChange}\n                                            data-project=\"status\"\n                                            checked={happinessChecked === \"meh\"}\n                                        />\n                                        <label htmlFor=\"meh\">\n                                            <i className=\"las la-meh happinessemoji\"></i>\n                                        </label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"happiness\"\n                                            id=\"happy\"\n                                            onChange={handlerOfChange}\n                                            data-project=\"status\"\n                                            checked={happinessChecked === \"happy\"}\n                                        />\n                                        <label htmlFor=\"happy\">\n                                            <i className=\"las la-smile-beam happinessemoji\"></i>\n                                        </label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"happiness\"\n                                            id=\"veryhappy\"\n                                            onChange={handlerOfChange}\n                                            data-project=\"status\"\n                                            checked={happinessChecked === \"veryhappy\"}\n                                        />\n                                        <label htmlFor=\"veryhappy\">\n                                            <i className=\"las la-laugh happinessemoji\"></i>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"sidebarstatus\">\n                                    <label htmlFor=\"progressrange\" className=\"progresstatuslabel\">\n                                        Progress\n                                    </label>\n                                    <input\n                                        type=\"range\"\n                                        name=\"progressrange\"\n                                        id=\"progressrange\"\n                                        min=\"0\"\n                                        value={projectStatus!.progressrange}\n                                        max=\"100\"\n                                        onChange={handlerOfChange}\n                                        data-project=\"status\"\n                                    />\n                                </div>\n                                <div className=\"sidebarstatus\">\n                                    <label htmlFor=\"starteddate\" className=\"progresstatuslabel\">\n                                        Started\n                                    </label>\n                                    <input\n                                        type=\"date\"\n                                        id=\"starteddate\"\n                                        name=\"starteddate\"\n                                        onChange={handlerOfChange}\n                                        data-project=\"status\"\n                                        value={projectStatus!.starteddate}\n                                    />\n                                </div>\n                                <div className=\"sidebarstatus\">\n                                    <label htmlFor=\"completeddate\" className=\"progresstatuslabel\">\n                                        Completed\n                                    </label>\n                                    <input\n                                        type=\"date\"\n                                        id=\"completeddate\"\n                                        name=\"completeddate\"\n                                        onChange={handlerOfChange}\n                                        data-project=\"status\"\n                                        value={projectStatus!.completeddate}\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <div></div>;\n    }\n};\n\nexport default EditProject;\n","import { useState, useEffect } from \"react\";\nimport type { YarnDisplay } from \"../common/types\";\nimport { Colorways } from \"./SelectOptions\";\nimport uniqid from \"uniqid\";\n\nconst DisplayYarn = function(props: { yarn: YarnDisplay }) {\n    const [displayHowMuch, setDisplayHowMuch] = useState(false);\n    const [displayColorway, setDisplayColorway] = useState(false);\n    const [colorfamilyname, setColorfamilyname] = useState(\"\");\n    const [displayColorFamily, setDisplayColorFamily] = useState(false);\n    const [displayDyelot, setDisplayDyelot] = useState(false);\n    const [displayPurchasedAt, setDisplayPurchasedAt] = useState(false);\n    const [displayPurchaseDate, setDisplayPurchaseDate] = useState(false);\n    const [propsReady, setPropsReady] = useState(false);\n\n    useEffect(() => {\n        if (!propsReady) {\n            if (props.yarn.howmuch !== \"\") {\n                setDisplayHowMuch(true);\n            }\n            if (props.yarn.colorway !== \"\") {\n                setDisplayColorway(true);\n            }\n            if (props.yarn.closestcolor !== \"colorway0\") {\n                setColorfamilyname(getColorfamilyname(props.yarn.closestcolor));\n                setDisplayColorFamily(true);\n            }\n            if (props.yarn.dyelot !== \"\") {\n                setDisplayDyelot(true);\n            }\n            if (props.yarn.purchasedat !== \"\") {\n                setDisplayPurchasedAt(true);\n            }\n            if (props.yarn.purchasedate !== \"\") {\n                setDisplayPurchaseDate(true);\n            }\n            setPropsReady(true);\n        }\n    }, [props, propsReady]);\n\n    const getColorfamilyname = function(colorfamily: string) {\n        const colorIndex: number = Number(colorfamily.substring(5));\n        const colorfamilyname: string = Colorways[colorIndex];\n        return colorfamilyname;\n    };\n    if (\n        !displayHowMuch &&\n        !displayColorway &&\n        !displayColorFamily &&\n        !displayDyelot &&\n        !displayPurchaseDate &&\n        !displayPurchasedAt\n    ) {\n        return <div></div>;\n    } else {\n        return (\n            <div key={uniqid()}>\n                <div className=\"projectinfodiv\">\n                    <div className=\"itemDescription\">Yarn</div>\n                    <div className=\"itemValue\">{props.yarn.yarnname}</div>\n                </div>\n                {displayHowMuch && (\n                    <div className=\"projectinfodiv\">\n                        <div className=\"itemDescription\">How much?</div>\n                        <div className=\"itemValue\">{props.yarn.howmuch}</div>\n                    </div>\n                )}\n                {displayColorway && (\n                    <div className=\"projectinfodiv\">\n                        <div className=\"itemDescription\">Colorway</div>\n                        <div className=\"itemValue\">{props.yarn.colorway}</div>\n                    </div>\n                )}\n                {displayColorFamily && (\n                    <div className=\"projectinfodiv\">\n                        <div className=\"itemDescription\">Color family</div>\n                        <div className=\"itemValue\">{colorfamilyname}</div>\n                    </div>\n                )}\n                {displayDyelot && (\n                    <div className=\"projectinfodiv\">\n                        <div className=\"itemDescription\">Dyelot</div>\n                        <div className=\"itemValue\">{props.yarn.dyelot}</div>\n                    </div>\n                )}\n                {displayPurchasedAt && (\n                    <div className=\"projectinfodiv\">\n                        <div className=\"itemDescription\">Purchased at</div>\n                        <div className=\"itemValue\">{props.yarn.purchasedat}</div>\n                    </div>\n                )}\n                {displayPurchaseDate && (\n                    <div className=\"projectinfodiv\">\n                        <div className=\"itemDescription\">Purchase date</div>\n                        <div className=\"itemValue\">{props.yarn.purchasedate}</div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n};\n\nexport default DisplayYarn;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { Needles, Hooks, Yarn, Gauge, YarnDisplay } from \"../common/types\";\nimport { NeedleMap, HookMap } from \"./SelectOptions\";\nimport uniqid from \"uniqid\";\nimport DisplayYarn from \"./DisplayYarn\";\n\nconst ProjectItem = function(props: {\n    itemdescription: string;\n    itemvalue: string | Needles[] | Hooks[] | Yarn[] | Gauge;\n}) {\n    const [separateTags, setSeparateTags] = useState<string[]>();\n    const [tagsSeparated, setTagsSeparated] = useState<boolean>(false);\n    const [gaugeInfo, setGaugeInfo] = useState<string>(\"\");\n    const [gaugeReady, setGaugeReady] = useState<boolean>(false);\n    const [needlesToDisplay, setNeedlesToDisplay] = useState<string[]>([]);\n    const [needlesReady, setNeedlesReady] = useState<boolean>(false);\n    const [hooksToDisplay, setHooksToDisplay] = useState<string[]>([]);\n    const [hooksReady, setHooksReady] = useState<boolean>(false);\n    const [yarnReady, setYarnReady] = useState<boolean>(false);\n    const [yarnToDisplay, setYarnToDisplay] = useState<YarnDisplay[]>([]);\n    const [madeforusername, setMadeforusername] = useState<string>(\"\");\n\n    // tags are stored as a string and displayed separately\n    useEffect(() => {\n        if (\n            props.itemdescription === \"Tags\" &&\n            typeof props.itemvalue === \"string\" &&\n            !tagsSeparated\n        ) {\n            let tagsArray: string[] = [];\n            if (props.itemvalue.includes(\",\")) {\n                tagsArray = props.itemvalue.split(\",\").map((element) => element.trim());\n            } else {\n                tagsArray = props.itemvalue.split(\" \");\n            }\n            setSeparateTags(tagsArray);\n            setTagsSeparated(true);\n        }\n    }, [props, tagsSeparated]);\n\n    const [showlinktouser, setshowlinktouser] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (\n            props.itemdescription === \"Made for\" &&\n            typeof props.itemvalue === \"string\"\n        ) {\n            if (props.itemvalue.substring(0, 4) === \"/peo\") {\n                setshowlinktouser(true);\n                setMadeforusername(props.itemvalue.substring(8));\n            } else {\n                setMadeforusername(props.itemvalue);\n            }\n        }\n    }, [props]);\n\n    // creates a string with gauge information\n    useEffect(() => {\n        if (props.itemdescription === \"Gauge\" && !gaugeReady) {\n            let numberSts: number = 0;\n            let horizontalunits: string = \"\";\n            let numberRows: number = 0;\n            let gaugesize: string = \"\";\n            let gaugepattern: string = \"\";\n            for (const [key, value] of Object.entries(props.itemvalue)) {\n                if (key === \"numberStsOrRepeats\") {\n                    numberSts = value;\n                } else if (key === \"horizontalunits\") {\n                    horizontalunits = value;\n                } else if (key === \"numberRows\") {\n                    numberRows = value;\n                } else if (key === \"gaugesize\") {\n                    gaugesize = value;\n                } else if (key === \"gaugepattern\") {\n                    gaugepattern = value;\n                }\n            }\n            if (gaugepattern === \"\" && gaugesize === \"\") {\n                if (numberSts !== 0 && numberRows === 0) {\n                    setGaugeInfo(`${numberSts} ${horizontalunits}`);\n                    setGaugeReady(true);\n                } else if (numberSts === 0 && numberRows !== 0) {\n                    setGaugeInfo(`${numberRows} rows`);\n                    setGaugeReady(true);\n                } else if (numberSts !== 0 && numberRows !== 0) {\n                    setGaugeInfo(\n                        `${numberSts} ${horizontalunits} and ${numberRows} rows`\n                    );\n                    setGaugeReady(true);\n                }\n            } else if (gaugepattern !== \"\" && gaugesize === \"\") {\n                if (numberSts !== 0 && numberRows === 0) {\n                    setGaugeInfo(`${numberSts} ${horizontalunits} in ${gaugepattern}`);\n                    setGaugeReady(true);\n                } else if (numberSts === 0 && numberRows !== 0) {\n                    setGaugeInfo(`${numberRows} rows in ${gaugepattern}`);\n                    setGaugeReady(true);\n                } else if (numberSts !== 0 && numberRows !== 0) {\n                    setGaugeInfo(\n                        `${numberSts} ${horizontalunits} and ${numberRows} rows in ${gaugepattern}`\n                    );\n                    setGaugeReady(true);\n                }\n            } else if (gaugepattern === \"\" && gaugesize !== \"\") {\n                if (numberSts !== 0 && numberRows === 0) {\n                    setGaugeInfo(`${numberSts} ${horizontalunits} = ${gaugesize} cm`);\n                    setGaugeReady(true);\n                } else if (numberSts === 0 && numberRows !== 0) {\n                    setGaugeInfo(`${numberRows} rows = ${gaugesize} cm`);\n                    setGaugeReady(true);\n                } else if (numberSts !== 0 && numberRows !== 0) {\n                    setGaugeInfo(\n                        `${numberSts} ${horizontalunits} and ${numberRows} rows = ${gaugesize} cm`\n                    );\n                    setGaugeReady(true);\n                }\n            } else {\n                setGaugeInfo(\n                    `${numberSts} ${horizontalunits} and ${numberRows} rows = ${gaugesize} cm in ${gaugepattern}`\n                );\n                setGaugeReady(true);\n            }\n        }\n    }, [props, gaugeReady]);\n\n    useEffect(() => {\n        if (props.itemdescription === \"Needle\" && !needlesReady) {\n            const needlecollection: any = props.itemvalue;\n            needlecollection.forEach((needle: Needles) => {\n                const needleText = NeedleMap.get(needle.value);\n                if (needleText !== undefined) {\n                    setNeedlesToDisplay((needlesToDisplay) => [\n                        ...needlesToDisplay,\n                        needleText,\n                    ]);\n                }\n            });\n            setNeedlesReady(true);\n        }\n    }, [props, needlesReady]);\n\n    useEffect(() => {\n        if (props.itemdescription === \"Hook\" && !hooksReady) {\n            const hookcollection: any = props.itemvalue;\n            hookcollection.forEach((hook: Hooks) => {\n                const hookText = HookMap.get(hook.value);\n                if (hookText !== undefined) {\n                    setHooksToDisplay((hooksToDisplay) => [...hooksToDisplay, hookText]);\n                }\n            });\n            setHooksReady(true);\n        }\n    }, [props, hooksReady]);\n\n    useEffect(() => {\n        if (props.itemdescription === \"Yarn\" && !yarnReady) {\n            const yarncollectionjson: any = props.itemvalue;\n            if (yarncollectionjson !== \"\") {\n                const yarncollection: Yarn[] = JSON.parse(yarncollectionjson);\n                yarncollection.forEach((yarn) => {\n                    let yarnID = yarn.yarnID;\n                    let yarnname = yarn.yarnname;\n                    let howmuch = \"\";\n                    let purchasedat = yarn.purchasedat;\n                    let purchasedate = yarn.purchasedate;\n                    if (yarn.numberskeins !== undefined) {\n                        const numberofskeins = Number(yarn.numberskeins);\n                        const skeinweight = Number(yarn.skeinweight);\n                        const skeinWeightUnit = yarn.skeinweightunit;\n                        if (yarn.meterage !== undefined && yarn.skeinweight !== undefined) {\n                            const yarnmeterage = Number(yarn.meterage);\n                            if (yarn.skeinmeterageunit === \"meters\") {\n                                howmuch = `${numberofskeins} skeins = ${Math.round(\n                                    numberofskeins * yarnmeterage\n                                )} meters (${Math.round(\n                                    numberofskeins * yarnmeterage * 1.09\n                                )} yards), ${Math.round(\n                                    numberofskeins * skeinweight\n                                )} ${skeinWeightUnit}`;\n                            } else if (yarn.skeinmeterageunit === \"yards\") {\n                                howmuch = `${numberofskeins} skeins = ${Math.round(\n                                    numberofskeins * yarnmeterage\n                                )} yards (${Math.round(\n                                    numberofskeins * yarnmeterage * 0.914\n                                )} meters), ${Math.round(\n                                    numberofskeins * skeinweight\n                                )} ${skeinWeightUnit}`;\n                            }\n                        } else if (\n                            yarn.meterage === undefined &&\n                            yarn.skeinweight !== undefined\n                        ) {\n                            howmuch = `${numberofskeins} skeins = ${Math.round(\n                                numberofskeins * skeinweight\n                            )} ${skeinWeightUnit}`;\n                        } else if (\n                            yarn.meterage !== undefined &&\n                            yarn.skeinweight === undefined\n                        ) {\n                            const yarnmeterage = Number(yarn.meterage);\n                            if (yarn.skeinmeterageunit === \"meters\") {\n                                howmuch = `${numberofskeins} skeins = ${Math.round(\n                                    numberofskeins * yarnmeterage\n                                )} meters (${Math.round(\n                                    numberofskeins * yarnmeterage * 1.09\n                                )} yards)`;\n                            } else if (yarn.skeinmeterageunit === \"yards\") {\n                                howmuch = `${numberofskeins} skeins = ${Math.round(\n                                    numberofskeins * yarnmeterage\n                                )} yards (${Math.round(\n                                    numberofskeins * yarnmeterage * 0.914\n                                )} meters)`;\n                            }\n                        }\n                    } else {\n                        if (yarn.meterage !== undefined && yarn.skeinweight !== undefined) {\n                            if (yarn.skeinmeterageunit === \"meters\") {\n                                howmuch = `${yarn.meterage} meters (${Math.round(\n                                    Number(yarn.yarnmeterage) * 1.09\n                                )} yards), ${yarn.skeinweight} ${yarn.skeinweightunit}`;\n                            } else if (yarn.skeinmeterageunit === \"yards\") {\n                                howmuch = `${yarn.meterage} yards (${Math.round(\n                                    Number(yarn.yarnmeterage) * 0.914\n                                )} meters), ${yarn.skeinweight} ${yarn.skeinweightunit}`;\n                            }\n                        } else if (\n                            yarn.meterage === undefined &&\n                            yarn.skeinweight !== undefined\n                        ) {\n                            howmuch = `${yarn.skeinweight} ${yarn.skeinweightunit}`;\n                        } else if (\n                            yarn.meterage !== undefined &&\n                            yarn.skeinweight === undefined\n                        ) {\n                            if (yarn.skeinmeterageunit === \"meters\") {\n                                howmuch = `${yarn.meterage} meters (${Math.round(\n                                    Number(yarn.yarnmeterage) * 1.09\n                                )} yards)`;\n                            } else if (yarn.skeinmeterageunit === \"yards\") {\n                                howmuch = `${yarn.meterage} yards (${Math.round(\n                                    Number(yarn.yarnmeterage) * 0.914\n                                )} meters)`;\n                            }\n                        }\n                    }\n                    setYarnToDisplay((yarnToDisplay) => [\n                        ...yarnToDisplay,\n                        {\n                            yarnID: yarnID,\n                            yarnname: yarnname,\n                            howmuch: howmuch,\n                            colorway: yarn.colorway,\n                            dyelot: yarn.dyelot,\n                            closestcolor: yarn.closestcolor,\n                            purchasedat: purchasedat,\n                            purchasedate: purchasedate,\n                        },\n                    ]);\n                });\n            }\n            setYarnReady(true);\n        }\n    }, [props, yarnReady]);\n\n    if (\n        props.itemdescription !== \"Gauge\" &&\n        props.itemdescription !== \"Needle\" &&\n        props.itemdescription !== \"Hook\" &&\n        props.itemdescription !== \"Yarn\" &&\n        props.itemdescription !== \"Tags\" &&\n        props.itemdescription !== \"Notes\" &&\n        props.itemdescription !== \"Made for\"\n    ) {\n        return (\n            <div className=\"projectinfodiv\">\n                <div className=\"itemDescription\">{props.itemdescription}</div>\n                <div className=\"itemValue\">{props.itemvalue}</div>\n            </div>\n        );\n    } else if (\n        props.itemdescription === \"Made for\" &&\n        typeof props.itemvalue === \"string\"\n    ) {\n        return (\n            <div className=\"projectinfodiv\">\n                <div className=\"itemDescription\">Made For</div>\n                <div className=\"itemValue\">\n                    {showlinktouser ? (\n                        <Link to={props.itemvalue}>{madeforusername}</Link>\n                    ) : (\n                        <span>{madeforusername}</span>\n                    )}\n                </div>\n            </div>\n        );\n    } else if (props.itemdescription === \"Notes\") {\n        return <div>{props.itemvalue}</div>;\n    } else if (props.itemdescription === \"Tags\" && tagsSeparated) {\n        return (\n            <div className=\"projectinfodiv\">\n                <div className=\"itemDescription\">{props.itemdescription}</div>\n                <div className=\"itemValue\">\n                    {separateTags!.map((tag) => (\n                        <span key={uniqid()}>#{tag} </span>\n                    ))}\n                </div>\n            </div>\n        );\n    } else if (props.itemdescription === \"Gauge\" && gaugeReady) {\n        return (\n            <div className=\"projectinfodiv\">\n                <div className=\"itemDescription\">{props.itemdescription}</div>\n                <div className=\"itemValue\">{gaugeInfo}</div>\n            </div>\n        );\n    } else if (props.itemdescription === \"Needle\" && needlesReady) {\n        return (\n            <div className=\"projectinfodiv\">\n                <div className=\"itemDescription\">{props.itemdescription}</div>\n                <div className=\"itemValue\">\n                    <ul className=\"hooksandneedles\">\n                        {needlesToDisplay.map((needle: string) => (\n                            <li key={uniqid()}>{needle}</li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    } else if (props.itemdescription === \"Hook\" && hooksReady) {\n        return (\n            <div className=\"projectinfodiv\">\n                <div className=\"itemDescription\">{props.itemdescription}</div>\n                <div className=\"itemValue\">\n                    <ul className=\"hooksandneedles\">\n                        {hooksToDisplay.map((hook: string) => (\n                            <li key={uniqid()}>{hook}</li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    } else if (props.itemdescription === \"Yarn\" && yarnReady) {\n        return (\n            <div id=\"yarnlist\">\n                {yarnToDisplay.map((yarn: YarnDisplay) => (\n                    <div key={uniqid()}>\n                        <DisplayYarn yarn={yarn} />\n                    </div>\n                ))}\n            </div>\n        );\n    } else {\n        return <div></div>;\n    }\n};\n\nexport default ProjectItem;\n","import type { Status } from \"../common/types\";\nimport { useEffect, useState } from \"react\";\n\nconst DisplayProgress = function(props: { status: Status }) {\n    const [startdate, setstartdate] = useState<string>(props.status.starteddate);\n    const [completedate, setcompletedate] = useState<string>(\n        props.status.completeddate\n    );\n    const [happinessemoji, sethapinessemoji] = useState<string>(\"\");\n    const [progressstatus, setprogressstatus] = useState<string>(\"\");\n\n    useEffect(() => {\n        if (startdate === \"\") {\n            setstartdate(\"no date set\");\n        }\n    }, [startdate]);\n\n    useEffect(() => {\n        if (completedate === \"\" && props.status.progressstatus === \"inprogress\") {\n            setcompletedate(\"work in progress\");\n        } else if (\n            completedate === \"\" &&\n            props.status.progressstatus !== \"inprogress\"\n        ) {\n            setcompletedate(\"no date set\");\n        }\n    }, [completedate, props.status.progressstatus]);\n\n    useEffect(() => {\n        const happinessstatus = props.status.happiness;\n        switch (happinessstatus) {\n            case \"verysad\":\n                sethapinessemoji(\"las la-sad-tear happinessemoji\");\n                break;\n            case \"sad\":\n                sethapinessemoji(\"las la-frown happinessemoji\");\n                break;\n            case \"meh\":\n                sethapinessemoji(\"las la-meh happinessemoji\");\n                break;\n            case \"happy\":\n                sethapinessemoji(\"las la-smile-beam happinessemoji\");\n                break;\n            case \"veryhappy\":\n                sethapinessemoji(\"las la-laugh happinessemoji\");\n                break;\n            default:\n                sethapinessemoji(\"\");\n        }\n    }, [props.status.happiness]);\n\n    useEffect(() => {\n        const progress = props.status.progressstatus;\n        switch (progress) {\n            case \"inprogress\":\n                setprogressstatus(\"In progress\");\n                break;\n            case \"finished\":\n                setprogressstatus(\"Finished\");\n                break;\n            case \"hibernating\":\n                setprogressstatus(\"Hibernating\");\n                break;\n            case \"frogged\":\n                setprogressstatus(\"Frogged\");\n                break;\n            default:\n                setprogressstatus(\"\");\n        }\n    }, [props.status.progressstatus]);\n\n    const [progressbar, setprogressbar] = useState<string>();\n    const [progressbarunfinished, setprogressbarunfinished] = useState<string>();\n    useEffect(() => {\n        setprogressbar(props.status.progressrange + \"px\");\n        const tofinish = 100 - Number(props.status.progressrange);\n        setprogressbarunfinished(tofinish + \"px\");\n    }, [props.status.progressrange]);\n    return (\n        <div id=\"projectstatus\">\n            <div className=\"projectstatusdiv\">\n                <div className=\"itemdescription\">Status</div>\n                <div className=\"itemvalue\">\n                    {progressstatus} <i className={happinessemoji}></i>\n                </div>\n            </div>\n\n            {props.status.progressstatus !== \"finished\" && (\n                <div className=\"projectstatusdiv\">\n                    <div className=\"itemdescription\">Progress</div>\n                    <div className=\"itemvalue\">\n                        <div className=\"progressbar\">\n                            <span\n                                id=\"progresscompleted\"\n                                style={{ width: progressbar }}\n                            ></span>\n                            <span\n                                id=\"progresstocomplete\"\n                                style={{ width: progressbarunfinished }}\n                            ></span>\n                        </div>{\" \"}\n                        {props.status.progressrange}%\n                    </div>\n                </div>\n            )}\n            <div className=\"projectstatusdiv\">\n                <div className=\"itemdescription\">Started</div>\n                {startdate === \"no date set\" ? (\n                    <div className=\"itemvalue wipdate\">{startdate}</div>\n                ) : (\n                    <div className=\"itemvalue\">{startdate}</div>\n                )}\n            </div>\n            <div className=\"projectstatusdiv\">\n                <div className=\"itemdescription\">Completed</div>\n                {completedate === \"work in progress\" ||\n                    completedate === \"no date set\" ? (\n                    <div className=\"itemvalue wipdate\">{completedate}</div>\n                ) : (\n                    <div className=\"itemvalue\">{completedate}</div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default DisplayProgress;\n","import type { Pattern } from \"../common/types\";\nimport { useState, useEffect } from \"react\";\n\nconst AboutPattern = function(props: {\n    pattern: Pattern;\n    patternfrom: string;\n}) {\n    // this was meant to fetch information about the pattern, but wasn't implemented. only displays the pattern's name\n    const [patternname, setPatternname] = useState(\"\");\n    const [displayfrom, setdisplayfrom] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (props.pattern.name === \"\" && props.pattern.about === \"\") {\n            setPatternname(\"Didn't use a pattern\");\n        } else if (props.pattern.name === \"\" && props.pattern.about !== \"\") {\n            setPatternname(\"Personal pattern (not in Ravelry)\");\n        } else {\n            setPatternname(props.pattern.name);\n        }\n        if (props.patternfrom !== \"\") {\n            setdisplayfrom(true);\n        }\n    }, [props]);\n\n    return (\n        <div>\n            <h3>About this pattern</h3>\n            <div>\n                <p>{patternname}</p>\n                {displayfrom && <p>from {props.patternfrom}</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default AboutPattern;\n","export default __webpack_public_path__ + \"static/media/uploadphoto.569817cb.svg\";","export default __webpack_public_path__ + \"static/media/edit.c2ba5720.svg\";","export default __webpack_public_path__ + \"static/media/delete.5370a4d5.svg\";","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../store/store\";\nimport ProjectItem from \"./ProjectItem\";\nimport DisplayProjectImage from \"./DisplayProjectImage\";\nimport DisplayProgress from \"./DisplayProgress\";\nimport AboutPattern from \"./AboutPattern\";\nimport {\n    deleteProject,\n    deletePhoto,\n    getUserProfileInformation,\n} from \"../../Firebase\";\nimport { projectDeleted, projectPhotoDeleted } from \"./projectsSlice\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport ProjectsIcon from \"../../images/projectsicon.svg\";\nimport FavoritesIcon from \"../../images/favoritesicon.svg\";\nimport UploadPhotoIcon from \"../../images/uploadphoto.svg\";\nimport EditIcon from \"../../images/edit.svg\";\nimport TrashIcon from \"../../images/delete.svg\";\nimport type { ProfileInformation } from \"../common/types\";\n\n// fetches project com store and displays it with help from modules: displayprojectimage for project image and projectitem that displays each block of information. projectitem gets help from DisplayYarn for rendering the yarn elements\n\nconst DisplayProject = function() {\n    const { state } = useLocation();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { projectid } = state;\n    const user = useSelector((state: RootState) => state.userinfo.username);\n    const userid = useSelector((state: RootState) => state.userinfo.userID);\n    const otheruserid = useSelector(\n        (state: RootState) => state.otheruserinfo.userID\n    );\n    const [usermatchespath, setusermatchespath] = useState<boolean>(true);\n\n    // selects project from store according to its id\n    const selectProject = function(currentstate: RootState) {\n        const currentuseronpath = location.pathname\n            .substring(0, location.pathname.indexOf(\"projects\") - 1)\n            .substring(10);\n        if (user !== \"\") {\n            if (currentuseronpath === user) {\n                return currentstate.projects.find(\n                    (element) => element.projectid === projectid\n                );\n            } else {\n                return currentstate.otheruserprojects.find(\n                    (element) => element.projectid === projectid\n                );\n            }\n        }\n    };\n\n    let projectdatafromstore = useSelector((state: RootState) =>\n        selectProject(state)\n    );\n\n    useEffect(() => {\n        const currentuseronpath = location.pathname\n            .substring(0, location.pathname.indexOf(\"projects\") - 1)\n            .substring(10);\n        if (user !== \"\") {\n            if (user === currentuseronpath) {\n                setusermatchespath(true);\n                setuseronpath(user);\n            } else {\n                setusermatchespath(false);\n                setuseronpath(currentuseronpath);\n            }\n        }\n    }, [user, location.pathname]);\n\n    const [displayPattern, setDisplayPattern] = useState<boolean>(true);\n    const [displayCategory, setDisplayCategory] = useState<boolean>(true);\n    const [displayMadefor, setDisplayMadeFor] = useState<boolean>(true);\n    const [displayFinishby, setDisplayFinishby] = useState<boolean>(true);\n    const [displaySize, setDisplaySize] = useState<boolean>(true);\n    const [displayTags, setDisplayTags] = useState<boolean>(true);\n    const [displayNeedles, setDisplayNeedles] = useState<boolean>(true);\n    const [displayHooks, setDisplayHooks] = useState<boolean>(true);\n    const [displayGauge, setDisplayGauge] = useState<boolean>(true);\n    const [displayYarn, setDisplayYarn] = useState<boolean>(true);\n    const [displayNotes, setDisplayNotes] = useState<boolean>(true);\n    const [useronpath, setuseronpath] = useState<string>(\"\");\n    const [madeforname, setmadeforname] = useState<string>(\"\");\n\n    // if project page belongs to logged in user, user can edit or delete project\n    const deleteproject = function(event: React.MouseEvent) {\n        const currentprojectid = state.projectid;\n        deleteProject(currentprojectid);\n        dispatch(projectDeleted({ projectid: currentprojectid }));\n        navigate(\"/notebook/\" + user);\n    };\n\n    const editProject = function(event: React.MouseEvent) {\n        const cleanProjectName = projectdatafromstore!.projectname\n            .toLowerCase()\n            .trim()\n            .replace(/ /g, \"-\");\n\n        const path =\n            \"/notebook/\" + user + \"/projects/\" + cleanProjectName + \"/editproject\";\n        navigate(path, {\n            state: { projectid: projectdatafromstore!.projectid },\n        });\n    };\n\n    // only displays items that are filled in\n    useEffect(() => {\n        if (projectdatafromstore !== undefined) {\n            if (projectdatafromstore.pattern.name === \"\") {\n                setDisplayPattern(false);\n            }\n            if (projectdatafromstore.projectinfo.patterncategory === \"\") {\n                setDisplayCategory(false);\n            }\n\n            if (projectdatafromstore.projectinfo.finishby === \"\") {\n                setDisplayFinishby(false);\n            }\n            if (projectdatafromstore.projectinfo.sizemade === \"\") {\n                setDisplaySize(false);\n            }\n            if (projectdatafromstore.projectinfo.selectedtags === \"\") {\n                setDisplayTags(false);\n            }\n\n            if (projectdatafromstore.projectinfo.hooks.length === 0) {\n                setDisplayHooks(false);\n            }\n            if (projectdatafromstore.projectinfo.needles.length === 0) {\n                setDisplayNeedles(false);\n            }\n            if (\n                projectdatafromstore.projectinfo.gauge.numberStsOrRepeats ===\n                undefined &&\n                projectdatafromstore.projectinfo.gauge.numberRows === undefined &&\n                projectdatafromstore.projectinfo.gauge.gaugesize === \"\"\n            ) {\n                setDisplayGauge(false);\n            }\n            if (projectdatafromstore.projectinfo.yarn.length === 0) {\n                setDisplayYarn(false);\n            }\n            if (projectdatafromstore.projectinfo.projectnotes === \"\") {\n                setDisplayNotes(false);\n            }\n\n            if (projectdatafromstore.imageUrl !== \"\") {\n                setphotoexists(true);\n            }\n        }\n    }, [projectdatafromstore]);\n\n    // if link to raveler is filled in, looks for user on DB and if it exists creates link to user's profile; made for displays said link or just a name if user doesn't exist on fake ravelry\n    useEffect(() => {\n        if (projectdatafromstore !== undefined) {\n            if (projectdatafromstore.projectinfo.madefor === \"\") {\n                setDisplayMadeFor(false);\n            } else {\n                if (\n                    projectdatafromstore.projectinfo.linktoraveler !==\n                    \"can't find user\" &&\n                    projectdatafromstore.projectinfo.linktoraveler !== \"error in db\" &&\n                    projectdatafromstore.projectinfo.linktoraveler !== \"\"\n                ) {\n                    setmadeforname(projectdatafromstore.projectinfo.linktoraveler);\n                } else {\n                    setmadeforname(projectdatafromstore.projectinfo.madefor);\n                }\n            }\n        }\n    }, [projectdatafromstore]);\n\n    const deletephoto = async function(event: React.MouseEvent) {\n        const currentprojectid = state.projectid;\n        await deletePhoto(currentprojectid);\n        dispatch(projectPhotoDeleted({ projectid: currentprojectid }));\n        setphotoexists(false);\n    };\n    const [photoexists, setphotoexists] = useState<boolean>(false);\n    const [profilebreadcrumbimage, setprofilebreacrumbimage] = useState<string>(\n        \"\"\n    );\n\n    useEffect(() => {\n        const fetchUserProfileInformation = async () => {\n            if (usermatchespath) {\n                if (userid !== \"\") {\n                    const profileinfo:\n                        | ProfileInformation\n                        | false\n                        | undefined = await getUserProfileInformation(userid);\n                    if (profileinfo !== undefined && profileinfo !== false) {\n                        setprofilebreacrumbimage(profileinfo.imageurl);\n                    }\n                }\n            } else {\n                if (otheruserid !== \"\") {\n                    const profileinfo:\n                        | ProfileInformation\n                        | false\n                        | undefined = await getUserProfileInformation(otheruserid);\n                    if (profileinfo !== undefined && profileinfo !== false) {\n                        setprofilebreacrumbimage(profileinfo.imageurl);\n                    }\n                }\n            }\n        };\n        fetchUserProfileInformation();\n    }, [useronpath, userid, otheruserid, usermatchespath]);\n\n    useEffect(() => {\n        document.title =\n            \"Fake Ravelry: \" + useronpath + \"'s \" + projectdatafromstore!.projectname;\n    }, [useronpath, projectdatafromstore]);\n\n    if (projectdatafromstore === undefined) {\n        return <div></div>;\n    } else {\n        return (\n            <div id=\"displayproject\">\n                <Breadcrumbs\n                    username={useronpath}\n                    projectname={projectdatafromstore!.projectname}\n                    profileimage={profilebreadcrumbimage}\n                />\n                <div id=\"projectcontent\">\n                    <h2>\n                        <img src={ProjectsIcon} alt=\"projecticon\" /> Project\n                    </h2>\n                    <div id=\"project\">\n                        <div id=\"projectphoto\">\n                            <DisplayProjectImage imageurl={projectdatafromstore!.imageUrl} />\n                            {photoexists && (\n                                <button onClick={deletephoto} className=\"genericbutton\">\n                                    delete photo\n                                </button>\n                            )}\n                        </div>\n                        <div id=\"projectdescription\">\n                            <h2>{projectdatafromstore!.projectname}</h2>\n\n                            <div id=\"projectinfo\">\n                                <h4>Project info</h4>\n                                {displayPattern && (\n                                    <ProjectItem\n                                        itemdescription=\"Pattern\"\n                                        itemvalue={projectdatafromstore!.pattern.name}\n                                    />\n                                )}\n                                <ProjectItem\n                                    itemdescription=\"Craft\"\n                                    itemvalue={projectdatafromstore!.crafttype}\n                                />\n                                {displayCategory && (\n                                    <ProjectItem\n                                        itemdescription=\"Category\"\n                                        itemvalue={\n                                            projectdatafromstore!.projectinfo.patterncategory\n                                        }\n                                    />\n                                )}\n                                {displayMadefor && (\n                                    <ProjectItem\n                                        itemdescription=\"Made for\"\n                                        itemvalue={madeforname}\n                                    />\n                                )}\n\n                                {displayFinishby && (\n                                    <ProjectItem\n                                        itemdescription=\"Finish by\"\n                                        itemvalue={projectdatafromstore!.projectinfo.finishby}\n                                    />\n                                )}\n                                {displaySize && (\n                                    <ProjectItem\n                                        itemdescription=\"Size\"\n                                        itemvalue={projectdatafromstore!.projectinfo.sizemade}\n                                    />\n                                )}\n                                {displayTags && (\n                                    <ProjectItem\n                                        itemdescription=\"Tags\"\n                                        itemvalue={projectdatafromstore!.projectinfo.selectedtags}\n                                    />\n                                )}\n                            </div>\n                            <div id=\"needlesyarn\">\n                                {projectdatafromstore!.crafttype === \"knitting\" && (\n                                    <h4>Needles & yarn</h4>\n                                )}\n                                {projectdatafromstore!.crafttype === \"crochet\" && (\n                                    <h4>Hooks & yarn</h4>\n                                )}\n                                {projectdatafromstore!.crafttype !== \"knitting\" &&\n                                    projectdatafromstore!.crafttype !== \"crochet\" && (\n                                        <h4>Yarn</h4>\n                                    )}\n                                {displayNeedles && (\n                                    <ProjectItem\n                                        itemdescription=\"Needle\"\n                                        itemvalue={projectdatafromstore!.projectinfo.needles}\n                                    />\n                                )}\n                                {displayHooks && (\n                                    <ProjectItem\n                                        itemdescription=\"Hook\"\n                                        itemvalue={projectdatafromstore!.projectinfo.hooks}\n                                    />\n                                )}\n                                {displayGauge && (\n                                    <ProjectItem\n                                        itemdescription=\"Gauge\"\n                                        itemvalue={projectdatafromstore!.projectinfo.gauge}\n                                    />\n                                )}\n                                {displayYarn && (\n                                    <ProjectItem\n                                        itemdescription=\"Yarn\"\n                                        itemvalue={projectdatafromstore!.projectinfo.yarn}\n                                    />\n                                )}\n                            </div>\n                            <div id=\"notes\">\n                                <h4>Notes</h4>\n                                {displayNotes && (\n                                    <ProjectItem\n                                        itemdescription=\"Notes\"\n                                        itemvalue={projectdatafromstore!.projectinfo.projectnotes}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                        <div id=\"projectsidebar\">\n                            <div id=\"projectbuttons\">\n                                {usermatchespath && (\n                                    <div>\n                                        <button\n                                            id=\"editproject\"\n                                            className=\"projectbutton\"\n                                            onClick={editProject}\n                                        >\n                                            <img src={EditIcon} alt=\"editicon\" /> edit project\n                                        </button>\n                                        <button\n                                            id=\"deleteproject\"\n                                            className=\"projectbutton\"\n                                            onClick={deleteproject}\n                                        >\n                                            <img src={TrashIcon} alt=\"trashicon\" /> delete project\n                                        </button>\n                                        <button className=\"projectbutton\">\n                                            <img src={UploadPhotoIcon} alt=\"uploadicon\" /> update\n                                            photos\n                                        </button>\n                                        <button className=\"projectbutton\">\n                                            <img src={FavoritesIcon} alt=\"favoriteicon\" /> save in\n                                            favorites\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                            <DisplayProgress status={projectdatafromstore!.projectstatus} />\n                            <AboutPattern\n                                pattern={projectdatafromstore!.pattern}\n                                patternfrom={projectdatafromstore!.projectinfo.patternfrom}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default DisplayProject;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport type { UserInfo } from \"../common/types\";\n\nconst initialState: UserInfo = {\n    username: \"\",\n    name: \"\",\n    userID: \"\",\n};\nconst userInfoSlice = createSlice({\n    name: \"userinfo\",\n    initialState,\n    reducers: {\n        userAdded(state, action) {\n            const { username, name, userID } = action.payload;\n            state.username = username;\n            state.name = name;\n            state.userID = userID;\n        },\n    },\n});\n\nexport const { userAdded } = userInfoSlice.actions;\nexport default userInfoSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/more-vertical.bc0a2d66.svg\";","import {\n    getFriends,\n    getUserID,\n    getProfilePic,\n    removeFriendDB,\n} from \"../Firebase\";\nimport DisplayProfileImage from \"./profiledetails/DisplayProfileImage\";\nimport SearchFriends from \"./community/SearchFriends\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport uniqid from \"uniqid\";\nimport { RootState } from \"./store/store\";\nimport MoreVertical from \"../images/more-vertical.svg\";\n\ninterface FriendProfile {\n    friendusername: string;\n    friendimageurl: string;\n}\n\nconst Friends = function() {\n    const location = useLocation();\n    const [friendslist, setfriendslist] = useState<FriendProfile[]>([]);\n    const [friendsfetched, setfriendsfetched] = useState<boolean>(false);\n    const user = useSelector((state: RootState) => state.userinfo);\n    const [usermatchespath, setUsermatchespath] = useState<boolean>(true);\n    const [useronpathhasfriends, setuseronpathhasfriends] = useState<boolean>(\n        true\n    );\n    const [usernameonpath, setusernameonpath] = useState<string>(\"\");\n    const [pagination, setpagination] = useState<FriendProfile[][]>([]);\n    const [paginationready, setpaginationready] = useState<boolean>(false);\n    const [pagemembers, setpagemembers] = useState<FriendProfile[]>([]);\n    const [pagebuttons, setpagebuttons] = useState<JSX.Element[]>([]);\n\n    // fetches friend's usernames and profile pics from DB\n    const getFriendsInfo = async function(friendslist: string[]) {\n        let friendsDetails: FriendProfile[] = [];\n        for (let i = 0; i < friendslist.length; i++) {\n            const currentfriendusername = friendslist[i];\n            const profilepic = await getProfilePic(currentfriendusername);\n            if (profilepic !== undefined && profilepic !== false) {\n                friendsDetails.push({\n                    friendusername: currentfriendusername,\n                    friendimageurl: profilepic,\n                });\n            } else {\n                friendsDetails.push({\n                    friendusername: currentfriendusername,\n                    friendimageurl: \"\",\n                });\n            }\n        }\n        return friendsDetails;\n    };\n\n    const showRemoveFriendOption = function(event: React.MouseEvent) {\n        const divalreadyexists = document.getElementById(\"removethisfriend\");\n        if (divalreadyexists === null) {\n            const newdiv = document.createElement(\"div\");\n            const firstevent = event;\n            const friendgrid = document.getElementById(\"friendgrid\");\n            friendgrid!.appendChild(newdiv);\n            newdiv.setAttribute(\"id\", \"removethisfriend\");\n            newdiv.style.position = \"absolute\";\n            newdiv.style.top = `${event.pageY}px`;\n            newdiv.style.left = `${event.pageX}px`;\n            const para = document.createElement(\"p\");\n            const closebox = document.createElement(\"div\");\n            newdiv.appendChild(closebox);\n            newdiv.appendChild(para);\n            para.textContent = \"Remove friend\";\n            closebox.setAttribute(\"class\", \"closebox\");\n            const closebutton = document.createElement(\"button\");\n            closebutton.setAttribute(\"class\", \"genericbutton\");\n            closebutton.textContent = \"x\";\n            closebox.appendChild(closebutton);\n            closebutton.addEventListener(\"click\", () => {\n                newdiv.remove();\n            });\n            para.addEventListener(\"click\", () => {\n                removeFriend(firstevent);\n            });\n        } else {\n            divalreadyexists.remove();\n        }\n    };\n\n    // if current friend's page belongs to signed in user a removefriend button will be displayed\n\n    const removeFriend = async function(event: React.MouseEvent) {\n        const buttonid = event.currentTarget.id;\n        const friendusername = buttonid.substring(12);\n        await removeFriendDB(friendusername);\n        setfriendslist((prevState) => {\n            let friends = Array.from(prevState);\n            const friendtodelete = friends.findIndex(\n                (element) => element.friendusername === friendusername\n            );\n            friends.splice(friendtodelete, 1);\n            return friends;\n        });\n    };\n\n    useEffect(() => {\n        const fetchFriends = async function(usernametofetch: string) {\n            if (user.username !== \"\") {\n                setfriendsfetched(true);\n                if (user.username === usernametofetch) {\n                    const friends: string[] = await getFriends(user.userID); //array of friends usernames\n                    if (friends.length > 0) {\n                        const friendsinfo = await getFriendsInfo(friends);\n                        setfriendslist(friendsinfo);\n                    } else {\n                        setuseronpathhasfriends(false);\n                    }\n                } else {\n                    const userID = await getUserID(usernametofetch);\n                    if (userID !== undefined && userID !== false) {\n                        const friends: string[] = await getFriends(userID);\n                        if (friends.length > 0) {\n                            const friendsinfo = await getFriendsInfo(friends);\n                            setfriendslist(friendsinfo);\n                        } else {\n                            setuseronpathhasfriends(false);\n                        }\n                    }\n                }\n            }\n        };\n        // fetches friends for a user; either the signed in user, or other user whose username if extracted from current location)\n        if (!friendsfetched) {\n            const completePath = location.pathname.substring(8);\n            const usernameOnPath = completePath.substring(\n                0,\n                completePath.indexOf(\"/friends\")\n            );\n            fetchFriends(usernameOnPath);\n        }\n    }, [friendsfetched, location.pathname, user]);\n\n    // checks if current friend's page belongs to signed in user\n    useEffect(() => {\n        if (user.username !== \"\") {\n            const completePath = location.pathname.substring(8);\n            const usernameOnPath = completePath.substring(\n                0,\n                completePath.indexOf(\"/friends\")\n            );\n            setusernameonpath(usernameOnPath);\n            if (user.username !== usernameOnPath) {\n                setUsermatchespath(false);\n            }\n        }\n    }, [user, location.pathname]);\n\n    useEffect(() => {\n        const numbermembers = friendslist.length;\n        if (numbermembers > 0) {\n            const numberpages = Math.ceil(numbermembers / 10); // 10 members per page\n            let pages: FriendProfile[][] = [];\n            for (let i = 0; i < numberpages; i++) {\n                let currentpage = friendslist.slice(i * 10, (i + 1) * 10 - 1);\n                pages.push(currentpage);\n            }\n            setpagination(pages);\n            setpagemembers(pages[0]);\n            setpaginationready(true);\n        }\n    }, [friendslist]);\n\n    useEffect(() => {\n        const membersToDisplay = function(buttonclicked: string) {\n            const currentpage = Number(buttonclicked.substring(4));\n            const membersonpage = pagination[currentpage - 1];\n            setpagemembers(membersonpage);\n        };\n        const changePage = function(event: React.MouseEvent) {\n            const buttonid = event.currentTarget.id;\n            membersToDisplay(buttonid);\n            const buttonnode = document.getElementById(buttonid);\n            const allbuttons = document.querySelectorAll(\"button\");\n            allbuttons.forEach((button) => button.classList.remove(\"buttonactive\"));\n            if (buttonnode !== null) {\n                buttonnode.classList.add(\"buttonactive\");\n            }\n        };\n\n        if (paginationready) {\n            const neededbuttons = pagination.length;\n            let buttons: JSX.Element[] = [];\n            for (let i = 0; i < neededbuttons; i++) {\n                if (i === 0) {\n                    buttons.push(\n                        <button\n                            id={`page${i + 1}`}\n                            onClick={changePage}\n                            className=\"genericbutton buttonactive\"\n                        >\n                            {i + 1}\n                        </button>\n                    );\n                } else {\n                    buttons.push(\n                        <button\n                            id={`page${i + 1}`}\n                            onClick={changePage}\n                            className=\"genericbutton\"\n                        >\n                            {i + 1}\n                        </button>\n                    );\n                }\n            }\n            setpagebuttons(buttons);\n        }\n    }, [paginationready, pagination]);\n\n    useEffect(() => {\n        document.title = \"Fake Ravelry: \" + usernameonpath + \"'s friends\";\n    }, [usernameonpath]);\n\n    return (\n        <div id=\"communitycontent\">\n            {usermatchespath ? (\n                <h2>My friends</h2>\n            ) : (\n                <h2>{usernameonpath}'s friends</h2>\n            )}\n            {useronpathhasfriends && (\n                <div>\n                    <div id=\"friendgrid\">\n                        {paginationready &&\n                            usermatchespath &&\n                            pagemembers.map((member: FriendProfile) => (\n                                <div className=\"memberthumbnail\" key={uniqid()}>\n                                    <Link to={`/people/${member.friendusername}`}>\n                                        <DisplayProfileImage imageurl={member.friendimageurl} />\n                                    </Link>\n                                    <div className=\"friendthumbnailfooter\">\n                                        <Link to={`/people/${member.friendusername}`}>\n                                            {member.friendusername}\n                                        </Link>\n                                        <button\n                                            title=\"More\"\n                                            onClick={showRemoveFriendOption}\n                                            id={\"buttonRemove\" + member.friendusername}\n                                            className=\"removefriend\"\n                                        >\n                                            <img src={MoreVertical} alt=\"more\" />\n                                        </button>\n                                    </div>\n                                </div>\n                            ))}\n                        {paginationready &&\n                            !usermatchespath &&\n                            pagemembers.map((member: FriendProfile) => (\n                                <div className=\"memberthumbnail\" key={uniqid()}>\n                                    <Link to={`/people/${member.friendusername}`}>\n                                        <DisplayProfileImage imageurl={member.friendimageurl} />\n                                    </Link>\n                                    <div className=\"friendthumbnailfooter\">\n                                        <Link to={`/people/${member.friendusername}`}>\n                                            {member.friendusername}\n                                        </Link>\n                                    </div>\n                                </div>\n                            ))}\n                    </div>\n                    <div id=\"pagination\">\n                        {pagebuttons.map((button) => (\n                            <div key={uniqid()}>{button}</div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {!useronpathhasfriends && (\n                <div>\n                    <div>\n                        {!usermatchespath ? (\n                            <p>{usernameonpath} has no friends yet.</p>\n                        ) : (\n                            <p>You don't have any friends yet.</p>\n                        )}\n                    </div>\n                    <div>{usermatchespath ? <SearchFriends /> : null}</div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Friends;\n","import { Link } from \"react-router-dom\";\n\nconst DisplayProfileMenu = function(props: {\n    peoplepath: string;\n    signoutfunction: () => void;\n}) {\n    return (\n        <div id=\"profilemenu\">\n            <ul>\n                <li>\n                    <Link to={props.peoplepath} className=\"profilemenuelement\">\n                        <p>Profile</p>\n                        <p className=\"subnavelementdesc\">View and edit your profile</p>\n                    </Link>\n                </li>\n                <li>\n                    <p className=\"profilemenuelement\" onClick={props.signoutfunction}>\n                        Sign out\n                    </p>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default DisplayProfileMenu;\n","export default __webpack_public_path__ + \"static/media/peopleicon.1f9103b1.svg\";","import { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport PeopleIcon from \"../../images/peopleicon.svg\";\nimport FriendsIcon from \"../../images/friendsicon.svg\";\n\nconst DisplayCommunityMenu = function(props: { currentuser: string }) {\n    const [friendspath, setfriendspath] = useState<string>(\"\");\n\n    useEffect(() => {\n        setfriendspath(\"/people/\" + props.currentuser + \"/friends\");\n    }, [props.currentuser]);\n    return (\n        <div id=\"communitymenu\">\n            <ul>\n                <li className=\"menuhover\">\n                    <Link to={friendspath} className=\"communitymenuelement\">\n                        <div className=\"subnavelement\">\n                            <div>\n                                <img src={FriendsIcon} alt=\"friendsicon\" />\n                            </div>\n                            <div>\n                                <p className=\"subnavelementtitle\">Friends</p>\n                                <p className=\"subnavelementdesc\">\n                                    See what your fiber pals are making\n                                </p>\n                            </div>\n                        </div>\n                    </Link>\n                </li>\n                <li className=\"menuhover\">\n                    <Link to=\"/community\" className=\"communitymenuelement\">\n                        <div className=\"subnavelement\">\n                            <div>\n                                <img src={PeopleIcon} alt=\"peopleicon\" />\n                            </div>\n                            <div>\n                                <p className=\"subnavelementtitle\">People</p>\n                                <p className=\"subnavelementdesc\">\n                                    Find and follow other crafters\n                                </p>\n                            </div>\n                        </div>\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default DisplayCommunityMenu;\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"../images/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport DisplayProfileImage from \"./profiledetails/DisplayProfileImage\";\nimport DisplayProfileMenu from \"./profiledetails/DisplayProfileMenu\";\nimport DisplayCommunityMenu from \"./community/DisplayCommunityMenu\";\nimport { signOutUser, getUserProfileImage } from \"../Firebase\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"./store/store\";\n\nconst Navigation = function(props: { username: string }) {\n    const [menushown, setmenushown] = useState(false);\n    const [communitymenushown, setcommunitymenushown] = useState<boolean>(false);\n    const [username, setUsername] = useState<string>(props.username);\n    const [peoplepath, setPeoplePath] = useState<string>(\n        \"/people/\" + props.username\n    );\n    const [notebookpath, setNotebookpath] = useState<string>(\n        \"/notebook/\" + props.username\n    );\n    const [profileimg, setprofileimg] = useState<string>(\"\");\n    const user = useSelector((state: RootState) => state.userinfo.username);\n    const activateMenu = function(event: React.MouseEvent) {\n        const target = event.currentTarget;\n        const targetdiv = target.querySelector(\".navelementselected\");\n        if (targetdiv !== null) {\n            targetdiv.classList.add(\"activemenunotprofile\");\n            target.addEventListener(\"mouseleave\", () => {\n                targetdiv.classList.remove(\"activemenunotprofile\");\n            });\n        }\n    };\n\n    const [imagefetched, setimagefetched] = useState(false);\n\n    const showMenu = function(event: React.MouseEvent) {\n        if (!menushown) {\n            setmenushown(true);\n            const menuitemdivselected = document.getElementById(\"selectedmenuitem\");\n            menuitemdivselected!.setAttribute(\"class\", \"activemenu\");\n        }\n    };\n\n    const showCommunityMenu = function(event: React.MouseEvent) {\n        if (!communitymenushown) {\n            setcommunitymenushown(true);\n            const communityelement = document.getElementById(\"selectedcommunityitem\");\n            communityelement!.setAttribute(\"class\", \"activemenunotprofile\");\n        }\n    };\n\n    const signOut = function() {\n        signOutUser();\n        window.location.reload();\n    };\n\n    useEffect(() => {\n        const fetchUserProfileImage = async function() {\n            setimagefetched(true);\n            const profileimgurl = await getUserProfileImage();\n            setprofileimg(profileimgurl);\n        };\n        if (!imagefetched) {\n            fetchUserProfileImage();\n        }\n    }, [imagefetched]);\n\n    useEffect(() => {\n        setUsername(user);\n        setPeoplePath(\"/people/\" + user);\n        setNotebookpath(\"/notebook/\" + user);\n    }, [user]);\n\n    useEffect(() => {\n        if (communitymenushown) {\n            const communitynavelement = document.getElementById(\"communitynav\");\n            const menuitem = document.getElementById(\"selectedcommunityitem\");\n            if (communitynavelement !== null) {\n                communitynavelement.addEventListener(\"mouseleave\", () => {\n                    setcommunitymenushown(false);\n                    if (menuitem !== null) {\n                        menuitem.classList.remove(\"activemenunotprofile\");\n                    }\n                });\n            }\n        }\n    }, [communitymenushown]);\n\n    useEffect(() => {\n        if (menushown) {\n            const profileimg = document.getElementById(\"profileimage\");\n            const menuitemdivselected = document.getElementById(\"selectedmenuitem\");\n            if (profileimg !== null) {\n                profileimg.addEventListener(\"mouseleave\", () => {\n                    setmenushown(false);\n                    menuitemdivselected!.classList.remove(\"activemenu\");\n                });\n            }\n        }\n    }, [menushown]);\n\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">\n                        <span id=\"logo\">\n                            <img src={logo} alt=\"fakeravelrylogo\" />\n                        </span>\n                    </Link>\n                </li>\n                <li onMouseEnter={activateMenu}>\n                    <div className=\"menuitem\">\n                        <Link to=\"/\" className=\"standardmenu\">\n                            patterns\n                        </Link>\n                        <div className=\"navelementselected\"></div>\n                    </div>\n                </li>\n                <li onMouseEnter={activateMenu}>\n                    <div className=\"menuitem\">\n                        <Link to=\"/\" className=\"standardmenu\">\n                            yarns\n                        </Link>\n                        <div className=\"navelementselected\"></div>\n                    </div>\n                </li>\n                <li onMouseEnter={showCommunityMenu} id=\"communitynav\">\n                    <div className=\"menuitem\">\n                        <Link to=\"/community\" className=\"standardmenu\">\n                            community\n                        </Link>\n                        <div id=\"selectedcommunityitem\"></div>\n                        {communitymenushown && (\n                            <DisplayCommunityMenu currentuser={username} />\n                        )}\n                    </div>\n                </li>\n                <li onMouseEnter={activateMenu}>\n                    <div className=\"menuitem\">\n                        <Link to=\"/\" className=\"standardmenu\">\n                            support\n                        </Link>\n                        <div className=\"navelementselected\"></div>\n                    </div>\n                </li>\n                <li id=\"linktonotebook\" onMouseEnter={activateMenu}>\n                    <div className=\"menuitem\">\n                        <Link to={notebookpath} className=\"standardmenu\">\n                            my notebook\n                        </Link>\n                        <div className=\"navelementselected\"></div>\n                    </div>\n                </li>\n                <li id=\"profileimage\" onMouseEnter={showMenu}>\n                    <Link to={peoplepath}>\n                        <DisplayProfileImage imageurl={profileimg} />\n                    </Link>\n                    <div id=\"selectedmenuitem\" className=\"\"></div>\n                    {menushown && (\n                        <DisplayProfileMenu\n                            peoplepath={peoplepath}\n                            signoutfunction={signOut}\n                        />\n                    )}\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import { Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Community from \"./components/Community\";\nimport Login from \"./components/Login\";\nimport Notebook from \"./components/Notebook\";\nimport Profile from \"./components/Profile\";\nimport EditProfile from \"./components/profiledetails/EditProfile\";\nimport Welcome from \"./components/Welcome\";\nimport Signup from \"./components/Signup\";\nimport { auth, getInfo, fetchUserInfo } from \"./Firebase\";\nimport NewProject from \"./components/NewProject\";\nimport EditProject from \"./components/projects/EditProject\";\nimport DisplayProject from \"./components/projects/DisplayProject\";\nimport { useDispatch } from \"react-redux\";\nimport { userAdded } from \"./components/store/userInfoSlice\";\nimport { projectFetchedFromDB } from \"./components/projects/projectsSlice\";\nimport Friends from \"./components/Friends\";\nimport Navigation from \"./components/Navigation\";\n\nconst App = function() {\n    const [userSignedIn, setUserSignedIn] = useState<boolean>(false);\n    const [username, setUsername] = useState<string>(\"\");\n    const [name, setName] = useState<string>(\"\");\n    const [userID, setUserID] = useState<string>(\"\");\n    const [projectsFetched, setProjectsFetched] = useState<boolean>(false);\n\n    const dispatch = useDispatch();\n    // authentication observer\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                setUserSignedIn(true);\n                const userInfo = await getInfo(\"both\");\n                setUsername(userInfo[0]);\n                setName(userInfo[1]);\n                setUserID(userInfo[2]);\n            } else {\n                setUserSignedIn(false);\n            }\n        });\n    }, []);\n\n    // if user is signed in, fetches user's projects from DB and dispatches to store\n    useEffect(() => {\n        const fetchUserData = async function() {\n            const projectsInDb = await fetchUserInfo();\n            if (projectsInDb !== undefined && projectsInDb !== false) {\n                const addallprojects = new Promise((resolve, reject) => {\n                    projectsInDb.forEach((project) => {\n                        let gaugeNumberSts: number;\n                        let gaugeNumberRows: number;\n                        project.data().projectinfo.gauge.numberStsOrRepeats === null\n                            ? (gaugeNumberSts = 0)\n                            : (gaugeNumberSts = project.data().projectinfo.gauge\n                                .numberStsOrRepeats);\n                        project.data().projectinfo.gauge.numberRows === null\n                            ? (gaugeNumberRows = 0)\n                            : (gaugeNumberRows = project.data().projectinfo.gauge.numberRows);\n                        dispatch(\n                            projectFetchedFromDB({\n                                projectid: project.id,\n                                imageUrl: project.data().imageUrl,\n                                crafttype: project.data().crafttype,\n                                projectslug: project.data().projectslug,\n                                projectname: project.data().projectname,\n                                patternused: project.data().patternused,\n                                patternname: project.data().pattern.name,\n                                about: project.data().pattern.about,\n                                madefor: project.data().projectinfo.madefor,\n                                linktoraveler: project.data().projectinfo.linktoraveler,\n                                finishby: project.data().projectinfo.finishby,\n                                sizemade: project.data().projectinfo.sizemade,\n                                patternfrom: project.data().projectinfo.patternfrom,\n                                patterncategory: project.data().projectinfo.patterncategory,\n                                selectedtags: project.data().projectinfo.tags,\n                                needles: project.data().projectinfo.needles,\n                                hooks: project.data().projectinfo.hooks,\n                                numberStsOrRepeats: gaugeNumberSts,\n                                horizontalunits: project.data().projectinfo.gauge\n                                    .horizontalunits,\n                                numberRows: gaugeNumberRows,\n                                gaugesize: project.data().projectinfo.gauge.gaugesize,\n                                gaugepattern: project.data().projectinfo.gauge.gaugepattern,\n                                yarn: project.data().projectinfo.yarn,\n                                projectnotes: project.data().projectinfo.projectnotes,\n                                progressstatus: project.data().projectstatus.progressstatus,\n                                progressrange: project.data().projectstatus.progressrange,\n                                happiness: project.data().projectstatus.happiness,\n                                starteddate: project.data().projectstatus.starteddate,\n                                completeddate: project.data().projectstatus.completeddate,\n                            })\n                        );\n                    });\n                });\n                addallprojects\n                    .then((resolve) => setProjectsFetched(true))\n                    .catch((reject) => console.log(\"error\"));\n            }\n        };\n        if (userSignedIn && !projectsFetched) {\n            fetchUserData();\n        }\n    }, [userSignedIn, dispatch, projectsFetched]);\n\n    // if user is logged in, dispatches user info to store\n    useEffect(() => {\n        if (userID !== \"\") {\n            dispatch(\n                userAdded({\n                    username: username,\n                    name: name,\n                    userID: userID,\n                })\n            );\n        }\n    }, [userID, dispatch, name, username]);\n\n    // if user is not signed in, only display the login page or sign up page\n    if (!userSignedIn) {\n        return (\n            <Routes>\n                <Route path=\"/\" element={<Login />} />\n                <Route path=\"/signup\" element={<Signup />} />\n                <Route path=\"/people/*\" element={<Login />} />\n                <Route path=\"/community\" element={<Login />} />\n                <Route path=\"/messages\" element={<Login />} />\n                <Route path=\"/notebook/*\" element={<Login />} />\n            </Routes>\n        );\n    } else {\n        return (\n            <div>\n                <div id=\"navcontainer\">\n                    <Navigation username={username} />\n                </div>\n                <Routes>\n                    <Route path=\"/\" element={<Welcome />} />\n                    <Route path=\"/people/:id\" element={<Profile />} />\n                    <Route path=\"/people/:id/edit\" element={<EditProfile />} />\n                    <Route path=\"/community\" element={<Community />} />\n                    <Route path=\"/people/:id/friends\" element={<Friends />} />\n                    <Route path=\"/notebook/:id/\" element={<Notebook />} />\n                    <Route path=\"/notebook/:id/newproject/*\" element={<NewProject />} />\n                    <Route\n                        path=\"/notebook/:id/projects/:id/editproject/\"\n                        element={<EditProject />}\n                    />\n                    <Route\n                        path=\"/notebook/:id/projects/:id\"\n                        element={<DisplayProject />}\n                    />\n                </Routes>\n                <footer>\n                    <p>\n                        <a href=\"https:github.com/paposeco/\">\n                            <span>\n                                <i className=\"lab la-github\"></i>\n                            </span>\n                            Fabi\n                        </a>\n                    </p>\n                </footer>\n            </div>\n        );\n    }\n};\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport projectsReducer from \"../projects/projectsSlice\";\nimport userReducer from \"./userInfoSlice\";\nimport otherUserReducer from \"./otherUserInfoSlice\";\nimport otherUserProjectsReducer from \"../projects/projectsSliceOtherUser\";\n\nexport const store = configureStore({\n    reducer: {\n        projects: projectsReducer,\n        userinfo: userReducer,\n        otheruserinfo: otherUserReducer,\n        otheruserprojects: otherUserProjectsReducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./components/store/store\";\nimport \"./styles/stylesheet.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter basename={`/${process.env.PUBLIC_URL}`}>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}